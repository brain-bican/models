from __future__ import annotations 

import re
import sys
from datetime import (
    date,
    datetime,
    time
)
from decimal import Decimal 
from enum import Enum 
from typing import (
    Any,
    ClassVar,
    Dict,
    List,
    Literal,
    Optional,
    Union
)

from pydantic import (
    BaseModel,
    ConfigDict,
    Field,
    RootModel,
    field_validator
)


metamodel_version = "None"
version = "None"


class ConfiguredBaseModel(BaseModel):
    model_config = ConfigDict(
        validate_assignment = True,
        validate_default = True,
        extra = "forbid",
        arbitrary_types_allowed = True,
        use_enum_values = True,
        strict = False,
    )
    pass




class LinkMLMeta(RootModel):
    root: Dict[str, Any] = {}
    model_config = ConfigDict(frozen=True)

    def __getattr__(self, key:str):
        return getattr(self.root, key)

    def __getitem__(self, key:str):
        return self.root[key]

    def __setitem__(self, key:str, value):
        self.root[key] = value

    def __contains__(self, key:str) -> bool:
        return key in self.root


linkml_meta = LinkMLMeta({'default_prefix': 'bican',
     'default_range': 'string',
     'description': 'The BKE Taxonomy Schema represents the structure of '
                    'classifications of cell types and their hierarchical '
                    'relationships in the mammalian brain.',
     'id': 'https://w3id.org/brain-bican/bke-taxonomy',
     'imports': ['bican_biolink',
                 'bican_prov',
                 'bican_core',
                 'genome_annotation',
                 'anatomical_structure',
                 'linkml:types'],
     'name': 'BKETaxonomy',
     'prefixes': {'bican': {'prefix_prefix': 'bican',
                            'prefix_reference': 'https://identifiers.org/brain-bican/vocab/'},
                  'linkml': {'prefix_prefix': 'linkml',
                             'prefix_reference': 'https://w3id.org/linkml/'}},
     'source_file': 'bke_taxonomy.yaml',
     'title': 'BKE Taxonomy Schema'} )

class DigestType(str, Enum):
    SHA1 = "spdx:checksumAlgorithm_sha1"
    MD5 = "spdx:checksumAlgorithm_md5"
    SHA256 = "spdx:checksumAlgorithm_sha256"


class BioType(str, Enum):
    protein_coding = "protein_coding"
    noncoding = "noncoding"


class AuthorityType(str, Enum):
    ENSEMBL = "ENSEMBL"
    NCBI = "NCBI"


class ANATOMICALDIRECTION(str, Enum):
    """
    A controlled vocabulary term defining axis direction in terms of anatomical direction.
    """
    left_to_right = "left_to_right"
    posterior_to_anterior = "posterior_to_anterior"
    inferior_to_superior = "inferior_to_superior"
    superior_to_inferior = "superior_to_inferior"
    anterior_to_posterior = "anterior_to_posterior"


class DISTANCEUNIT(str, Enum):
    millimeter = "mm"
    micrometer = "um"
    meter = "m"


class AbbreviationEntityType(str, Enum):
    # Abbreviation denotes a Cell Type entity.
    cell_type = "cell_type"
    # Abbreviation denotes a Gene entity.
    gene = "gene"
    # Abbreviation denotes a Anatomical Structure entity.
    anatomical = "anatomical"


class CellTypeSetType(str, Enum):
    # Denotes CellTypeSet is at Taxonomic level.
    taxonomic_level = "taxonomic_level"
    # Denotes CellTypeSet is at Neighborhood level.
    neighborhood = "neighborhood"



class OntologyClass(ConfiguredBaseModel):
    """
    a concept or class in an ontology, vocabulary or thesaurus. Note that nodes in a biolink compatible KG can be considered both instances of biolink classes, and OWL classes in their own right. In general you should not need to use this class directly. Instead, use the appropriate biolink class. For example, for the GO concept of endocytosis (GO:0006897), use bl:BiologicalProcess as the type.
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'class_uri': 'biolink:OntologyClass',
         'comments': ["This is modeled as a mixin. 'ontology class' should not be the "
                      'primary type of a node in the KG. Instead you should use an '
                      'informative bioloink category, such as AnatomicalEntity (for '
                      'Uberon classes), ChemicalSubstance (for CHEBI or CHEMBL), etc',
                      'Note that formally this is a metaclass. Instances of this class '
                      "are instances in the graph, but can be the object of 'type' "
                      'edges. For example, if we had a node in the graph representing '
                      'a specific brain of a specific patient (e.g brain001), this '
                      'could have a category of bl:Sample, and by typed more '
                      'specifically with an ontology class UBERON:nnn, which has as '
                      'category bl:AnatomicalEntity'],
         'definition_uri': 'https://w3id.org/biolink/vocab/OntologyClass',
         'exact_mappings': ['owl:Class', 'schema:Class'],
         'examples': [{'description': "the class 'brain' from the Uberon anatomy "
                                      'ontology',
                       'value': 'UBERON:0000955'}],
         'from_schema': 'https://w3id.org/biolink/bican-biolink-schema',
         'id_prefixes': ['MESH', 'UMLS', 'KEGG.BRITE'],
         'mixin': True,
         'see_also': ['https://github.com/biolink/biolink-model/issues/486']})

    id: str = Field(default=..., description="""A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })


class Annotation(ConfiguredBaseModel):
    """
    Biolink Model root class for entity annotations.
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'abstract': True,
         'class_uri': 'biolink:Annotation',
         'definition_uri': 'https://w3id.org/biolink/vocab/Annotation',
         'from_schema': 'https://w3id.org/biolink/bican-biolink-schema'})

    pass


class QuantityValue(Annotation):
    """
    A value of an attribute that is quantitative and measurable, expressed as a combination of a unit and a numeric value
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'class_uri': 'biolink:QuantityValue',
         'definition_uri': 'https://w3id.org/biolink/vocab/QuantityValue',
         'from_schema': 'https://w3id.org/biolink/bican-biolink-schema'})

    has_unit: Optional[str] = Field(default=None, description="""connects a quantity value to a unit""", json_schema_extra = { "linkml_meta": {'alias': 'has_unit',
         'close_mappings': ['EFO:0001697', 'UO-PROPERTY:is_unit_of'],
         'definition_uri': 'https://w3id.org/biolink/vocab/has_unit',
         'domain': 'quantity value',
         'domain_of': ['quantity value'],
         'exact_mappings': ['qud:unit', 'IAO:0000039'],
         'in_subset': ['samples'],
         'narrow_mappings': ['SNOMED:has_concentration_strength_denominator_unit',
                             'SNOMED:has_concentration_strength_numerator_unit',
                             'SNOMED:has_presentation_strength_denominator_unit',
                             'SNOMED:has_presentation_strength_numerator_unit',
                             'SNOMED:has_unit_of_presentation'],
         'slot_uri': 'biolink:has_unit'} })
    has_numeric_value: Optional[float] = Field(default=None, description="""connects a quantity value to a number""", json_schema_extra = { "linkml_meta": {'alias': 'has_numeric_value',
         'definition_uri': 'https://w3id.org/biolink/vocab/has_numeric_value',
         'domain': 'quantity value',
         'domain_of': ['quantity value'],
         'exact_mappings': ['qud:quantityValue'],
         'in_subset': ['samples'],
         'slot_uri': 'biolink:has_numeric_value'} })


class Entity(ConfiguredBaseModel):
    """
    Root Biolink Model class for all things and informational relationships, real or imagined.
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'abstract': True,
         'class_uri': 'biolink:Entity',
         'definition_uri': 'https://w3id.org/biolink/vocab/Entity',
         'from_schema': 'https://w3id.org/biolink/bican-biolink-schema'})

    id: str = Field(default=..., description="""A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })
    iri: Optional[str] = Field(default=None, description="""An IRI for an entity. This is determined by the id using expansion rules.""", json_schema_extra = { "linkml_meta": {'alias': 'iri',
         'definition_uri': 'https://w3id.org/biolink/vocab/iri',
         'domain_of': ['attribute',
                       'entity',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P854'],
         'in_subset': ['translator_minimal', 'samples'],
         'slot_uri': 'biolink:iri'} })
    category: List[Literal["https://w3id.org/biolink/vocab/Entity","biolink:Entity"]] = Field(default=["biolink:Entity"], description="""Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}.""", json_schema_extra = { "linkml_meta": {'alias': 'category',
         'definition_uri': 'https://w3id.org/biolink/vocab/category',
         'designates_type': True,
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'type',
         'is_class_field': True,
         'slot_uri': 'biolink:category'} })
    type: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'type',
         'definition_uri': 'https://w3id.org/biolink/vocab/type',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['gff3:type', 'gpi:DB_Object_Type'],
         'mappings': ['rdf:type'],
         'slot_uri': 'rdf:type'} })
    name: Optional[str] = Field(default=None, description="""A human-readable name for an attribute or entity.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })
    description: Optional[str] = Field(default=None, description="""a human-readable description of an entity""", json_schema_extra = { "linkml_meta": {'alias': 'description',
         'aliases': ['definition'],
         'definition_uri': 'https://w3id.org/biolink/vocab/description',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'ColorPalette'],
         'exact_mappings': ['IAO:0000115', 'skos:definitions'],
         'in_subset': ['translator_minimal'],
         'mappings': ['dct:description'],
         'narrow_mappings': ['gff3:Description'],
         'slot_uri': 'dct:description'} })
    has_attribute: Optional[List[str]] = Field(default=None, description="""connects any entity to an attribute""", json_schema_extra = { "linkml_meta": {'alias': 'has_attribute',
         'close_mappings': ['OBI:0001927'],
         'definition_uri': 'https://w3id.org/biolink/vocab/has_attribute',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['SIO:000008'],
         'in_subset': ['samples'],
         'narrow_mappings': ['OBAN:association_has_subject_property',
                             'OBAN:association_has_object_property',
                             'CPT:has_possibly_included_panel_element',
                             'DRUGBANK:category',
                             'EFO:is_executed_in',
                             'HANCESTRO:0301',
                             'LOINC:has_action_guidance',
                             'LOINC:has_adjustment',
                             'LOINC:has_aggregation_view',
                             'LOINC:has_approach_guidance',
                             'LOINC:has_divisor',
                             'LOINC:has_exam',
                             'LOINC:has_method',
                             'LOINC:has_modality_subtype',
                             'LOINC:has_object_guidance',
                             'LOINC:has_scale',
                             'LOINC:has_suffix',
                             'LOINC:has_time_aspect',
                             'LOINC:has_time_modifier',
                             'LOINC:has_timing_of',
                             'NCIT:R88',
                             'NCIT:eo_disease_has_property_or_attribute',
                             'NCIT:has_data_element',
                             'NCIT:has_pharmaceutical_administration_method',
                             'NCIT:has_pharmaceutical_basic_dose_form',
                             'NCIT:has_pharmaceutical_intended_site',
                             'NCIT:has_pharmaceutical_release_characteristics',
                             'NCIT:has_pharmaceutical_state_of_matter',
                             'NCIT:has_pharmaceutical_transformation',
                             'NCIT:is_qualified_by',
                             'NCIT:qualifier_applies_to',
                             'NCIT:role_has_domain',
                             'NCIT:role_has_range',
                             'INO:0000154',
                             'HANCESTRO:0308',
                             'OMIM:has_inheritance_type',
                             'orphanet:C016',
                             'orphanet:C017',
                             'RO:0000053',
                             'RO:0000086',
                             'RO:0000087',
                             'SNOMED:has_access',
                             'SNOMED:has_clinical_course',
                             'SNOMED:has_count_of_base_of_active_ingredient',
                             'SNOMED:has_dose_form_administration_method',
                             'SNOMED:has_dose_form_release_characteristic',
                             'SNOMED:has_dose_form_transformation',
                             'SNOMED:has_finding_context',
                             'SNOMED:has_finding_informer',
                             'SNOMED:has_inherent_attribute',
                             'SNOMED:has_intent',
                             'SNOMED:has_interpretation',
                             'SNOMED:has_laterality',
                             'SNOMED:has_measurement_method',
                             'SNOMED:has_method',
                             'SNOMED:has_priority',
                             'SNOMED:has_procedure_context',
                             'SNOMED:has_process_duration',
                             'SNOMED:has_property',
                             'SNOMED:has_revision_status',
                             'SNOMED:has_scale_type',
                             'SNOMED:has_severity',
                             'SNOMED:has_specimen',
                             'SNOMED:has_state_of_matter',
                             'SNOMED:has_subject_relationship_context',
                             'SNOMED:has_surgical_approach',
                             'SNOMED:has_technique',
                             'SNOMED:has_temporal_context',
                             'SNOMED:has_time_aspect',
                             'SNOMED:has_units',
                             'UMLS:has_structural_class',
                             'UMLS:has_supported_concept_property',
                             'UMLS:has_supported_concept_relationship',
                             'UMLS:may_be_qualified_by'],
         'slot_uri': 'biolink:has_attribute'} })
    deprecated: Optional[bool] = Field(default=None, description="""A boolean flag indicating that an entity is no longer considered current or valid.""", json_schema_extra = { "linkml_meta": {'alias': 'deprecated',
         'definition_uri': 'https://w3id.org/biolink/vocab/deprecated',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['oboInOwl:ObsoleteClass'],
         'slot_uri': 'biolink:deprecated'} })


class NamedThing(Entity):
    """
    a databased entity or concept/class
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'class_uri': 'biolink:NamedThing',
         'definition_uri': 'https://w3id.org/biolink/vocab/NamedThing',
         'exact_mappings': ['BFO:0000001',
                            'WIKIDATA:Q35120',
                            'UMLSSG:OBJC',
                            'STY:T071',
                            'dcid:Thing'],
         'from_schema': 'https://w3id.org/biolink/bican-biolink-schema'})

    id: str = Field(default=..., description="""A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })
    iri: Optional[str] = Field(default=None, description="""An IRI for an entity. This is determined by the id using expansion rules.""", json_schema_extra = { "linkml_meta": {'alias': 'iri',
         'definition_uri': 'https://w3id.org/biolink/vocab/iri',
         'domain_of': ['attribute',
                       'entity',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P854'],
         'in_subset': ['translator_minimal', 'samples'],
         'slot_uri': 'biolink:iri'} })
    category: List[Literal["https://w3id.org/biolink/vocab/NamedThing","biolink:NamedThing"]] = Field(default=["biolink:NamedThing"], description="""Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}.""", json_schema_extra = { "linkml_meta": {'alias': 'category',
         'definition_uri': 'https://w3id.org/biolink/vocab/category',
         'designates_type': True,
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'type',
         'is_class_field': True,
         'slot_uri': 'biolink:category'} })
    type: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'type',
         'definition_uri': 'https://w3id.org/biolink/vocab/type',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['gff3:type', 'gpi:DB_Object_Type'],
         'mappings': ['rdf:type'],
         'slot_uri': 'rdf:type'} })
    name: Optional[str] = Field(default=None, description="""A human-readable name for an attribute or entity.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })
    description: Optional[str] = Field(default=None, description="""a human-readable description of an entity""", json_schema_extra = { "linkml_meta": {'alias': 'description',
         'aliases': ['definition'],
         'definition_uri': 'https://w3id.org/biolink/vocab/description',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'ColorPalette'],
         'exact_mappings': ['IAO:0000115', 'skos:definitions'],
         'in_subset': ['translator_minimal'],
         'mappings': ['dct:description'],
         'narrow_mappings': ['gff3:Description'],
         'slot_uri': 'dct:description'} })
    has_attribute: Optional[List[str]] = Field(default=None, description="""connects any entity to an attribute""", json_schema_extra = { "linkml_meta": {'alias': 'has_attribute',
         'close_mappings': ['OBI:0001927'],
         'definition_uri': 'https://w3id.org/biolink/vocab/has_attribute',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['SIO:000008'],
         'in_subset': ['samples'],
         'narrow_mappings': ['OBAN:association_has_subject_property',
                             'OBAN:association_has_object_property',
                             'CPT:has_possibly_included_panel_element',
                             'DRUGBANK:category',
                             'EFO:is_executed_in',
                             'HANCESTRO:0301',
                             'LOINC:has_action_guidance',
                             'LOINC:has_adjustment',
                             'LOINC:has_aggregation_view',
                             'LOINC:has_approach_guidance',
                             'LOINC:has_divisor',
                             'LOINC:has_exam',
                             'LOINC:has_method',
                             'LOINC:has_modality_subtype',
                             'LOINC:has_object_guidance',
                             'LOINC:has_scale',
                             'LOINC:has_suffix',
                             'LOINC:has_time_aspect',
                             'LOINC:has_time_modifier',
                             'LOINC:has_timing_of',
                             'NCIT:R88',
                             'NCIT:eo_disease_has_property_or_attribute',
                             'NCIT:has_data_element',
                             'NCIT:has_pharmaceutical_administration_method',
                             'NCIT:has_pharmaceutical_basic_dose_form',
                             'NCIT:has_pharmaceutical_intended_site',
                             'NCIT:has_pharmaceutical_release_characteristics',
                             'NCIT:has_pharmaceutical_state_of_matter',
                             'NCIT:has_pharmaceutical_transformation',
                             'NCIT:is_qualified_by',
                             'NCIT:qualifier_applies_to',
                             'NCIT:role_has_domain',
                             'NCIT:role_has_range',
                             'INO:0000154',
                             'HANCESTRO:0308',
                             'OMIM:has_inheritance_type',
                             'orphanet:C016',
                             'orphanet:C017',
                             'RO:0000053',
                             'RO:0000086',
                             'RO:0000087',
                             'SNOMED:has_access',
                             'SNOMED:has_clinical_course',
                             'SNOMED:has_count_of_base_of_active_ingredient',
                             'SNOMED:has_dose_form_administration_method',
                             'SNOMED:has_dose_form_release_characteristic',
                             'SNOMED:has_dose_form_transformation',
                             'SNOMED:has_finding_context',
                             'SNOMED:has_finding_informer',
                             'SNOMED:has_inherent_attribute',
                             'SNOMED:has_intent',
                             'SNOMED:has_interpretation',
                             'SNOMED:has_laterality',
                             'SNOMED:has_measurement_method',
                             'SNOMED:has_method',
                             'SNOMED:has_priority',
                             'SNOMED:has_procedure_context',
                             'SNOMED:has_process_duration',
                             'SNOMED:has_property',
                             'SNOMED:has_revision_status',
                             'SNOMED:has_scale_type',
                             'SNOMED:has_severity',
                             'SNOMED:has_specimen',
                             'SNOMED:has_state_of_matter',
                             'SNOMED:has_subject_relationship_context',
                             'SNOMED:has_surgical_approach',
                             'SNOMED:has_technique',
                             'SNOMED:has_temporal_context',
                             'SNOMED:has_time_aspect',
                             'SNOMED:has_units',
                             'UMLS:has_structural_class',
                             'UMLS:has_supported_concept_property',
                             'UMLS:has_supported_concept_relationship',
                             'UMLS:may_be_qualified_by'],
         'slot_uri': 'biolink:has_attribute'} })
    deprecated: Optional[bool] = Field(default=None, description="""A boolean flag indicating that an entity is no longer considered current or valid.""", json_schema_extra = { "linkml_meta": {'alias': 'deprecated',
         'definition_uri': 'https://w3id.org/biolink/vocab/deprecated',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['oboInOwl:ObsoleteClass'],
         'slot_uri': 'biolink:deprecated'} })
    provided_by: Optional[List[str]] = Field(default=None, description="""The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.""", json_schema_extra = { "linkml_meta": {'alias': 'provided_by',
         'definition_uri': 'https://w3id.org/biolink/vocab/provided_by',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:provided_by'} })
    xref: Optional[List[str]] = Field(default=None, description="""A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.""", json_schema_extra = { "linkml_meta": {'alias': 'xref',
         'aliases': ['dbxref', 'Dbxref', 'DbXref', 'record_url', 'source_record_urls'],
         'definition_uri': 'https://w3id.org/biolink/vocab/xref',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'gene',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ObservationMatrix',
                       'ObservationRow',
                       'Abbreviation',
                       'MatrixFile',
                       'ColorPalette',
                       'DisplayColor'],
         'in_subset': ['translator_minimal'],
         'narrow_mappings': ['gff3:Dbxref', 'gpi:DB_Xrefs'],
         'slot_uri': 'biolink:xref'} })
    full_name: Optional[str] = Field(default=None, description="""a long-form human readable name for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'full_name',
         'definition_uri': 'https://w3id.org/biolink/vocab/full_name',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:full_name'} })
    synonym: Optional[List[str]] = Field(default=None, description="""Alternate human-readable names for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'synonym',
         'aliases': ['alias'],
         'definition_uri': 'https://w3id.org/biolink/vocab/synonym',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'narrow_mappings': ['skos:altLabel',
                             'gff3:Alias',
                             'AGRKB:synonyms',
                             'gpi:DB_Object_Synonyms',
                             'HANCESTRO:0330',
                             'IAO:0000136',
                             'RXNORM:has_tradename'],
         'slot_uri': 'biolink:synonym'} })


class Attribute(NamedThing, OntologyClass):
    """
    A property or characteristic of an entity. For example, an apple may have properties such as color, shape, age, crispiness. An environmental sample may have attributes such as depth, lat, long, material.
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'class_uri': 'biolink:Attribute',
         'definition_uri': 'https://w3id.org/biolink/vocab/Attribute',
         'exact_mappings': ['SIO:000614'],
         'from_schema': 'https://w3id.org/biolink/bican-biolink-schema',
         'id_prefixes': ['EDAM-DATA', 'EDAM-FORMAT', 'EDAM-OPERATION', 'EDAM-TOPIC'],
         'in_subset': ['samples'],
         'mixins': ['ontology class'],
         'slot_usage': {'name': {'description': "The human-readable 'attribute name' "
                                                'can be set to a string which reflects '
                                                'its context of interpretation, e.g. '
                                                'SEPIO evidence/provenance/confidence '
                                                'annotation or it can default to the '
                                                "name associated with the 'has "
                                                "attribute type' slot ontology term.",
                                 'name': 'name'}}})

    id: str = Field(default=..., description="""A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })
    category: List[Literal["https://w3id.org/biolink/vocab/Attribute","biolink:Attribute"]] = Field(default=["biolink:Attribute"], description="""Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}.""", json_schema_extra = { "linkml_meta": {'alias': 'category',
         'definition_uri': 'https://w3id.org/biolink/vocab/category',
         'designates_type': True,
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'type',
         'is_class_field': True,
         'slot_uri': 'biolink:category'} })
    type: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'type',
         'definition_uri': 'https://w3id.org/biolink/vocab/type',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['gff3:type', 'gpi:DB_Object_Type'],
         'mappings': ['rdf:type'],
         'slot_uri': 'rdf:type'} })
    description: Optional[str] = Field(default=None, description="""a human-readable description of an entity""", json_schema_extra = { "linkml_meta": {'alias': 'description',
         'aliases': ['definition'],
         'definition_uri': 'https://w3id.org/biolink/vocab/description',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'ColorPalette'],
         'exact_mappings': ['IAO:0000115', 'skos:definitions'],
         'in_subset': ['translator_minimal'],
         'mappings': ['dct:description'],
         'narrow_mappings': ['gff3:Description'],
         'slot_uri': 'dct:description'} })
    has_attribute: Optional[List[str]] = Field(default=None, description="""connects any entity to an attribute""", json_schema_extra = { "linkml_meta": {'alias': 'has_attribute',
         'close_mappings': ['OBI:0001927'],
         'definition_uri': 'https://w3id.org/biolink/vocab/has_attribute',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['SIO:000008'],
         'in_subset': ['samples'],
         'narrow_mappings': ['OBAN:association_has_subject_property',
                             'OBAN:association_has_object_property',
                             'CPT:has_possibly_included_panel_element',
                             'DRUGBANK:category',
                             'EFO:is_executed_in',
                             'HANCESTRO:0301',
                             'LOINC:has_action_guidance',
                             'LOINC:has_adjustment',
                             'LOINC:has_aggregation_view',
                             'LOINC:has_approach_guidance',
                             'LOINC:has_divisor',
                             'LOINC:has_exam',
                             'LOINC:has_method',
                             'LOINC:has_modality_subtype',
                             'LOINC:has_object_guidance',
                             'LOINC:has_scale',
                             'LOINC:has_suffix',
                             'LOINC:has_time_aspect',
                             'LOINC:has_time_modifier',
                             'LOINC:has_timing_of',
                             'NCIT:R88',
                             'NCIT:eo_disease_has_property_or_attribute',
                             'NCIT:has_data_element',
                             'NCIT:has_pharmaceutical_administration_method',
                             'NCIT:has_pharmaceutical_basic_dose_form',
                             'NCIT:has_pharmaceutical_intended_site',
                             'NCIT:has_pharmaceutical_release_characteristics',
                             'NCIT:has_pharmaceutical_state_of_matter',
                             'NCIT:has_pharmaceutical_transformation',
                             'NCIT:is_qualified_by',
                             'NCIT:qualifier_applies_to',
                             'NCIT:role_has_domain',
                             'NCIT:role_has_range',
                             'INO:0000154',
                             'HANCESTRO:0308',
                             'OMIM:has_inheritance_type',
                             'orphanet:C016',
                             'orphanet:C017',
                             'RO:0000053',
                             'RO:0000086',
                             'RO:0000087',
                             'SNOMED:has_access',
                             'SNOMED:has_clinical_course',
                             'SNOMED:has_count_of_base_of_active_ingredient',
                             'SNOMED:has_dose_form_administration_method',
                             'SNOMED:has_dose_form_release_characteristic',
                             'SNOMED:has_dose_form_transformation',
                             'SNOMED:has_finding_context',
                             'SNOMED:has_finding_informer',
                             'SNOMED:has_inherent_attribute',
                             'SNOMED:has_intent',
                             'SNOMED:has_interpretation',
                             'SNOMED:has_laterality',
                             'SNOMED:has_measurement_method',
                             'SNOMED:has_method',
                             'SNOMED:has_priority',
                             'SNOMED:has_procedure_context',
                             'SNOMED:has_process_duration',
                             'SNOMED:has_property',
                             'SNOMED:has_revision_status',
                             'SNOMED:has_scale_type',
                             'SNOMED:has_severity',
                             'SNOMED:has_specimen',
                             'SNOMED:has_state_of_matter',
                             'SNOMED:has_subject_relationship_context',
                             'SNOMED:has_surgical_approach',
                             'SNOMED:has_technique',
                             'SNOMED:has_temporal_context',
                             'SNOMED:has_time_aspect',
                             'SNOMED:has_units',
                             'UMLS:has_structural_class',
                             'UMLS:has_supported_concept_property',
                             'UMLS:has_supported_concept_relationship',
                             'UMLS:may_be_qualified_by'],
         'slot_uri': 'biolink:has_attribute'} })
    deprecated: Optional[bool] = Field(default=None, description="""A boolean flag indicating that an entity is no longer considered current or valid.""", json_schema_extra = { "linkml_meta": {'alias': 'deprecated',
         'definition_uri': 'https://w3id.org/biolink/vocab/deprecated',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['oboInOwl:ObsoleteClass'],
         'slot_uri': 'biolink:deprecated'} })
    provided_by: Optional[List[str]] = Field(default=None, description="""The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.""", json_schema_extra = { "linkml_meta": {'alias': 'provided_by',
         'definition_uri': 'https://w3id.org/biolink/vocab/provided_by',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:provided_by'} })
    xref: Optional[List[str]] = Field(default=None, description="""A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.""", json_schema_extra = { "linkml_meta": {'alias': 'xref',
         'aliases': ['dbxref', 'Dbxref', 'DbXref', 'record_url', 'source_record_urls'],
         'definition_uri': 'https://w3id.org/biolink/vocab/xref',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'gene',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ObservationMatrix',
                       'ObservationRow',
                       'Abbreviation',
                       'MatrixFile',
                       'ColorPalette',
                       'DisplayColor'],
         'in_subset': ['translator_minimal'],
         'narrow_mappings': ['gff3:Dbxref', 'gpi:DB_Xrefs'],
         'slot_uri': 'biolink:xref'} })
    full_name: Optional[str] = Field(default=None, description="""a long-form human readable name for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'full_name',
         'definition_uri': 'https://w3id.org/biolink/vocab/full_name',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:full_name'} })
    synonym: Optional[List[str]] = Field(default=None, description="""Alternate human-readable names for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'synonym',
         'aliases': ['alias'],
         'definition_uri': 'https://w3id.org/biolink/vocab/synonym',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'narrow_mappings': ['skos:altLabel',
                             'gff3:Alias',
                             'AGRKB:synonyms',
                             'gpi:DB_Object_Synonyms',
                             'HANCESTRO:0330',
                             'IAO:0000136',
                             'RXNORM:has_tradename'],
         'slot_uri': 'biolink:synonym'} })
    name: Optional[str] = Field(default=None, description="""The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })
    has_attribute_type: str = Field(default=..., description="""connects an attribute to a class that describes it""", json_schema_extra = { "linkml_meta": {'alias': 'has_attribute_type',
         'definition_uri': 'https://w3id.org/biolink/vocab/has_attribute_type',
         'domain': 'attribute',
         'domain_of': ['attribute'],
         'in_subset': ['samples'],
         'narrow_mappings': ['LOINC:has_modality_type', 'LOINC:has_view_type'],
         'slot_uri': 'biolink:has_attribute_type'} })
    has_quantitative_value: Optional[List[QuantityValue]] = Field(default=None, description="""connects an attribute to a value""", json_schema_extra = { "linkml_meta": {'alias': 'has_quantitative_value',
         'definition_uri': 'https://w3id.org/biolink/vocab/has_quantitative_value',
         'domain': 'attribute',
         'domain_of': ['attribute'],
         'exact_mappings': ['qud:quantityValue'],
         'in_subset': ['samples'],
         'narrow_mappings': ['SNOMED:has_concentration_strength_numerator_value',
                             'SNOMED:has_presentation_strength_denominator_value',
                             'SNOMED:has_presentation_strength_numerator_value'],
         'slot_uri': 'biolink:has_quantitative_value'} })
    has_qualitative_value: Optional[str] = Field(default=None, description="""connects an attribute to a value""", json_schema_extra = { "linkml_meta": {'alias': 'has_qualitative_value',
         'definition_uri': 'https://w3id.org/biolink/vocab/has_qualitative_value',
         'domain': 'attribute',
         'domain_of': ['attribute'],
         'in_subset': ['samples'],
         'slot_uri': 'biolink:has_qualitative_value'} })
    iri: Optional[str] = Field(default=None, description="""An IRI for an entity. This is determined by the id using expansion rules.""", json_schema_extra = { "linkml_meta": {'alias': 'iri',
         'definition_uri': 'https://w3id.org/biolink/vocab/iri',
         'domain_of': ['attribute',
                       'entity',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P854'],
         'in_subset': ['translator_minimal', 'samples'],
         'slot_uri': 'biolink:iri'} })


class TaxonomicRank(OntologyClass):
    """
    A descriptor for the rank within a taxonomic classification. Example instance: TAXRANK:0000017 (kingdom)
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'class_uri': 'biolink:TaxonomicRank',
         'definition_uri': 'https://w3id.org/biolink/vocab/TaxonomicRank',
         'from_schema': 'https://w3id.org/biolink/bican-biolink-schema',
         'id_prefixes': ['TAXRANK'],
         'mappings': ['WIKIDATA:Q427626']})

    id: str = Field(default=..., description="""A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })


class OrganismTaxon(NamedThing):
    """
    A classification of a set of organisms. Example instances: NCBITaxon:9606 (Homo sapiens), NCBITaxon:2 (Bacteria). Can also be used to represent strains or subspecies.
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'aliases': ['taxon', 'taxonomic classification'],
         'class_uri': 'biolink:OrganismTaxon',
         'definition_uri': 'https://w3id.org/biolink/vocab/OrganismTaxon',
         'exact_mappings': ['WIKIDATA:Q16521', 'STY:T001', 'bioschemas:Taxon'],
         'from_schema': 'https://w3id.org/biolink/bican-biolink-schema',
         'id_prefixes': ['NCBITaxon', 'MESH', 'UMLS'],
         'in_subset': ['model_organism_database'],
         'narrow_mappings': ['dcid:BiologicalSpecies'],
         'values_from': ['NCBITaxon']})

    id: str = Field(default=..., description="""A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })
    iri: Optional[str] = Field(default=None, description="""An IRI for an entity. This is determined by the id using expansion rules.""", json_schema_extra = { "linkml_meta": {'alias': 'iri',
         'definition_uri': 'https://w3id.org/biolink/vocab/iri',
         'domain_of': ['attribute',
                       'entity',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P854'],
         'in_subset': ['translator_minimal', 'samples'],
         'slot_uri': 'biolink:iri'} })
    category: List[Literal["https://w3id.org/biolink/vocab/OrganismTaxon","biolink:OrganismTaxon"]] = Field(default=["biolink:OrganismTaxon"], description="""Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}.""", json_schema_extra = { "linkml_meta": {'alias': 'category',
         'definition_uri': 'https://w3id.org/biolink/vocab/category',
         'designates_type': True,
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'type',
         'is_class_field': True,
         'slot_uri': 'biolink:category'} })
    type: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'type',
         'definition_uri': 'https://w3id.org/biolink/vocab/type',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['gff3:type', 'gpi:DB_Object_Type'],
         'mappings': ['rdf:type'],
         'slot_uri': 'rdf:type'} })
    name: Optional[str] = Field(default=None, description="""A human-readable name for an attribute or entity.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })
    description: Optional[str] = Field(default=None, description="""a human-readable description of an entity""", json_schema_extra = { "linkml_meta": {'alias': 'description',
         'aliases': ['definition'],
         'definition_uri': 'https://w3id.org/biolink/vocab/description',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'ColorPalette'],
         'exact_mappings': ['IAO:0000115', 'skos:definitions'],
         'in_subset': ['translator_minimal'],
         'mappings': ['dct:description'],
         'narrow_mappings': ['gff3:Description'],
         'slot_uri': 'dct:description'} })
    has_attribute: Optional[List[str]] = Field(default=None, description="""connects any entity to an attribute""", json_schema_extra = { "linkml_meta": {'alias': 'has_attribute',
         'close_mappings': ['OBI:0001927'],
         'definition_uri': 'https://w3id.org/biolink/vocab/has_attribute',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['SIO:000008'],
         'in_subset': ['samples'],
         'narrow_mappings': ['OBAN:association_has_subject_property',
                             'OBAN:association_has_object_property',
                             'CPT:has_possibly_included_panel_element',
                             'DRUGBANK:category',
                             'EFO:is_executed_in',
                             'HANCESTRO:0301',
                             'LOINC:has_action_guidance',
                             'LOINC:has_adjustment',
                             'LOINC:has_aggregation_view',
                             'LOINC:has_approach_guidance',
                             'LOINC:has_divisor',
                             'LOINC:has_exam',
                             'LOINC:has_method',
                             'LOINC:has_modality_subtype',
                             'LOINC:has_object_guidance',
                             'LOINC:has_scale',
                             'LOINC:has_suffix',
                             'LOINC:has_time_aspect',
                             'LOINC:has_time_modifier',
                             'LOINC:has_timing_of',
                             'NCIT:R88',
                             'NCIT:eo_disease_has_property_or_attribute',
                             'NCIT:has_data_element',
                             'NCIT:has_pharmaceutical_administration_method',
                             'NCIT:has_pharmaceutical_basic_dose_form',
                             'NCIT:has_pharmaceutical_intended_site',
                             'NCIT:has_pharmaceutical_release_characteristics',
                             'NCIT:has_pharmaceutical_state_of_matter',
                             'NCIT:has_pharmaceutical_transformation',
                             'NCIT:is_qualified_by',
                             'NCIT:qualifier_applies_to',
                             'NCIT:role_has_domain',
                             'NCIT:role_has_range',
                             'INO:0000154',
                             'HANCESTRO:0308',
                             'OMIM:has_inheritance_type',
                             'orphanet:C016',
                             'orphanet:C017',
                             'RO:0000053',
                             'RO:0000086',
                             'RO:0000087',
                             'SNOMED:has_access',
                             'SNOMED:has_clinical_course',
                             'SNOMED:has_count_of_base_of_active_ingredient',
                             'SNOMED:has_dose_form_administration_method',
                             'SNOMED:has_dose_form_release_characteristic',
                             'SNOMED:has_dose_form_transformation',
                             'SNOMED:has_finding_context',
                             'SNOMED:has_finding_informer',
                             'SNOMED:has_inherent_attribute',
                             'SNOMED:has_intent',
                             'SNOMED:has_interpretation',
                             'SNOMED:has_laterality',
                             'SNOMED:has_measurement_method',
                             'SNOMED:has_method',
                             'SNOMED:has_priority',
                             'SNOMED:has_procedure_context',
                             'SNOMED:has_process_duration',
                             'SNOMED:has_property',
                             'SNOMED:has_revision_status',
                             'SNOMED:has_scale_type',
                             'SNOMED:has_severity',
                             'SNOMED:has_specimen',
                             'SNOMED:has_state_of_matter',
                             'SNOMED:has_subject_relationship_context',
                             'SNOMED:has_surgical_approach',
                             'SNOMED:has_technique',
                             'SNOMED:has_temporal_context',
                             'SNOMED:has_time_aspect',
                             'SNOMED:has_units',
                             'UMLS:has_structural_class',
                             'UMLS:has_supported_concept_property',
                             'UMLS:has_supported_concept_relationship',
                             'UMLS:may_be_qualified_by'],
         'slot_uri': 'biolink:has_attribute'} })
    deprecated: Optional[bool] = Field(default=None, description="""A boolean flag indicating that an entity is no longer considered current or valid.""", json_schema_extra = { "linkml_meta": {'alias': 'deprecated',
         'definition_uri': 'https://w3id.org/biolink/vocab/deprecated',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['oboInOwl:ObsoleteClass'],
         'slot_uri': 'biolink:deprecated'} })
    provided_by: Optional[List[str]] = Field(default=None, description="""The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.""", json_schema_extra = { "linkml_meta": {'alias': 'provided_by',
         'definition_uri': 'https://w3id.org/biolink/vocab/provided_by',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:provided_by'} })
    xref: Optional[List[str]] = Field(default=None, description="""A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.""", json_schema_extra = { "linkml_meta": {'alias': 'xref',
         'aliases': ['dbxref', 'Dbxref', 'DbXref', 'record_url', 'source_record_urls'],
         'definition_uri': 'https://w3id.org/biolink/vocab/xref',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'gene',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ObservationMatrix',
                       'ObservationRow',
                       'Abbreviation',
                       'MatrixFile',
                       'ColorPalette',
                       'DisplayColor'],
         'in_subset': ['translator_minimal'],
         'narrow_mappings': ['gff3:Dbxref', 'gpi:DB_Xrefs'],
         'slot_uri': 'biolink:xref'} })
    full_name: Optional[str] = Field(default=None, description="""a long-form human readable name for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'full_name',
         'definition_uri': 'https://w3id.org/biolink/vocab/full_name',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:full_name'} })
    synonym: Optional[List[str]] = Field(default=None, description="""Alternate human-readable names for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'synonym',
         'aliases': ['alias'],
         'definition_uri': 'https://w3id.org/biolink/vocab/synonym',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'narrow_mappings': ['skos:altLabel',
                             'gff3:Alias',
                             'AGRKB:synonyms',
                             'gpi:DB_Object_Synonyms',
                             'HANCESTRO:0330',
                             'IAO:0000136',
                             'RXNORM:has_tradename'],
         'slot_uri': 'biolink:synonym'} })
    has_taxonomic_rank: Optional[str] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'has_taxonomic_rank',
         'definition_uri': 'https://w3id.org/biolink/vocab/has_taxonomic_rank',
         'domain': 'named thing',
         'domain_of': ['organism taxon'],
         'is_a': 'node property',
         'mappings': ['WIKIDATA:P105'],
         'slot_uri': 'biolink:has_taxonomic_rank'} })


class InformationContentEntity(NamedThing):
    """
    a piece of information that typically describes some topic of discourse or is used as support.
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'abstract': True,
         'aliases': ['information', 'information artefact', 'information entity'],
         'class_uri': 'biolink:InformationContentEntity',
         'definition_uri': 'https://w3id.org/biolink/vocab/InformationContentEntity',
         'exact_mappings': ['IAO:0000030'],
         'from_schema': 'https://w3id.org/biolink/bican-biolink-schema',
         'id_prefixes': ['doi'],
         'narrow_mappings': ['UMLSSG:CONC',
                             'STY:T077',
                             'STY:T078',
                             'STY:T079',
                             'STY:T080',
                             'STY:T081',
                             'STY:T082',
                             'STY:T089',
                             'STY:T102',
                             'STY:T169',
                             'STY:T171',
                             'STY:T185']})

    id: str = Field(default=..., description="""A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })
    iri: Optional[str] = Field(default=None, description="""An IRI for an entity. This is determined by the id using expansion rules.""", json_schema_extra = { "linkml_meta": {'alias': 'iri',
         'definition_uri': 'https://w3id.org/biolink/vocab/iri',
         'domain_of': ['attribute',
                       'entity',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P854'],
         'in_subset': ['translator_minimal', 'samples'],
         'slot_uri': 'biolink:iri'} })
    category: List[Literal["https://w3id.org/biolink/vocab/InformationContentEntity","biolink:InformationContentEntity"]] = Field(default=["biolink:InformationContentEntity"], description="""Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}.""", json_schema_extra = { "linkml_meta": {'alias': 'category',
         'definition_uri': 'https://w3id.org/biolink/vocab/category',
         'designates_type': True,
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'type',
         'is_class_field': True,
         'slot_uri': 'biolink:category'} })
    type: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'type',
         'definition_uri': 'https://w3id.org/biolink/vocab/type',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['gff3:type', 'gpi:DB_Object_Type'],
         'mappings': ['rdf:type'],
         'slot_uri': 'rdf:type'} })
    name: Optional[str] = Field(default=None, description="""A human-readable name for an attribute or entity.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })
    description: Optional[str] = Field(default=None, description="""a human-readable description of an entity""", json_schema_extra = { "linkml_meta": {'alias': 'description',
         'aliases': ['definition'],
         'definition_uri': 'https://w3id.org/biolink/vocab/description',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'ColorPalette'],
         'exact_mappings': ['IAO:0000115', 'skos:definitions'],
         'in_subset': ['translator_minimal'],
         'mappings': ['dct:description'],
         'narrow_mappings': ['gff3:Description'],
         'slot_uri': 'dct:description'} })
    has_attribute: Optional[List[str]] = Field(default=None, description="""connects any entity to an attribute""", json_schema_extra = { "linkml_meta": {'alias': 'has_attribute',
         'close_mappings': ['OBI:0001927'],
         'definition_uri': 'https://w3id.org/biolink/vocab/has_attribute',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['SIO:000008'],
         'in_subset': ['samples'],
         'narrow_mappings': ['OBAN:association_has_subject_property',
                             'OBAN:association_has_object_property',
                             'CPT:has_possibly_included_panel_element',
                             'DRUGBANK:category',
                             'EFO:is_executed_in',
                             'HANCESTRO:0301',
                             'LOINC:has_action_guidance',
                             'LOINC:has_adjustment',
                             'LOINC:has_aggregation_view',
                             'LOINC:has_approach_guidance',
                             'LOINC:has_divisor',
                             'LOINC:has_exam',
                             'LOINC:has_method',
                             'LOINC:has_modality_subtype',
                             'LOINC:has_object_guidance',
                             'LOINC:has_scale',
                             'LOINC:has_suffix',
                             'LOINC:has_time_aspect',
                             'LOINC:has_time_modifier',
                             'LOINC:has_timing_of',
                             'NCIT:R88',
                             'NCIT:eo_disease_has_property_or_attribute',
                             'NCIT:has_data_element',
                             'NCIT:has_pharmaceutical_administration_method',
                             'NCIT:has_pharmaceutical_basic_dose_form',
                             'NCIT:has_pharmaceutical_intended_site',
                             'NCIT:has_pharmaceutical_release_characteristics',
                             'NCIT:has_pharmaceutical_state_of_matter',
                             'NCIT:has_pharmaceutical_transformation',
                             'NCIT:is_qualified_by',
                             'NCIT:qualifier_applies_to',
                             'NCIT:role_has_domain',
                             'NCIT:role_has_range',
                             'INO:0000154',
                             'HANCESTRO:0308',
                             'OMIM:has_inheritance_type',
                             'orphanet:C016',
                             'orphanet:C017',
                             'RO:0000053',
                             'RO:0000086',
                             'RO:0000087',
                             'SNOMED:has_access',
                             'SNOMED:has_clinical_course',
                             'SNOMED:has_count_of_base_of_active_ingredient',
                             'SNOMED:has_dose_form_administration_method',
                             'SNOMED:has_dose_form_release_characteristic',
                             'SNOMED:has_dose_form_transformation',
                             'SNOMED:has_finding_context',
                             'SNOMED:has_finding_informer',
                             'SNOMED:has_inherent_attribute',
                             'SNOMED:has_intent',
                             'SNOMED:has_interpretation',
                             'SNOMED:has_laterality',
                             'SNOMED:has_measurement_method',
                             'SNOMED:has_method',
                             'SNOMED:has_priority',
                             'SNOMED:has_procedure_context',
                             'SNOMED:has_process_duration',
                             'SNOMED:has_property',
                             'SNOMED:has_revision_status',
                             'SNOMED:has_scale_type',
                             'SNOMED:has_severity',
                             'SNOMED:has_specimen',
                             'SNOMED:has_state_of_matter',
                             'SNOMED:has_subject_relationship_context',
                             'SNOMED:has_surgical_approach',
                             'SNOMED:has_technique',
                             'SNOMED:has_temporal_context',
                             'SNOMED:has_time_aspect',
                             'SNOMED:has_units',
                             'UMLS:has_structural_class',
                             'UMLS:has_supported_concept_property',
                             'UMLS:has_supported_concept_relationship',
                             'UMLS:may_be_qualified_by'],
         'slot_uri': 'biolink:has_attribute'} })
    deprecated: Optional[bool] = Field(default=None, description="""A boolean flag indicating that an entity is no longer considered current or valid.""", json_schema_extra = { "linkml_meta": {'alias': 'deprecated',
         'definition_uri': 'https://w3id.org/biolink/vocab/deprecated',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['oboInOwl:ObsoleteClass'],
         'slot_uri': 'biolink:deprecated'} })
    provided_by: Optional[List[str]] = Field(default=None, description="""The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.""", json_schema_extra = { "linkml_meta": {'alias': 'provided_by',
         'definition_uri': 'https://w3id.org/biolink/vocab/provided_by',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:provided_by'} })
    xref: Optional[List[str]] = Field(default=None, description="""A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.""", json_schema_extra = { "linkml_meta": {'alias': 'xref',
         'aliases': ['dbxref', 'Dbxref', 'DbXref', 'record_url', 'source_record_urls'],
         'definition_uri': 'https://w3id.org/biolink/vocab/xref',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'gene',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ObservationMatrix',
                       'ObservationRow',
                       'Abbreviation',
                       'MatrixFile',
                       'ColorPalette',
                       'DisplayColor'],
         'in_subset': ['translator_minimal'],
         'narrow_mappings': ['gff3:Dbxref', 'gpi:DB_Xrefs'],
         'slot_uri': 'biolink:xref'} })
    full_name: Optional[str] = Field(default=None, description="""a long-form human readable name for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'full_name',
         'definition_uri': 'https://w3id.org/biolink/vocab/full_name',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:full_name'} })
    synonym: Optional[List[str]] = Field(default=None, description="""Alternate human-readable names for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'synonym',
         'aliases': ['alias'],
         'definition_uri': 'https://w3id.org/biolink/vocab/synonym',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'narrow_mappings': ['skos:altLabel',
                             'gff3:Alias',
                             'AGRKB:synonyms',
                             'gpi:DB_Object_Synonyms',
                             'HANCESTRO:0330',
                             'IAO:0000136',
                             'RXNORM:has_tradename'],
         'slot_uri': 'biolink:synonym'} })
    license: Optional[str] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'license',
         'definition_uri': 'https://w3id.org/biolink/vocab/license',
         'domain': 'information content entity',
         'domain_of': ['information content entity', 'dataset'],
         'exact_mappings': ['dct:license'],
         'is_a': 'node property',
         'narrow_mappings': ['WIKIDATA_PROPERTY:P275'],
         'slot_uri': 'biolink:license'} })
    rights: Optional[str] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'rights',
         'definition_uri': 'https://w3id.org/biolink/vocab/rights',
         'domain': 'information content entity',
         'domain_of': ['information content entity', 'dataset'],
         'exact_mappings': ['dct:rights'],
         'is_a': 'node property',
         'slot_uri': 'biolink:rights'} })
    format: Optional[str] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'format',
         'definition_uri': 'https://w3id.org/biolink/vocab/format',
         'domain': 'information content entity',
         'domain_of': ['information content entity', 'dataset'],
         'exact_mappings': ['dct:format', 'WIKIDATA_PROPERTY:P2701'],
         'is_a': 'node property',
         'slot_uri': 'biolink:format'} })
    creation_date: Optional[date] = Field(default=None, description="""date on which an entity was created. This can be applied to nodes or edges""", json_schema_extra = { "linkml_meta": {'alias': 'creation_date',
         'aliases': ['publication date'],
         'definition_uri': 'https://w3id.org/biolink/vocab/creation_date',
         'domain': 'named thing',
         'domain_of': ['information content entity',
                       'dataset',
                       'CellTypeTaxonomy',
                       'ClusterSet'],
         'exact_mappings': ['dct:createdOn', 'WIKIDATA_PROPERTY:P577'],
         'is_a': 'node property',
         'slot_uri': 'biolink:creation_date'} })


class Dataset(InformationContentEntity):
    """
    an item that refers to a collection of data from a data source.
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'class_uri': 'biolink:Dataset',
         'definition_uri': 'https://w3id.org/biolink/vocab/Dataset',
         'exact_mappings': ['IAO:0000100',
                            'dctypes:Dataset',
                            'schema:dataset',
                            'dcid:Dataset'],
         'from_schema': 'https://w3id.org/biolink/bican-biolink-schema'})

    id: str = Field(default=..., description="""A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })
    iri: Optional[str] = Field(default=None, description="""An IRI for an entity. This is determined by the id using expansion rules.""", json_schema_extra = { "linkml_meta": {'alias': 'iri',
         'definition_uri': 'https://w3id.org/biolink/vocab/iri',
         'domain_of': ['attribute',
                       'entity',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P854'],
         'in_subset': ['translator_minimal', 'samples'],
         'slot_uri': 'biolink:iri'} })
    category: List[Literal["https://w3id.org/biolink/vocab/Dataset","biolink:Dataset"]] = Field(default=["biolink:Dataset"], description="""Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}.""", json_schema_extra = { "linkml_meta": {'alias': 'category',
         'definition_uri': 'https://w3id.org/biolink/vocab/category',
         'designates_type': True,
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'type',
         'is_class_field': True,
         'slot_uri': 'biolink:category'} })
    type: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'type',
         'definition_uri': 'https://w3id.org/biolink/vocab/type',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['gff3:type', 'gpi:DB_Object_Type'],
         'mappings': ['rdf:type'],
         'slot_uri': 'rdf:type'} })
    name: Optional[str] = Field(default=None, description="""A human-readable name for an attribute or entity.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })
    description: Optional[str] = Field(default=None, description="""a human-readable description of an entity""", json_schema_extra = { "linkml_meta": {'alias': 'description',
         'aliases': ['definition'],
         'definition_uri': 'https://w3id.org/biolink/vocab/description',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'ColorPalette'],
         'exact_mappings': ['IAO:0000115', 'skos:definitions'],
         'in_subset': ['translator_minimal'],
         'mappings': ['dct:description'],
         'narrow_mappings': ['gff3:Description'],
         'slot_uri': 'dct:description'} })
    has_attribute: Optional[List[str]] = Field(default=None, description="""connects any entity to an attribute""", json_schema_extra = { "linkml_meta": {'alias': 'has_attribute',
         'close_mappings': ['OBI:0001927'],
         'definition_uri': 'https://w3id.org/biolink/vocab/has_attribute',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['SIO:000008'],
         'in_subset': ['samples'],
         'narrow_mappings': ['OBAN:association_has_subject_property',
                             'OBAN:association_has_object_property',
                             'CPT:has_possibly_included_panel_element',
                             'DRUGBANK:category',
                             'EFO:is_executed_in',
                             'HANCESTRO:0301',
                             'LOINC:has_action_guidance',
                             'LOINC:has_adjustment',
                             'LOINC:has_aggregation_view',
                             'LOINC:has_approach_guidance',
                             'LOINC:has_divisor',
                             'LOINC:has_exam',
                             'LOINC:has_method',
                             'LOINC:has_modality_subtype',
                             'LOINC:has_object_guidance',
                             'LOINC:has_scale',
                             'LOINC:has_suffix',
                             'LOINC:has_time_aspect',
                             'LOINC:has_time_modifier',
                             'LOINC:has_timing_of',
                             'NCIT:R88',
                             'NCIT:eo_disease_has_property_or_attribute',
                             'NCIT:has_data_element',
                             'NCIT:has_pharmaceutical_administration_method',
                             'NCIT:has_pharmaceutical_basic_dose_form',
                             'NCIT:has_pharmaceutical_intended_site',
                             'NCIT:has_pharmaceutical_release_characteristics',
                             'NCIT:has_pharmaceutical_state_of_matter',
                             'NCIT:has_pharmaceutical_transformation',
                             'NCIT:is_qualified_by',
                             'NCIT:qualifier_applies_to',
                             'NCIT:role_has_domain',
                             'NCIT:role_has_range',
                             'INO:0000154',
                             'HANCESTRO:0308',
                             'OMIM:has_inheritance_type',
                             'orphanet:C016',
                             'orphanet:C017',
                             'RO:0000053',
                             'RO:0000086',
                             'RO:0000087',
                             'SNOMED:has_access',
                             'SNOMED:has_clinical_course',
                             'SNOMED:has_count_of_base_of_active_ingredient',
                             'SNOMED:has_dose_form_administration_method',
                             'SNOMED:has_dose_form_release_characteristic',
                             'SNOMED:has_dose_form_transformation',
                             'SNOMED:has_finding_context',
                             'SNOMED:has_finding_informer',
                             'SNOMED:has_inherent_attribute',
                             'SNOMED:has_intent',
                             'SNOMED:has_interpretation',
                             'SNOMED:has_laterality',
                             'SNOMED:has_measurement_method',
                             'SNOMED:has_method',
                             'SNOMED:has_priority',
                             'SNOMED:has_procedure_context',
                             'SNOMED:has_process_duration',
                             'SNOMED:has_property',
                             'SNOMED:has_revision_status',
                             'SNOMED:has_scale_type',
                             'SNOMED:has_severity',
                             'SNOMED:has_specimen',
                             'SNOMED:has_state_of_matter',
                             'SNOMED:has_subject_relationship_context',
                             'SNOMED:has_surgical_approach',
                             'SNOMED:has_technique',
                             'SNOMED:has_temporal_context',
                             'SNOMED:has_time_aspect',
                             'SNOMED:has_units',
                             'UMLS:has_structural_class',
                             'UMLS:has_supported_concept_property',
                             'UMLS:has_supported_concept_relationship',
                             'UMLS:may_be_qualified_by'],
         'slot_uri': 'biolink:has_attribute'} })
    deprecated: Optional[bool] = Field(default=None, description="""A boolean flag indicating that an entity is no longer considered current or valid.""", json_schema_extra = { "linkml_meta": {'alias': 'deprecated',
         'definition_uri': 'https://w3id.org/biolink/vocab/deprecated',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['oboInOwl:ObsoleteClass'],
         'slot_uri': 'biolink:deprecated'} })
    provided_by: Optional[List[str]] = Field(default=None, description="""The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.""", json_schema_extra = { "linkml_meta": {'alias': 'provided_by',
         'definition_uri': 'https://w3id.org/biolink/vocab/provided_by',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:provided_by'} })
    xref: Optional[List[str]] = Field(default=None, description="""A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.""", json_schema_extra = { "linkml_meta": {'alias': 'xref',
         'aliases': ['dbxref', 'Dbxref', 'DbXref', 'record_url', 'source_record_urls'],
         'definition_uri': 'https://w3id.org/biolink/vocab/xref',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'gene',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ObservationMatrix',
                       'ObservationRow',
                       'Abbreviation',
                       'MatrixFile',
                       'ColorPalette',
                       'DisplayColor'],
         'in_subset': ['translator_minimal'],
         'narrow_mappings': ['gff3:Dbxref', 'gpi:DB_Xrefs'],
         'slot_uri': 'biolink:xref'} })
    full_name: Optional[str] = Field(default=None, description="""a long-form human readable name for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'full_name',
         'definition_uri': 'https://w3id.org/biolink/vocab/full_name',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:full_name'} })
    synonym: Optional[List[str]] = Field(default=None, description="""Alternate human-readable names for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'synonym',
         'aliases': ['alias'],
         'definition_uri': 'https://w3id.org/biolink/vocab/synonym',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'narrow_mappings': ['skos:altLabel',
                             'gff3:Alias',
                             'AGRKB:synonyms',
                             'gpi:DB_Object_Synonyms',
                             'HANCESTRO:0330',
                             'IAO:0000136',
                             'RXNORM:has_tradename'],
         'slot_uri': 'biolink:synonym'} })
    license: Optional[str] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'license',
         'definition_uri': 'https://w3id.org/biolink/vocab/license',
         'domain': 'information content entity',
         'domain_of': ['information content entity', 'dataset'],
         'exact_mappings': ['dct:license'],
         'is_a': 'node property',
         'narrow_mappings': ['WIKIDATA_PROPERTY:P275'],
         'slot_uri': 'biolink:license'} })
    rights: Optional[str] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'rights',
         'definition_uri': 'https://w3id.org/biolink/vocab/rights',
         'domain': 'information content entity',
         'domain_of': ['information content entity', 'dataset'],
         'exact_mappings': ['dct:rights'],
         'is_a': 'node property',
         'slot_uri': 'biolink:rights'} })
    format: Optional[str] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'format',
         'definition_uri': 'https://w3id.org/biolink/vocab/format',
         'domain': 'information content entity',
         'domain_of': ['information content entity', 'dataset'],
         'exact_mappings': ['dct:format', 'WIKIDATA_PROPERTY:P2701'],
         'is_a': 'node property',
         'slot_uri': 'biolink:format'} })
    creation_date: Optional[date] = Field(default=None, description="""date on which an entity was created. This can be applied to nodes or edges""", json_schema_extra = { "linkml_meta": {'alias': 'creation_date',
         'aliases': ['publication date'],
         'definition_uri': 'https://w3id.org/biolink/vocab/creation_date',
         'domain': 'named thing',
         'domain_of': ['information content entity',
                       'dataset',
                       'CellTypeTaxonomy',
                       'ClusterSet'],
         'exact_mappings': ['dct:createdOn', 'WIKIDATA_PROPERTY:P577'],
         'is_a': 'node property',
         'slot_uri': 'biolink:creation_date'} })


class PhysicalEssenceOrOccurrent(ConfiguredBaseModel):
    """
    Either a physical or processual entity.
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'class_uri': 'biolink:PhysicalEssenceOrOccurrent',
         'definition_uri': 'https://w3id.org/biolink/vocab/PhysicalEssenceOrOccurrent',
         'from_schema': 'https://w3id.org/biolink/bican-biolink-schema',
         'mixin': True})

    pass


class PhysicalEssence(PhysicalEssenceOrOccurrent):
    """
    Semantic mixin concept.  Pertains to entities that have physical properties such as mass, volume, or charge.
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'class_uri': 'biolink:PhysicalEssence',
         'definition_uri': 'https://w3id.org/biolink/vocab/PhysicalEssence',
         'from_schema': 'https://w3id.org/biolink/bican-biolink-schema',
         'mixin': True})

    pass


class PhysicalEntity(PhysicalEssence, NamedThing):
    """
    An entity that has material reality (a.k.a. physical essence).
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'class_uri': 'biolink:PhysicalEntity',
         'definition_uri': 'https://w3id.org/biolink/vocab/PhysicalEntity',
         'exact_mappings': ['STY:T072'],
         'from_schema': 'https://w3id.org/biolink/bican-biolink-schema',
         'mixins': ['physical essence'],
         'narrow_mappings': ['STY:T073']})

    id: str = Field(default=..., description="""A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })
    iri: Optional[str] = Field(default=None, description="""An IRI for an entity. This is determined by the id using expansion rules.""", json_schema_extra = { "linkml_meta": {'alias': 'iri',
         'definition_uri': 'https://w3id.org/biolink/vocab/iri',
         'domain_of': ['attribute',
                       'entity',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P854'],
         'in_subset': ['translator_minimal', 'samples'],
         'slot_uri': 'biolink:iri'} })
    category: List[Literal["https://w3id.org/biolink/vocab/PhysicalEntity","biolink:PhysicalEntity"]] = Field(default=["biolink:PhysicalEntity"], description="""Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}.""", json_schema_extra = { "linkml_meta": {'alias': 'category',
         'definition_uri': 'https://w3id.org/biolink/vocab/category',
         'designates_type': True,
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'type',
         'is_class_field': True,
         'slot_uri': 'biolink:category'} })
    type: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'type',
         'definition_uri': 'https://w3id.org/biolink/vocab/type',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['gff3:type', 'gpi:DB_Object_Type'],
         'mappings': ['rdf:type'],
         'slot_uri': 'rdf:type'} })
    name: Optional[str] = Field(default=None, description="""A human-readable name for an attribute or entity.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })
    description: Optional[str] = Field(default=None, description="""a human-readable description of an entity""", json_schema_extra = { "linkml_meta": {'alias': 'description',
         'aliases': ['definition'],
         'definition_uri': 'https://w3id.org/biolink/vocab/description',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'ColorPalette'],
         'exact_mappings': ['IAO:0000115', 'skos:definitions'],
         'in_subset': ['translator_minimal'],
         'mappings': ['dct:description'],
         'narrow_mappings': ['gff3:Description'],
         'slot_uri': 'dct:description'} })
    has_attribute: Optional[List[str]] = Field(default=None, description="""connects any entity to an attribute""", json_schema_extra = { "linkml_meta": {'alias': 'has_attribute',
         'close_mappings': ['OBI:0001927'],
         'definition_uri': 'https://w3id.org/biolink/vocab/has_attribute',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['SIO:000008'],
         'in_subset': ['samples'],
         'narrow_mappings': ['OBAN:association_has_subject_property',
                             'OBAN:association_has_object_property',
                             'CPT:has_possibly_included_panel_element',
                             'DRUGBANK:category',
                             'EFO:is_executed_in',
                             'HANCESTRO:0301',
                             'LOINC:has_action_guidance',
                             'LOINC:has_adjustment',
                             'LOINC:has_aggregation_view',
                             'LOINC:has_approach_guidance',
                             'LOINC:has_divisor',
                             'LOINC:has_exam',
                             'LOINC:has_method',
                             'LOINC:has_modality_subtype',
                             'LOINC:has_object_guidance',
                             'LOINC:has_scale',
                             'LOINC:has_suffix',
                             'LOINC:has_time_aspect',
                             'LOINC:has_time_modifier',
                             'LOINC:has_timing_of',
                             'NCIT:R88',
                             'NCIT:eo_disease_has_property_or_attribute',
                             'NCIT:has_data_element',
                             'NCIT:has_pharmaceutical_administration_method',
                             'NCIT:has_pharmaceutical_basic_dose_form',
                             'NCIT:has_pharmaceutical_intended_site',
                             'NCIT:has_pharmaceutical_release_characteristics',
                             'NCIT:has_pharmaceutical_state_of_matter',
                             'NCIT:has_pharmaceutical_transformation',
                             'NCIT:is_qualified_by',
                             'NCIT:qualifier_applies_to',
                             'NCIT:role_has_domain',
                             'NCIT:role_has_range',
                             'INO:0000154',
                             'HANCESTRO:0308',
                             'OMIM:has_inheritance_type',
                             'orphanet:C016',
                             'orphanet:C017',
                             'RO:0000053',
                             'RO:0000086',
                             'RO:0000087',
                             'SNOMED:has_access',
                             'SNOMED:has_clinical_course',
                             'SNOMED:has_count_of_base_of_active_ingredient',
                             'SNOMED:has_dose_form_administration_method',
                             'SNOMED:has_dose_form_release_characteristic',
                             'SNOMED:has_dose_form_transformation',
                             'SNOMED:has_finding_context',
                             'SNOMED:has_finding_informer',
                             'SNOMED:has_inherent_attribute',
                             'SNOMED:has_intent',
                             'SNOMED:has_interpretation',
                             'SNOMED:has_laterality',
                             'SNOMED:has_measurement_method',
                             'SNOMED:has_method',
                             'SNOMED:has_priority',
                             'SNOMED:has_procedure_context',
                             'SNOMED:has_process_duration',
                             'SNOMED:has_property',
                             'SNOMED:has_revision_status',
                             'SNOMED:has_scale_type',
                             'SNOMED:has_severity',
                             'SNOMED:has_specimen',
                             'SNOMED:has_state_of_matter',
                             'SNOMED:has_subject_relationship_context',
                             'SNOMED:has_surgical_approach',
                             'SNOMED:has_technique',
                             'SNOMED:has_temporal_context',
                             'SNOMED:has_time_aspect',
                             'SNOMED:has_units',
                             'UMLS:has_structural_class',
                             'UMLS:has_supported_concept_property',
                             'UMLS:has_supported_concept_relationship',
                             'UMLS:may_be_qualified_by'],
         'slot_uri': 'biolink:has_attribute'} })
    deprecated: Optional[bool] = Field(default=None, description="""A boolean flag indicating that an entity is no longer considered current or valid.""", json_schema_extra = { "linkml_meta": {'alias': 'deprecated',
         'definition_uri': 'https://w3id.org/biolink/vocab/deprecated',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['oboInOwl:ObsoleteClass'],
         'slot_uri': 'biolink:deprecated'} })
    provided_by: Optional[List[str]] = Field(default=None, description="""The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.""", json_schema_extra = { "linkml_meta": {'alias': 'provided_by',
         'definition_uri': 'https://w3id.org/biolink/vocab/provided_by',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:provided_by'} })
    xref: Optional[List[str]] = Field(default=None, description="""A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.""", json_schema_extra = { "linkml_meta": {'alias': 'xref',
         'aliases': ['dbxref', 'Dbxref', 'DbXref', 'record_url', 'source_record_urls'],
         'definition_uri': 'https://w3id.org/biolink/vocab/xref',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'gene',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ObservationMatrix',
                       'ObservationRow',
                       'Abbreviation',
                       'MatrixFile',
                       'ColorPalette',
                       'DisplayColor'],
         'in_subset': ['translator_minimal'],
         'narrow_mappings': ['gff3:Dbxref', 'gpi:DB_Xrefs'],
         'slot_uri': 'biolink:xref'} })
    full_name: Optional[str] = Field(default=None, description="""a long-form human readable name for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'full_name',
         'definition_uri': 'https://w3id.org/biolink/vocab/full_name',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:full_name'} })
    synonym: Optional[List[str]] = Field(default=None, description="""Alternate human-readable names for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'synonym',
         'aliases': ['alias'],
         'definition_uri': 'https://w3id.org/biolink/vocab/synonym',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'narrow_mappings': ['skos:altLabel',
                             'gff3:Alias',
                             'AGRKB:synonyms',
                             'gpi:DB_Object_Synonyms',
                             'HANCESTRO:0330',
                             'IAO:0000136',
                             'RXNORM:has_tradename'],
         'slot_uri': 'biolink:synonym'} })


class Occurrent(PhysicalEssenceOrOccurrent):
    """
    A processual entity.
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'class_uri': 'biolink:Occurrent',
         'definition_uri': 'https://w3id.org/biolink/vocab/Occurrent',
         'exact_mappings': ['BFO:0000003'],
         'from_schema': 'https://w3id.org/biolink/bican-biolink-schema',
         'mixin': True})

    pass


class ActivityAndBehavior(Occurrent):
    """
    Activity or behavior of any independent integral living, organization or mechanical actor in the world
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'class_uri': 'biolink:ActivityAndBehavior',
         'definition_uri': 'https://w3id.org/biolink/vocab/ActivityAndBehavior',
         'exact_mappings': ['UMLSSG:ACTI'],
         'from_schema': 'https://w3id.org/biolink/bican-biolink-schema',
         'mixin': True})

    pass


class Activity(ActivityAndBehavior, NamedThing):
    """
    An activity is something that occurs over a period of time and acts upon or with entities; it may include consuming, processing, transforming, modifying, relocating, using, or generating entities.
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'class_uri': 'biolink:Activity',
         'definition_uri': 'https://w3id.org/biolink/vocab/Activity',
         'exact_mappings': ['prov:Activity', 'NCIT:C43431', 'STY:T052'],
         'from_schema': 'https://w3id.org/biolink/bican-biolink-schema',
         'mixins': ['activity and behavior'],
         'narrow_mappings': ['STY:T056',
                             'STY:T057',
                             'STY:T064',
                             'STY:T066',
                             'STY:T062',
                             'STY:T065',
                             'STY:T058']})

    id: str = Field(default=..., description="""A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })
    iri: Optional[str] = Field(default=None, description="""An IRI for an entity. This is determined by the id using expansion rules.""", json_schema_extra = { "linkml_meta": {'alias': 'iri',
         'definition_uri': 'https://w3id.org/biolink/vocab/iri',
         'domain_of': ['attribute',
                       'entity',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P854'],
         'in_subset': ['translator_minimal', 'samples'],
         'slot_uri': 'biolink:iri'} })
    category: List[Literal["https://w3id.org/biolink/vocab/Activity","biolink:Activity"]] = Field(default=["biolink:Activity"], description="""Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}.""", json_schema_extra = { "linkml_meta": {'alias': 'category',
         'definition_uri': 'https://w3id.org/biolink/vocab/category',
         'designates_type': True,
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'type',
         'is_class_field': True,
         'slot_uri': 'biolink:category'} })
    type: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'type',
         'definition_uri': 'https://w3id.org/biolink/vocab/type',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['gff3:type', 'gpi:DB_Object_Type'],
         'mappings': ['rdf:type'],
         'slot_uri': 'rdf:type'} })
    name: Optional[str] = Field(default=None, description="""A human-readable name for an attribute or entity.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })
    description: Optional[str] = Field(default=None, description="""a human-readable description of an entity""", json_schema_extra = { "linkml_meta": {'alias': 'description',
         'aliases': ['definition'],
         'definition_uri': 'https://w3id.org/biolink/vocab/description',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'ColorPalette'],
         'exact_mappings': ['IAO:0000115', 'skos:definitions'],
         'in_subset': ['translator_minimal'],
         'mappings': ['dct:description'],
         'narrow_mappings': ['gff3:Description'],
         'slot_uri': 'dct:description'} })
    has_attribute: Optional[List[str]] = Field(default=None, description="""connects any entity to an attribute""", json_schema_extra = { "linkml_meta": {'alias': 'has_attribute',
         'close_mappings': ['OBI:0001927'],
         'definition_uri': 'https://w3id.org/biolink/vocab/has_attribute',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['SIO:000008'],
         'in_subset': ['samples'],
         'narrow_mappings': ['OBAN:association_has_subject_property',
                             'OBAN:association_has_object_property',
                             'CPT:has_possibly_included_panel_element',
                             'DRUGBANK:category',
                             'EFO:is_executed_in',
                             'HANCESTRO:0301',
                             'LOINC:has_action_guidance',
                             'LOINC:has_adjustment',
                             'LOINC:has_aggregation_view',
                             'LOINC:has_approach_guidance',
                             'LOINC:has_divisor',
                             'LOINC:has_exam',
                             'LOINC:has_method',
                             'LOINC:has_modality_subtype',
                             'LOINC:has_object_guidance',
                             'LOINC:has_scale',
                             'LOINC:has_suffix',
                             'LOINC:has_time_aspect',
                             'LOINC:has_time_modifier',
                             'LOINC:has_timing_of',
                             'NCIT:R88',
                             'NCIT:eo_disease_has_property_or_attribute',
                             'NCIT:has_data_element',
                             'NCIT:has_pharmaceutical_administration_method',
                             'NCIT:has_pharmaceutical_basic_dose_form',
                             'NCIT:has_pharmaceutical_intended_site',
                             'NCIT:has_pharmaceutical_release_characteristics',
                             'NCIT:has_pharmaceutical_state_of_matter',
                             'NCIT:has_pharmaceutical_transformation',
                             'NCIT:is_qualified_by',
                             'NCIT:qualifier_applies_to',
                             'NCIT:role_has_domain',
                             'NCIT:role_has_range',
                             'INO:0000154',
                             'HANCESTRO:0308',
                             'OMIM:has_inheritance_type',
                             'orphanet:C016',
                             'orphanet:C017',
                             'RO:0000053',
                             'RO:0000086',
                             'RO:0000087',
                             'SNOMED:has_access',
                             'SNOMED:has_clinical_course',
                             'SNOMED:has_count_of_base_of_active_ingredient',
                             'SNOMED:has_dose_form_administration_method',
                             'SNOMED:has_dose_form_release_characteristic',
                             'SNOMED:has_dose_form_transformation',
                             'SNOMED:has_finding_context',
                             'SNOMED:has_finding_informer',
                             'SNOMED:has_inherent_attribute',
                             'SNOMED:has_intent',
                             'SNOMED:has_interpretation',
                             'SNOMED:has_laterality',
                             'SNOMED:has_measurement_method',
                             'SNOMED:has_method',
                             'SNOMED:has_priority',
                             'SNOMED:has_procedure_context',
                             'SNOMED:has_process_duration',
                             'SNOMED:has_property',
                             'SNOMED:has_revision_status',
                             'SNOMED:has_scale_type',
                             'SNOMED:has_severity',
                             'SNOMED:has_specimen',
                             'SNOMED:has_state_of_matter',
                             'SNOMED:has_subject_relationship_context',
                             'SNOMED:has_surgical_approach',
                             'SNOMED:has_technique',
                             'SNOMED:has_temporal_context',
                             'SNOMED:has_time_aspect',
                             'SNOMED:has_units',
                             'UMLS:has_structural_class',
                             'UMLS:has_supported_concept_property',
                             'UMLS:has_supported_concept_relationship',
                             'UMLS:may_be_qualified_by'],
         'slot_uri': 'biolink:has_attribute'} })
    deprecated: Optional[bool] = Field(default=None, description="""A boolean flag indicating that an entity is no longer considered current or valid.""", json_schema_extra = { "linkml_meta": {'alias': 'deprecated',
         'definition_uri': 'https://w3id.org/biolink/vocab/deprecated',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['oboInOwl:ObsoleteClass'],
         'slot_uri': 'biolink:deprecated'} })
    provided_by: Optional[List[str]] = Field(default=None, description="""The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.""", json_schema_extra = { "linkml_meta": {'alias': 'provided_by',
         'definition_uri': 'https://w3id.org/biolink/vocab/provided_by',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:provided_by'} })
    xref: Optional[List[str]] = Field(default=None, description="""A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.""", json_schema_extra = { "linkml_meta": {'alias': 'xref',
         'aliases': ['dbxref', 'Dbxref', 'DbXref', 'record_url', 'source_record_urls'],
         'definition_uri': 'https://w3id.org/biolink/vocab/xref',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'gene',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ObservationMatrix',
                       'ObservationRow',
                       'Abbreviation',
                       'MatrixFile',
                       'ColorPalette',
                       'DisplayColor'],
         'in_subset': ['translator_minimal'],
         'narrow_mappings': ['gff3:Dbxref', 'gpi:DB_Xrefs'],
         'slot_uri': 'biolink:xref'} })
    full_name: Optional[str] = Field(default=None, description="""a long-form human readable name for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'full_name',
         'definition_uri': 'https://w3id.org/biolink/vocab/full_name',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:full_name'} })
    synonym: Optional[List[str]] = Field(default=None, description="""Alternate human-readable names for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'synonym',
         'aliases': ['alias'],
         'definition_uri': 'https://w3id.org/biolink/vocab/synonym',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'narrow_mappings': ['skos:altLabel',
                             'gff3:Alias',
                             'AGRKB:synonyms',
                             'gpi:DB_Object_Synonyms',
                             'HANCESTRO:0330',
                             'IAO:0000136',
                             'RXNORM:has_tradename'],
         'slot_uri': 'biolink:synonym'} })


class Procedure(ActivityAndBehavior, NamedThing):
    """
    A series of actions conducted in a certain order or manner
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'class_uri': 'biolink:Procedure',
         'definition_uri': 'https://w3id.org/biolink/vocab/Procedure',
         'exact_mappings': ['UMLSSG:PROC', 'dcid:MedicalProcedure'],
         'from_schema': 'https://w3id.org/biolink/bican-biolink-schema',
         'id_prefixes': ['CPT'],
         'mixins': ['activity and behavior'],
         'narrow_mappings': ['STY:T059', 'STY:T060', 'STY:T061', 'STY:T063']})

    id: str = Field(default=..., description="""A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })
    iri: Optional[str] = Field(default=None, description="""An IRI for an entity. This is determined by the id using expansion rules.""", json_schema_extra = { "linkml_meta": {'alias': 'iri',
         'definition_uri': 'https://w3id.org/biolink/vocab/iri',
         'domain_of': ['attribute',
                       'entity',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P854'],
         'in_subset': ['translator_minimal', 'samples'],
         'slot_uri': 'biolink:iri'} })
    category: List[Literal["https://w3id.org/biolink/vocab/Procedure","biolink:Procedure"]] = Field(default=["biolink:Procedure"], description="""Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}.""", json_schema_extra = { "linkml_meta": {'alias': 'category',
         'definition_uri': 'https://w3id.org/biolink/vocab/category',
         'designates_type': True,
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'type',
         'is_class_field': True,
         'slot_uri': 'biolink:category'} })
    type: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'type',
         'definition_uri': 'https://w3id.org/biolink/vocab/type',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['gff3:type', 'gpi:DB_Object_Type'],
         'mappings': ['rdf:type'],
         'slot_uri': 'rdf:type'} })
    name: Optional[str] = Field(default=None, description="""A human-readable name for an attribute or entity.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })
    description: Optional[str] = Field(default=None, description="""a human-readable description of an entity""", json_schema_extra = { "linkml_meta": {'alias': 'description',
         'aliases': ['definition'],
         'definition_uri': 'https://w3id.org/biolink/vocab/description',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'ColorPalette'],
         'exact_mappings': ['IAO:0000115', 'skos:definitions'],
         'in_subset': ['translator_minimal'],
         'mappings': ['dct:description'],
         'narrow_mappings': ['gff3:Description'],
         'slot_uri': 'dct:description'} })
    has_attribute: Optional[List[str]] = Field(default=None, description="""connects any entity to an attribute""", json_schema_extra = { "linkml_meta": {'alias': 'has_attribute',
         'close_mappings': ['OBI:0001927'],
         'definition_uri': 'https://w3id.org/biolink/vocab/has_attribute',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['SIO:000008'],
         'in_subset': ['samples'],
         'narrow_mappings': ['OBAN:association_has_subject_property',
                             'OBAN:association_has_object_property',
                             'CPT:has_possibly_included_panel_element',
                             'DRUGBANK:category',
                             'EFO:is_executed_in',
                             'HANCESTRO:0301',
                             'LOINC:has_action_guidance',
                             'LOINC:has_adjustment',
                             'LOINC:has_aggregation_view',
                             'LOINC:has_approach_guidance',
                             'LOINC:has_divisor',
                             'LOINC:has_exam',
                             'LOINC:has_method',
                             'LOINC:has_modality_subtype',
                             'LOINC:has_object_guidance',
                             'LOINC:has_scale',
                             'LOINC:has_suffix',
                             'LOINC:has_time_aspect',
                             'LOINC:has_time_modifier',
                             'LOINC:has_timing_of',
                             'NCIT:R88',
                             'NCIT:eo_disease_has_property_or_attribute',
                             'NCIT:has_data_element',
                             'NCIT:has_pharmaceutical_administration_method',
                             'NCIT:has_pharmaceutical_basic_dose_form',
                             'NCIT:has_pharmaceutical_intended_site',
                             'NCIT:has_pharmaceutical_release_characteristics',
                             'NCIT:has_pharmaceutical_state_of_matter',
                             'NCIT:has_pharmaceutical_transformation',
                             'NCIT:is_qualified_by',
                             'NCIT:qualifier_applies_to',
                             'NCIT:role_has_domain',
                             'NCIT:role_has_range',
                             'INO:0000154',
                             'HANCESTRO:0308',
                             'OMIM:has_inheritance_type',
                             'orphanet:C016',
                             'orphanet:C017',
                             'RO:0000053',
                             'RO:0000086',
                             'RO:0000087',
                             'SNOMED:has_access',
                             'SNOMED:has_clinical_course',
                             'SNOMED:has_count_of_base_of_active_ingredient',
                             'SNOMED:has_dose_form_administration_method',
                             'SNOMED:has_dose_form_release_characteristic',
                             'SNOMED:has_dose_form_transformation',
                             'SNOMED:has_finding_context',
                             'SNOMED:has_finding_informer',
                             'SNOMED:has_inherent_attribute',
                             'SNOMED:has_intent',
                             'SNOMED:has_interpretation',
                             'SNOMED:has_laterality',
                             'SNOMED:has_measurement_method',
                             'SNOMED:has_method',
                             'SNOMED:has_priority',
                             'SNOMED:has_procedure_context',
                             'SNOMED:has_process_duration',
                             'SNOMED:has_property',
                             'SNOMED:has_revision_status',
                             'SNOMED:has_scale_type',
                             'SNOMED:has_severity',
                             'SNOMED:has_specimen',
                             'SNOMED:has_state_of_matter',
                             'SNOMED:has_subject_relationship_context',
                             'SNOMED:has_surgical_approach',
                             'SNOMED:has_technique',
                             'SNOMED:has_temporal_context',
                             'SNOMED:has_time_aspect',
                             'SNOMED:has_units',
                             'UMLS:has_structural_class',
                             'UMLS:has_supported_concept_property',
                             'UMLS:has_supported_concept_relationship',
                             'UMLS:may_be_qualified_by'],
         'slot_uri': 'biolink:has_attribute'} })
    deprecated: Optional[bool] = Field(default=None, description="""A boolean flag indicating that an entity is no longer considered current or valid.""", json_schema_extra = { "linkml_meta": {'alias': 'deprecated',
         'definition_uri': 'https://w3id.org/biolink/vocab/deprecated',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['oboInOwl:ObsoleteClass'],
         'slot_uri': 'biolink:deprecated'} })
    provided_by: Optional[List[str]] = Field(default=None, description="""The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.""", json_schema_extra = { "linkml_meta": {'alias': 'provided_by',
         'definition_uri': 'https://w3id.org/biolink/vocab/provided_by',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:provided_by'} })
    xref: Optional[List[str]] = Field(default=None, description="""A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.""", json_schema_extra = { "linkml_meta": {'alias': 'xref',
         'aliases': ['dbxref', 'Dbxref', 'DbXref', 'record_url', 'source_record_urls'],
         'definition_uri': 'https://w3id.org/biolink/vocab/xref',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'gene',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ObservationMatrix',
                       'ObservationRow',
                       'Abbreviation',
                       'MatrixFile',
                       'ColorPalette',
                       'DisplayColor'],
         'in_subset': ['translator_minimal'],
         'narrow_mappings': ['gff3:Dbxref', 'gpi:DB_Xrefs'],
         'slot_uri': 'biolink:xref'} })
    full_name: Optional[str] = Field(default=None, description="""a long-form human readable name for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'full_name',
         'definition_uri': 'https://w3id.org/biolink/vocab/full_name',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:full_name'} })
    synonym: Optional[List[str]] = Field(default=None, description="""Alternate human-readable names for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'synonym',
         'aliases': ['alias'],
         'definition_uri': 'https://w3id.org/biolink/vocab/synonym',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'narrow_mappings': ['skos:altLabel',
                             'gff3:Alias',
                             'AGRKB:synonyms',
                             'gpi:DB_Object_Synonyms',
                             'HANCESTRO:0330',
                             'IAO:0000136',
                             'RXNORM:has_tradename'],
         'slot_uri': 'biolink:synonym'} })


class SubjectOfInvestigation(ConfiguredBaseModel):
    """
    An entity that has the role of being studied in an investigation, study, or experiment
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'class_uri': 'biolink:SubjectOfInvestigation',
         'definition_uri': 'https://w3id.org/biolink/vocab/SubjectOfInvestigation',
         'from_schema': 'https://w3id.org/biolink/bican-biolink-schema',
         'mixin': True})

    pass


class MaterialSample(SubjectOfInvestigation, PhysicalEntity):
    """
    A sample is a limited quantity of something (e.g. an individual or set of individuals from a population, or a portion of a substance) to be used for testing, analysis, inspection, investigation, demonstration, or trial use. [SIO]
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'aliases': ['biospecimen', 'sample', 'biosample', 'physical sample'],
         'class_uri': 'biolink:MaterialSample',
         'definition_uri': 'https://w3id.org/biolink/vocab/MaterialSample',
         'exact_mappings': ['OBI:0000747', 'SIO:001050'],
         'from_schema': 'https://w3id.org/biolink/bican-biolink-schema',
         'id_prefixes': ['BIOSAMPLE', 'GOLD.META'],
         'mixins': ['subject of investigation']})

    id: str = Field(default=..., description="""A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })
    iri: Optional[str] = Field(default=None, description="""An IRI for an entity. This is determined by the id using expansion rules.""", json_schema_extra = { "linkml_meta": {'alias': 'iri',
         'definition_uri': 'https://w3id.org/biolink/vocab/iri',
         'domain_of': ['attribute',
                       'entity',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P854'],
         'in_subset': ['translator_minimal', 'samples'],
         'slot_uri': 'biolink:iri'} })
    category: List[Literal["https://w3id.org/biolink/vocab/MaterialSample","biolink:MaterialSample"]] = Field(default=["biolink:MaterialSample"], description="""Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}.""", json_schema_extra = { "linkml_meta": {'alias': 'category',
         'definition_uri': 'https://w3id.org/biolink/vocab/category',
         'designates_type': True,
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'type',
         'is_class_field': True,
         'slot_uri': 'biolink:category'} })
    type: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'type',
         'definition_uri': 'https://w3id.org/biolink/vocab/type',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['gff3:type', 'gpi:DB_Object_Type'],
         'mappings': ['rdf:type'],
         'slot_uri': 'rdf:type'} })
    name: Optional[str] = Field(default=None, description="""A human-readable name for an attribute or entity.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })
    description: Optional[str] = Field(default=None, description="""a human-readable description of an entity""", json_schema_extra = { "linkml_meta": {'alias': 'description',
         'aliases': ['definition'],
         'definition_uri': 'https://w3id.org/biolink/vocab/description',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'ColorPalette'],
         'exact_mappings': ['IAO:0000115', 'skos:definitions'],
         'in_subset': ['translator_minimal'],
         'mappings': ['dct:description'],
         'narrow_mappings': ['gff3:Description'],
         'slot_uri': 'dct:description'} })
    has_attribute: Optional[List[str]] = Field(default=None, description="""connects any entity to an attribute""", json_schema_extra = { "linkml_meta": {'alias': 'has_attribute',
         'close_mappings': ['OBI:0001927'],
         'definition_uri': 'https://w3id.org/biolink/vocab/has_attribute',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['SIO:000008'],
         'in_subset': ['samples'],
         'narrow_mappings': ['OBAN:association_has_subject_property',
                             'OBAN:association_has_object_property',
                             'CPT:has_possibly_included_panel_element',
                             'DRUGBANK:category',
                             'EFO:is_executed_in',
                             'HANCESTRO:0301',
                             'LOINC:has_action_guidance',
                             'LOINC:has_adjustment',
                             'LOINC:has_aggregation_view',
                             'LOINC:has_approach_guidance',
                             'LOINC:has_divisor',
                             'LOINC:has_exam',
                             'LOINC:has_method',
                             'LOINC:has_modality_subtype',
                             'LOINC:has_object_guidance',
                             'LOINC:has_scale',
                             'LOINC:has_suffix',
                             'LOINC:has_time_aspect',
                             'LOINC:has_time_modifier',
                             'LOINC:has_timing_of',
                             'NCIT:R88',
                             'NCIT:eo_disease_has_property_or_attribute',
                             'NCIT:has_data_element',
                             'NCIT:has_pharmaceutical_administration_method',
                             'NCIT:has_pharmaceutical_basic_dose_form',
                             'NCIT:has_pharmaceutical_intended_site',
                             'NCIT:has_pharmaceutical_release_characteristics',
                             'NCIT:has_pharmaceutical_state_of_matter',
                             'NCIT:has_pharmaceutical_transformation',
                             'NCIT:is_qualified_by',
                             'NCIT:qualifier_applies_to',
                             'NCIT:role_has_domain',
                             'NCIT:role_has_range',
                             'INO:0000154',
                             'HANCESTRO:0308',
                             'OMIM:has_inheritance_type',
                             'orphanet:C016',
                             'orphanet:C017',
                             'RO:0000053',
                             'RO:0000086',
                             'RO:0000087',
                             'SNOMED:has_access',
                             'SNOMED:has_clinical_course',
                             'SNOMED:has_count_of_base_of_active_ingredient',
                             'SNOMED:has_dose_form_administration_method',
                             'SNOMED:has_dose_form_release_characteristic',
                             'SNOMED:has_dose_form_transformation',
                             'SNOMED:has_finding_context',
                             'SNOMED:has_finding_informer',
                             'SNOMED:has_inherent_attribute',
                             'SNOMED:has_intent',
                             'SNOMED:has_interpretation',
                             'SNOMED:has_laterality',
                             'SNOMED:has_measurement_method',
                             'SNOMED:has_method',
                             'SNOMED:has_priority',
                             'SNOMED:has_procedure_context',
                             'SNOMED:has_process_duration',
                             'SNOMED:has_property',
                             'SNOMED:has_revision_status',
                             'SNOMED:has_scale_type',
                             'SNOMED:has_severity',
                             'SNOMED:has_specimen',
                             'SNOMED:has_state_of_matter',
                             'SNOMED:has_subject_relationship_context',
                             'SNOMED:has_surgical_approach',
                             'SNOMED:has_technique',
                             'SNOMED:has_temporal_context',
                             'SNOMED:has_time_aspect',
                             'SNOMED:has_units',
                             'UMLS:has_structural_class',
                             'UMLS:has_supported_concept_property',
                             'UMLS:has_supported_concept_relationship',
                             'UMLS:may_be_qualified_by'],
         'slot_uri': 'biolink:has_attribute'} })
    deprecated: Optional[bool] = Field(default=None, description="""A boolean flag indicating that an entity is no longer considered current or valid.""", json_schema_extra = { "linkml_meta": {'alias': 'deprecated',
         'definition_uri': 'https://w3id.org/biolink/vocab/deprecated',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['oboInOwl:ObsoleteClass'],
         'slot_uri': 'biolink:deprecated'} })
    provided_by: Optional[List[str]] = Field(default=None, description="""The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.""", json_schema_extra = { "linkml_meta": {'alias': 'provided_by',
         'definition_uri': 'https://w3id.org/biolink/vocab/provided_by',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:provided_by'} })
    xref: Optional[List[str]] = Field(default=None, description="""A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.""", json_schema_extra = { "linkml_meta": {'alias': 'xref',
         'aliases': ['dbxref', 'Dbxref', 'DbXref', 'record_url', 'source_record_urls'],
         'definition_uri': 'https://w3id.org/biolink/vocab/xref',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'gene',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ObservationMatrix',
                       'ObservationRow',
                       'Abbreviation',
                       'MatrixFile',
                       'ColorPalette',
                       'DisplayColor'],
         'in_subset': ['translator_minimal'],
         'narrow_mappings': ['gff3:Dbxref', 'gpi:DB_Xrefs'],
         'slot_uri': 'biolink:xref'} })
    full_name: Optional[str] = Field(default=None, description="""a long-form human readable name for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'full_name',
         'definition_uri': 'https://w3id.org/biolink/vocab/full_name',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:full_name'} })
    synonym: Optional[List[str]] = Field(default=None, description="""Alternate human-readable names for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'synonym',
         'aliases': ['alias'],
         'definition_uri': 'https://w3id.org/biolink/vocab/synonym',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'narrow_mappings': ['skos:altLabel',
                             'gff3:Alias',
                             'AGRKB:synonyms',
                             'gpi:DB_Object_Synonyms',
                             'HANCESTRO:0330',
                             'IAO:0000136',
                             'RXNORM:has_tradename'],
         'slot_uri': 'biolink:synonym'} })


class ThingWithTaxon(ConfiguredBaseModel):
    """
    A mixin that can be used on any entity that can be taxonomically classified. This includes individual organisms; genes, their products and other molecular entities; body parts; biological processes
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'class_uri': 'biolink:ThingWithTaxon',
         'definition_uri': 'https://w3id.org/biolink/vocab/ThingWithTaxon',
         'from_schema': 'https://w3id.org/biolink/bican-biolink-schema',
         'mixin': True})

    in_taxon: Optional[List[str]] = Field(default=None, description="""connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'""", json_schema_extra = { "linkml_meta": {'alias': 'in_taxon',
         'aliases': ['instance of',
                     'is organism source of gene product',
                     'organism has gene',
                     'gene found in organism',
                     'gene product has organism source'],
         'annotations': {'canonical_predicate': {'tag': 'canonical_predicate',
                                                 'value': True}},
         'definition_uri': 'https://w3id.org/biolink/vocab/in_taxon',
         'domain': 'thing with taxon',
         'domain_of': ['thing with taxon', 'biological entity', 'gene', 'genome'],
         'exact_mappings': ['RO:0002162', 'WIKIDATA_PROPERTY:P703'],
         'in_subset': ['translator_minimal'],
         'inherited': True,
         'is_a': 'related to at instance level',
         'narrow_mappings': ['RO:0002160'],
         'slot_uri': 'biolink:in_taxon'} })
    in_taxon_label: Optional[str] = Field(default=None, description="""The human readable scientific name for the taxon of the entity.""", json_schema_extra = { "linkml_meta": {'alias': 'in_taxon_label',
         'annotations': {'denormalized': {'tag': 'denormalized', 'value': True}},
         'definition_uri': 'https://w3id.org/biolink/vocab/in_taxon_label',
         'domain': 'thing with taxon',
         'domain_of': ['thing with taxon', 'biological entity', 'gene', 'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P225'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'slot_uri': 'biolink:in_taxon_label'} })


class BiologicalEntity(ThingWithTaxon, NamedThing):
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'abstract': True,
         'aliases': ['bioentity'],
         'class_uri': 'biolink:BiologicalEntity',
         'definition_uri': 'https://w3id.org/biolink/vocab/BiologicalEntity',
         'from_schema': 'https://w3id.org/biolink/bican-biolink-schema',
         'mixins': ['thing with taxon'],
         'narrow_mappings': ['WIKIDATA:Q28845870',
                             'STY:T050',
                             'SIO:010046',
                             'STY:T129']})

    id: str = Field(default=..., description="""A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })
    iri: Optional[str] = Field(default=None, description="""An IRI for an entity. This is determined by the id using expansion rules.""", json_schema_extra = { "linkml_meta": {'alias': 'iri',
         'definition_uri': 'https://w3id.org/biolink/vocab/iri',
         'domain_of': ['attribute',
                       'entity',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P854'],
         'in_subset': ['translator_minimal', 'samples'],
         'slot_uri': 'biolink:iri'} })
    category: List[Literal["https://w3id.org/biolink/vocab/BiologicalEntity","biolink:BiologicalEntity"]] = Field(default=["biolink:BiologicalEntity"], description="""Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}.""", json_schema_extra = { "linkml_meta": {'alias': 'category',
         'definition_uri': 'https://w3id.org/biolink/vocab/category',
         'designates_type': True,
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'type',
         'is_class_field': True,
         'slot_uri': 'biolink:category'} })
    type: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'type',
         'definition_uri': 'https://w3id.org/biolink/vocab/type',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['gff3:type', 'gpi:DB_Object_Type'],
         'mappings': ['rdf:type'],
         'slot_uri': 'rdf:type'} })
    name: Optional[str] = Field(default=None, description="""A human-readable name for an attribute or entity.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })
    description: Optional[str] = Field(default=None, description="""a human-readable description of an entity""", json_schema_extra = { "linkml_meta": {'alias': 'description',
         'aliases': ['definition'],
         'definition_uri': 'https://w3id.org/biolink/vocab/description',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'ColorPalette'],
         'exact_mappings': ['IAO:0000115', 'skos:definitions'],
         'in_subset': ['translator_minimal'],
         'mappings': ['dct:description'],
         'narrow_mappings': ['gff3:Description'],
         'slot_uri': 'dct:description'} })
    has_attribute: Optional[List[str]] = Field(default=None, description="""connects any entity to an attribute""", json_schema_extra = { "linkml_meta": {'alias': 'has_attribute',
         'close_mappings': ['OBI:0001927'],
         'definition_uri': 'https://w3id.org/biolink/vocab/has_attribute',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['SIO:000008'],
         'in_subset': ['samples'],
         'narrow_mappings': ['OBAN:association_has_subject_property',
                             'OBAN:association_has_object_property',
                             'CPT:has_possibly_included_panel_element',
                             'DRUGBANK:category',
                             'EFO:is_executed_in',
                             'HANCESTRO:0301',
                             'LOINC:has_action_guidance',
                             'LOINC:has_adjustment',
                             'LOINC:has_aggregation_view',
                             'LOINC:has_approach_guidance',
                             'LOINC:has_divisor',
                             'LOINC:has_exam',
                             'LOINC:has_method',
                             'LOINC:has_modality_subtype',
                             'LOINC:has_object_guidance',
                             'LOINC:has_scale',
                             'LOINC:has_suffix',
                             'LOINC:has_time_aspect',
                             'LOINC:has_time_modifier',
                             'LOINC:has_timing_of',
                             'NCIT:R88',
                             'NCIT:eo_disease_has_property_or_attribute',
                             'NCIT:has_data_element',
                             'NCIT:has_pharmaceutical_administration_method',
                             'NCIT:has_pharmaceutical_basic_dose_form',
                             'NCIT:has_pharmaceutical_intended_site',
                             'NCIT:has_pharmaceutical_release_characteristics',
                             'NCIT:has_pharmaceutical_state_of_matter',
                             'NCIT:has_pharmaceutical_transformation',
                             'NCIT:is_qualified_by',
                             'NCIT:qualifier_applies_to',
                             'NCIT:role_has_domain',
                             'NCIT:role_has_range',
                             'INO:0000154',
                             'HANCESTRO:0308',
                             'OMIM:has_inheritance_type',
                             'orphanet:C016',
                             'orphanet:C017',
                             'RO:0000053',
                             'RO:0000086',
                             'RO:0000087',
                             'SNOMED:has_access',
                             'SNOMED:has_clinical_course',
                             'SNOMED:has_count_of_base_of_active_ingredient',
                             'SNOMED:has_dose_form_administration_method',
                             'SNOMED:has_dose_form_release_characteristic',
                             'SNOMED:has_dose_form_transformation',
                             'SNOMED:has_finding_context',
                             'SNOMED:has_finding_informer',
                             'SNOMED:has_inherent_attribute',
                             'SNOMED:has_intent',
                             'SNOMED:has_interpretation',
                             'SNOMED:has_laterality',
                             'SNOMED:has_measurement_method',
                             'SNOMED:has_method',
                             'SNOMED:has_priority',
                             'SNOMED:has_procedure_context',
                             'SNOMED:has_process_duration',
                             'SNOMED:has_property',
                             'SNOMED:has_revision_status',
                             'SNOMED:has_scale_type',
                             'SNOMED:has_severity',
                             'SNOMED:has_specimen',
                             'SNOMED:has_state_of_matter',
                             'SNOMED:has_subject_relationship_context',
                             'SNOMED:has_surgical_approach',
                             'SNOMED:has_technique',
                             'SNOMED:has_temporal_context',
                             'SNOMED:has_time_aspect',
                             'SNOMED:has_units',
                             'UMLS:has_structural_class',
                             'UMLS:has_supported_concept_property',
                             'UMLS:has_supported_concept_relationship',
                             'UMLS:may_be_qualified_by'],
         'slot_uri': 'biolink:has_attribute'} })
    deprecated: Optional[bool] = Field(default=None, description="""A boolean flag indicating that an entity is no longer considered current or valid.""", json_schema_extra = { "linkml_meta": {'alias': 'deprecated',
         'definition_uri': 'https://w3id.org/biolink/vocab/deprecated',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['oboInOwl:ObsoleteClass'],
         'slot_uri': 'biolink:deprecated'} })
    provided_by: Optional[List[str]] = Field(default=None, description="""The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.""", json_schema_extra = { "linkml_meta": {'alias': 'provided_by',
         'definition_uri': 'https://w3id.org/biolink/vocab/provided_by',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:provided_by'} })
    xref: Optional[List[str]] = Field(default=None, description="""A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.""", json_schema_extra = { "linkml_meta": {'alias': 'xref',
         'aliases': ['dbxref', 'Dbxref', 'DbXref', 'record_url', 'source_record_urls'],
         'definition_uri': 'https://w3id.org/biolink/vocab/xref',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'gene',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ObservationMatrix',
                       'ObservationRow',
                       'Abbreviation',
                       'MatrixFile',
                       'ColorPalette',
                       'DisplayColor'],
         'in_subset': ['translator_minimal'],
         'narrow_mappings': ['gff3:Dbxref', 'gpi:DB_Xrefs'],
         'slot_uri': 'biolink:xref'} })
    full_name: Optional[str] = Field(default=None, description="""a long-form human readable name for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'full_name',
         'definition_uri': 'https://w3id.org/biolink/vocab/full_name',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:full_name'} })
    synonym: Optional[List[str]] = Field(default=None, description="""Alternate human-readable names for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'synonym',
         'aliases': ['alias'],
         'definition_uri': 'https://w3id.org/biolink/vocab/synonym',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'narrow_mappings': ['skos:altLabel',
                             'gff3:Alias',
                             'AGRKB:synonyms',
                             'gpi:DB_Object_Synonyms',
                             'HANCESTRO:0330',
                             'IAO:0000136',
                             'RXNORM:has_tradename'],
         'slot_uri': 'biolink:synonym'} })
    in_taxon: Optional[List[str]] = Field(default=None, description="""connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'""", json_schema_extra = { "linkml_meta": {'alias': 'in_taxon',
         'aliases': ['instance of',
                     'is organism source of gene product',
                     'organism has gene',
                     'gene found in organism',
                     'gene product has organism source'],
         'annotations': {'canonical_predicate': {'tag': 'canonical_predicate',
                                                 'value': True}},
         'definition_uri': 'https://w3id.org/biolink/vocab/in_taxon',
         'domain': 'thing with taxon',
         'domain_of': ['thing with taxon', 'biological entity', 'gene', 'genome'],
         'exact_mappings': ['RO:0002162', 'WIKIDATA_PROPERTY:P703'],
         'in_subset': ['translator_minimal'],
         'inherited': True,
         'is_a': 'related to at instance level',
         'narrow_mappings': ['RO:0002160'],
         'slot_uri': 'biolink:in_taxon'} })
    in_taxon_label: Optional[str] = Field(default=None, description="""The human readable scientific name for the taxon of the entity.""", json_schema_extra = { "linkml_meta": {'alias': 'in_taxon_label',
         'annotations': {'denormalized': {'tag': 'denormalized', 'value': True}},
         'definition_uri': 'https://w3id.org/biolink/vocab/in_taxon_label',
         'domain': 'thing with taxon',
         'domain_of': ['thing with taxon', 'biological entity', 'gene', 'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P225'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'slot_uri': 'biolink:in_taxon_label'} })


class GenomicEntity(ConfiguredBaseModel):
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'class_uri': 'biolink:GenomicEntity',
         'definition_uri': 'https://w3id.org/biolink/vocab/GenomicEntity',
         'from_schema': 'https://w3id.org/biolink/bican-biolink-schema',
         'in_subset': ['translator_minimal'],
         'mixin': True,
         'narrow_mappings': ['STY:T028', 'GENO:0000897']})

    has_biological_sequence: Optional[str] = Field(default=None, description="""connects a genomic feature to its sequence""", json_schema_extra = { "linkml_meta": {'alias': 'has_biological_sequence',
         'definition_uri': 'https://w3id.org/biolink/vocab/has_biological_sequence',
         'domain': 'named thing',
         'domain_of': ['genomic entity', 'gene', 'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:has_biological_sequence'} })


class ChemicalEntityOrGeneOrGeneProduct(ConfiguredBaseModel):
    """
    A union of chemical entities and children, and gene or gene product. This mixin is helpful to use when searching across chemical entities that must include genes and their children as chemical entities.
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'class_uri': 'biolink:ChemicalEntityOrGeneOrGeneProduct',
         'definition_uri': 'https://w3id.org/biolink/vocab/ChemicalEntityOrGeneOrGeneProduct',
         'from_schema': 'https://w3id.org/biolink/bican-biolink-schema',
         'mixin': True})

    pass


class MacromolecularMachineMixin(ConfiguredBaseModel):
    """
    A union of gene locus, gene product, and macromolecular complex. These are the basic units of function in a cell. They either carry out individual biological activities, or they encode molecules which do this.
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'class_uri': 'biolink:MacromolecularMachineMixin',
         'definition_uri': 'https://w3id.org/biolink/vocab/MacromolecularMachineMixin',
         'from_schema': 'https://w3id.org/biolink/bican-biolink-schema',
         'mixin': True})

    name: Optional[str] = Field(default=None, description="""A human-readable name for an attribute or entity.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })


class GeneOrGeneProduct(MacromolecularMachineMixin):
    """
    A union of gene loci or gene products. Frequently an identifier for one will be used as proxy for another
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'class_uri': 'biolink:GeneOrGeneProduct',
         'definition_uri': 'https://w3id.org/biolink/vocab/GeneOrGeneProduct',
         'from_schema': 'https://w3id.org/biolink/bican-biolink-schema',
         'id_prefixes': ['CHEMBL.TARGET', 'IUPHAR.FAMILY'],
         'mixin': True})

    name: Optional[str] = Field(default=None, description="""A human-readable name for an attribute or entity.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })


class Gene(GeneOrGeneProduct, ChemicalEntityOrGeneOrGeneProduct, GenomicEntity, BiologicalEntity, PhysicalEssence, OntologyClass):
    """
    A region (or regions) that includes all of the sequence elements necessary to encode a functional transcript. A gene locus may include regulatory regions, transcribed regions and/or other functional sequence regions.
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'broad_mappings': ['NCIT:C45822'],
         'class_uri': 'biolink:Gene',
         'definition_uri': 'https://w3id.org/biolink/vocab/Gene',
         'exact_mappings': ['SO:0000704', 'SIO:010035', 'WIKIDATA:Q7187', 'dcid:Gene'],
         'from_schema': 'https://w3id.org/biolink/bican-biolink-schema',
         'id_prefixes': ['NCBIGene',
                         'ENSEMBL',
                         'HGNC',
                         'MGI',
                         'ZFIN',
                         'dictyBase',
                         'WB',
                         'WormBase',
                         'FB',
                         'RGD',
                         'SGD',
                         'PomBase',
                         'OMIM',
                         'KEGG.GENES',
                         'UMLS',
                         'Xenbase',
                         'AspGD',
                         'PHARMGKB.GENE'],
         'in_subset': ['translator_minimal', 'model_organism_database'],
         'mixins': ['gene or gene product',
                    'genomic entity',
                    'chemical entity or gene or gene product',
                    'physical essence',
                    'ontology class'],
         'narrow_mappings': ['bioschemas:gene']})

    id: str = Field(default=..., description="""A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })
    iri: Optional[str] = Field(default=None, description="""An IRI for an entity. This is determined by the id using expansion rules.""", json_schema_extra = { "linkml_meta": {'alias': 'iri',
         'definition_uri': 'https://w3id.org/biolink/vocab/iri',
         'domain_of': ['attribute',
                       'entity',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P854'],
         'in_subset': ['translator_minimal', 'samples'],
         'slot_uri': 'biolink:iri'} })
    category: List[Literal["https://w3id.org/biolink/vocab/Gene","biolink:Gene"]] = Field(default=["biolink:Gene"], description="""Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}.""", json_schema_extra = { "linkml_meta": {'alias': 'category',
         'definition_uri': 'https://w3id.org/biolink/vocab/category',
         'designates_type': True,
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'type',
         'is_class_field': True,
         'slot_uri': 'biolink:category'} })
    type: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'type',
         'definition_uri': 'https://w3id.org/biolink/vocab/type',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['gff3:type', 'gpi:DB_Object_Type'],
         'mappings': ['rdf:type'],
         'slot_uri': 'rdf:type'} })
    name: Optional[str] = Field(default=None, description="""A human-readable name for an attribute or entity.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })
    description: Optional[str] = Field(default=None, description="""a human-readable description of an entity""", json_schema_extra = { "linkml_meta": {'alias': 'description',
         'aliases': ['definition'],
         'definition_uri': 'https://w3id.org/biolink/vocab/description',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'ColorPalette'],
         'exact_mappings': ['IAO:0000115', 'skos:definitions'],
         'in_subset': ['translator_minimal'],
         'mappings': ['dct:description'],
         'narrow_mappings': ['gff3:Description'],
         'slot_uri': 'dct:description'} })
    has_attribute: Optional[List[str]] = Field(default=None, description="""connects any entity to an attribute""", json_schema_extra = { "linkml_meta": {'alias': 'has_attribute',
         'close_mappings': ['OBI:0001927'],
         'definition_uri': 'https://w3id.org/biolink/vocab/has_attribute',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['SIO:000008'],
         'in_subset': ['samples'],
         'narrow_mappings': ['OBAN:association_has_subject_property',
                             'OBAN:association_has_object_property',
                             'CPT:has_possibly_included_panel_element',
                             'DRUGBANK:category',
                             'EFO:is_executed_in',
                             'HANCESTRO:0301',
                             'LOINC:has_action_guidance',
                             'LOINC:has_adjustment',
                             'LOINC:has_aggregation_view',
                             'LOINC:has_approach_guidance',
                             'LOINC:has_divisor',
                             'LOINC:has_exam',
                             'LOINC:has_method',
                             'LOINC:has_modality_subtype',
                             'LOINC:has_object_guidance',
                             'LOINC:has_scale',
                             'LOINC:has_suffix',
                             'LOINC:has_time_aspect',
                             'LOINC:has_time_modifier',
                             'LOINC:has_timing_of',
                             'NCIT:R88',
                             'NCIT:eo_disease_has_property_or_attribute',
                             'NCIT:has_data_element',
                             'NCIT:has_pharmaceutical_administration_method',
                             'NCIT:has_pharmaceutical_basic_dose_form',
                             'NCIT:has_pharmaceutical_intended_site',
                             'NCIT:has_pharmaceutical_release_characteristics',
                             'NCIT:has_pharmaceutical_state_of_matter',
                             'NCIT:has_pharmaceutical_transformation',
                             'NCIT:is_qualified_by',
                             'NCIT:qualifier_applies_to',
                             'NCIT:role_has_domain',
                             'NCIT:role_has_range',
                             'INO:0000154',
                             'HANCESTRO:0308',
                             'OMIM:has_inheritance_type',
                             'orphanet:C016',
                             'orphanet:C017',
                             'RO:0000053',
                             'RO:0000086',
                             'RO:0000087',
                             'SNOMED:has_access',
                             'SNOMED:has_clinical_course',
                             'SNOMED:has_count_of_base_of_active_ingredient',
                             'SNOMED:has_dose_form_administration_method',
                             'SNOMED:has_dose_form_release_characteristic',
                             'SNOMED:has_dose_form_transformation',
                             'SNOMED:has_finding_context',
                             'SNOMED:has_finding_informer',
                             'SNOMED:has_inherent_attribute',
                             'SNOMED:has_intent',
                             'SNOMED:has_interpretation',
                             'SNOMED:has_laterality',
                             'SNOMED:has_measurement_method',
                             'SNOMED:has_method',
                             'SNOMED:has_priority',
                             'SNOMED:has_procedure_context',
                             'SNOMED:has_process_duration',
                             'SNOMED:has_property',
                             'SNOMED:has_revision_status',
                             'SNOMED:has_scale_type',
                             'SNOMED:has_severity',
                             'SNOMED:has_specimen',
                             'SNOMED:has_state_of_matter',
                             'SNOMED:has_subject_relationship_context',
                             'SNOMED:has_surgical_approach',
                             'SNOMED:has_technique',
                             'SNOMED:has_temporal_context',
                             'SNOMED:has_time_aspect',
                             'SNOMED:has_units',
                             'UMLS:has_structural_class',
                             'UMLS:has_supported_concept_property',
                             'UMLS:has_supported_concept_relationship',
                             'UMLS:may_be_qualified_by'],
         'slot_uri': 'biolink:has_attribute'} })
    deprecated: Optional[bool] = Field(default=None, description="""A boolean flag indicating that an entity is no longer considered current or valid.""", json_schema_extra = { "linkml_meta": {'alias': 'deprecated',
         'definition_uri': 'https://w3id.org/biolink/vocab/deprecated',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['oboInOwl:ObsoleteClass'],
         'slot_uri': 'biolink:deprecated'} })
    provided_by: Optional[List[str]] = Field(default=None, description="""The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.""", json_schema_extra = { "linkml_meta": {'alias': 'provided_by',
         'definition_uri': 'https://w3id.org/biolink/vocab/provided_by',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:provided_by'} })
    full_name: Optional[str] = Field(default=None, description="""a long-form human readable name for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'full_name',
         'definition_uri': 'https://w3id.org/biolink/vocab/full_name',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:full_name'} })
    synonym: Optional[List[str]] = Field(default=None, description="""Alternate human-readable names for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'synonym',
         'aliases': ['alias'],
         'definition_uri': 'https://w3id.org/biolink/vocab/synonym',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'narrow_mappings': ['skos:altLabel',
                             'gff3:Alias',
                             'AGRKB:synonyms',
                             'gpi:DB_Object_Synonyms',
                             'HANCESTRO:0330',
                             'IAO:0000136',
                             'RXNORM:has_tradename'],
         'slot_uri': 'biolink:synonym'} })
    in_taxon: Optional[List[str]] = Field(default=None, description="""connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'""", json_schema_extra = { "linkml_meta": {'alias': 'in_taxon',
         'aliases': ['instance of',
                     'is organism source of gene product',
                     'organism has gene',
                     'gene found in organism',
                     'gene product has organism source'],
         'annotations': {'canonical_predicate': {'tag': 'canonical_predicate',
                                                 'value': True}},
         'definition_uri': 'https://w3id.org/biolink/vocab/in_taxon',
         'domain': 'thing with taxon',
         'domain_of': ['thing with taxon', 'biological entity', 'gene', 'genome'],
         'exact_mappings': ['RO:0002162', 'WIKIDATA_PROPERTY:P703'],
         'in_subset': ['translator_minimal'],
         'inherited': True,
         'is_a': 'related to at instance level',
         'narrow_mappings': ['RO:0002160'],
         'slot_uri': 'biolink:in_taxon'} })
    in_taxon_label: Optional[str] = Field(default=None, description="""The human readable scientific name for the taxon of the entity.""", json_schema_extra = { "linkml_meta": {'alias': 'in_taxon_label',
         'annotations': {'denormalized': {'tag': 'denormalized', 'value': True}},
         'definition_uri': 'https://w3id.org/biolink/vocab/in_taxon_label',
         'domain': 'thing with taxon',
         'domain_of': ['thing with taxon', 'biological entity', 'gene', 'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P225'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'slot_uri': 'biolink:in_taxon_label'} })
    symbol: Optional[str] = Field(default=None, description="""Symbol for a particular thing""", json_schema_extra = { "linkml_meta": {'alias': 'symbol',
         'definition_uri': 'https://w3id.org/biolink/vocab/symbol',
         'domain': 'named thing',
         'domain_of': ['gene', 'ParcellationTerm'],
         'exact_mappings': ['AGRKB:symbol', 'gpi:DB_Object_Symbol'],
         'is_a': 'node property',
         'slot_uri': 'biolink:symbol'} })
    xref: Optional[List[str]] = Field(default=None, description="""A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.""", json_schema_extra = { "linkml_meta": {'alias': 'xref',
         'aliases': ['dbxref', 'Dbxref', 'DbXref', 'record_url', 'source_record_urls'],
         'definition_uri': 'https://w3id.org/biolink/vocab/xref',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'gene',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ObservationMatrix',
                       'ObservationRow',
                       'Abbreviation',
                       'MatrixFile',
                       'ColorPalette',
                       'DisplayColor'],
         'in_subset': ['translator_minimal'],
         'narrow_mappings': ['gff3:Dbxref', 'gpi:DB_Xrefs'],
         'slot_uri': 'biolink:xref'} })
    has_biological_sequence: Optional[str] = Field(default=None, description="""connects a genomic feature to its sequence""", json_schema_extra = { "linkml_meta": {'alias': 'has_biological_sequence',
         'definition_uri': 'https://w3id.org/biolink/vocab/has_biological_sequence',
         'domain': 'named thing',
         'domain_of': ['genomic entity', 'gene', 'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:has_biological_sequence'} })


class Genome(GenomicEntity, BiologicalEntity, PhysicalEssence, OntologyClass):
    """
    A genome is the sum of genetic material within a cell or virion.
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'class_uri': 'biolink:Genome',
         'close_mappings': ['dcid:GenomeAssemblyUnit'],
         'definition_uri': 'https://w3id.org/biolink/vocab/Genome',
         'exact_mappings': ['SO:0001026', 'SIO:000984', 'WIKIDATA:Q7020'],
         'from_schema': 'https://w3id.org/biolink/bican-biolink-schema',
         'in_subset': ['model_organism_database'],
         'mixins': ['genomic entity', 'physical essence', 'ontology class']})

    id: str = Field(default=..., description="""A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })
    iri: Optional[str] = Field(default=None, description="""An IRI for an entity. This is determined by the id using expansion rules.""", json_schema_extra = { "linkml_meta": {'alias': 'iri',
         'definition_uri': 'https://w3id.org/biolink/vocab/iri',
         'domain_of': ['attribute',
                       'entity',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P854'],
         'in_subset': ['translator_minimal', 'samples'],
         'slot_uri': 'biolink:iri'} })
    category: List[Literal["https://w3id.org/biolink/vocab/Genome","biolink:Genome"]] = Field(default=["biolink:Genome"], description="""Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}.""", json_schema_extra = { "linkml_meta": {'alias': 'category',
         'definition_uri': 'https://w3id.org/biolink/vocab/category',
         'designates_type': True,
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'type',
         'is_class_field': True,
         'slot_uri': 'biolink:category'} })
    type: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'type',
         'definition_uri': 'https://w3id.org/biolink/vocab/type',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['gff3:type', 'gpi:DB_Object_Type'],
         'mappings': ['rdf:type'],
         'slot_uri': 'rdf:type'} })
    name: Optional[str] = Field(default=None, description="""A human-readable name for an attribute or entity.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })
    description: Optional[str] = Field(default=None, description="""a human-readable description of an entity""", json_schema_extra = { "linkml_meta": {'alias': 'description',
         'aliases': ['definition'],
         'definition_uri': 'https://w3id.org/biolink/vocab/description',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'ColorPalette'],
         'exact_mappings': ['IAO:0000115', 'skos:definitions'],
         'in_subset': ['translator_minimal'],
         'mappings': ['dct:description'],
         'narrow_mappings': ['gff3:Description'],
         'slot_uri': 'dct:description'} })
    has_attribute: Optional[List[str]] = Field(default=None, description="""connects any entity to an attribute""", json_schema_extra = { "linkml_meta": {'alias': 'has_attribute',
         'close_mappings': ['OBI:0001927'],
         'definition_uri': 'https://w3id.org/biolink/vocab/has_attribute',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['SIO:000008'],
         'in_subset': ['samples'],
         'narrow_mappings': ['OBAN:association_has_subject_property',
                             'OBAN:association_has_object_property',
                             'CPT:has_possibly_included_panel_element',
                             'DRUGBANK:category',
                             'EFO:is_executed_in',
                             'HANCESTRO:0301',
                             'LOINC:has_action_guidance',
                             'LOINC:has_adjustment',
                             'LOINC:has_aggregation_view',
                             'LOINC:has_approach_guidance',
                             'LOINC:has_divisor',
                             'LOINC:has_exam',
                             'LOINC:has_method',
                             'LOINC:has_modality_subtype',
                             'LOINC:has_object_guidance',
                             'LOINC:has_scale',
                             'LOINC:has_suffix',
                             'LOINC:has_time_aspect',
                             'LOINC:has_time_modifier',
                             'LOINC:has_timing_of',
                             'NCIT:R88',
                             'NCIT:eo_disease_has_property_or_attribute',
                             'NCIT:has_data_element',
                             'NCIT:has_pharmaceutical_administration_method',
                             'NCIT:has_pharmaceutical_basic_dose_form',
                             'NCIT:has_pharmaceutical_intended_site',
                             'NCIT:has_pharmaceutical_release_characteristics',
                             'NCIT:has_pharmaceutical_state_of_matter',
                             'NCIT:has_pharmaceutical_transformation',
                             'NCIT:is_qualified_by',
                             'NCIT:qualifier_applies_to',
                             'NCIT:role_has_domain',
                             'NCIT:role_has_range',
                             'INO:0000154',
                             'HANCESTRO:0308',
                             'OMIM:has_inheritance_type',
                             'orphanet:C016',
                             'orphanet:C017',
                             'RO:0000053',
                             'RO:0000086',
                             'RO:0000087',
                             'SNOMED:has_access',
                             'SNOMED:has_clinical_course',
                             'SNOMED:has_count_of_base_of_active_ingredient',
                             'SNOMED:has_dose_form_administration_method',
                             'SNOMED:has_dose_form_release_characteristic',
                             'SNOMED:has_dose_form_transformation',
                             'SNOMED:has_finding_context',
                             'SNOMED:has_finding_informer',
                             'SNOMED:has_inherent_attribute',
                             'SNOMED:has_intent',
                             'SNOMED:has_interpretation',
                             'SNOMED:has_laterality',
                             'SNOMED:has_measurement_method',
                             'SNOMED:has_method',
                             'SNOMED:has_priority',
                             'SNOMED:has_procedure_context',
                             'SNOMED:has_process_duration',
                             'SNOMED:has_property',
                             'SNOMED:has_revision_status',
                             'SNOMED:has_scale_type',
                             'SNOMED:has_severity',
                             'SNOMED:has_specimen',
                             'SNOMED:has_state_of_matter',
                             'SNOMED:has_subject_relationship_context',
                             'SNOMED:has_surgical_approach',
                             'SNOMED:has_technique',
                             'SNOMED:has_temporal_context',
                             'SNOMED:has_time_aspect',
                             'SNOMED:has_units',
                             'UMLS:has_structural_class',
                             'UMLS:has_supported_concept_property',
                             'UMLS:has_supported_concept_relationship',
                             'UMLS:may_be_qualified_by'],
         'slot_uri': 'biolink:has_attribute'} })
    deprecated: Optional[bool] = Field(default=None, description="""A boolean flag indicating that an entity is no longer considered current or valid.""", json_schema_extra = { "linkml_meta": {'alias': 'deprecated',
         'definition_uri': 'https://w3id.org/biolink/vocab/deprecated',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['oboInOwl:ObsoleteClass'],
         'slot_uri': 'biolink:deprecated'} })
    provided_by: Optional[List[str]] = Field(default=None, description="""The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.""", json_schema_extra = { "linkml_meta": {'alias': 'provided_by',
         'definition_uri': 'https://w3id.org/biolink/vocab/provided_by',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:provided_by'} })
    xref: Optional[List[str]] = Field(default=None, description="""A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.""", json_schema_extra = { "linkml_meta": {'alias': 'xref',
         'aliases': ['dbxref', 'Dbxref', 'DbXref', 'record_url', 'source_record_urls'],
         'definition_uri': 'https://w3id.org/biolink/vocab/xref',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'gene',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ObservationMatrix',
                       'ObservationRow',
                       'Abbreviation',
                       'MatrixFile',
                       'ColorPalette',
                       'DisplayColor'],
         'in_subset': ['translator_minimal'],
         'narrow_mappings': ['gff3:Dbxref', 'gpi:DB_Xrefs'],
         'slot_uri': 'biolink:xref'} })
    full_name: Optional[str] = Field(default=None, description="""a long-form human readable name for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'full_name',
         'definition_uri': 'https://w3id.org/biolink/vocab/full_name',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:full_name'} })
    synonym: Optional[List[str]] = Field(default=None, description="""Alternate human-readable names for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'synonym',
         'aliases': ['alias'],
         'definition_uri': 'https://w3id.org/biolink/vocab/synonym',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'narrow_mappings': ['skos:altLabel',
                             'gff3:Alias',
                             'AGRKB:synonyms',
                             'gpi:DB_Object_Synonyms',
                             'HANCESTRO:0330',
                             'IAO:0000136',
                             'RXNORM:has_tradename'],
         'slot_uri': 'biolink:synonym'} })
    in_taxon: Optional[List[str]] = Field(default=None, description="""connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'""", json_schema_extra = { "linkml_meta": {'alias': 'in_taxon',
         'aliases': ['instance of',
                     'is organism source of gene product',
                     'organism has gene',
                     'gene found in organism',
                     'gene product has organism source'],
         'annotations': {'canonical_predicate': {'tag': 'canonical_predicate',
                                                 'value': True}},
         'definition_uri': 'https://w3id.org/biolink/vocab/in_taxon',
         'domain': 'thing with taxon',
         'domain_of': ['thing with taxon', 'biological entity', 'gene', 'genome'],
         'exact_mappings': ['RO:0002162', 'WIKIDATA_PROPERTY:P703'],
         'in_subset': ['translator_minimal'],
         'inherited': True,
         'is_a': 'related to at instance level',
         'narrow_mappings': ['RO:0002160'],
         'slot_uri': 'biolink:in_taxon'} })
    in_taxon_label: Optional[str] = Field(default=None, description="""The human readable scientific name for the taxon of the entity.""", json_schema_extra = { "linkml_meta": {'alias': 'in_taxon_label',
         'annotations': {'denormalized': {'tag': 'denormalized', 'value': True}},
         'definition_uri': 'https://w3id.org/biolink/vocab/in_taxon_label',
         'domain': 'thing with taxon',
         'domain_of': ['thing with taxon', 'biological entity', 'gene', 'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P225'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'slot_uri': 'biolink:in_taxon_label'} })
    has_biological_sequence: Optional[str] = Field(default=None, description="""connects a genomic feature to its sequence""", json_schema_extra = { "linkml_meta": {'alias': 'has_biological_sequence',
         'definition_uri': 'https://w3id.org/biolink/vocab/has_biological_sequence',
         'domain': 'named thing',
         'domain_of': ['genomic entity', 'gene', 'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:has_biological_sequence'} })


class ProvActivity(ConfiguredBaseModel):
    """
    An activity is something that occurs over a period of time and acts upon or with entities;  it may include consuming, processing, transforming, modifying, relocating, using, or generating entities.
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'class_uri': 'prov:Activity',
         'from_schema': 'https://identifiers.org/brain-bican/bican-prov-schema',
         'mixin': True})

    used: Optional[str] = Field(default=None, description="""Usage is the beginning of utilizing an entity by an activity. Before usage, the activity had not begun to utilize this entity and could not have been affected by the entity.""", json_schema_extra = { "linkml_meta": {'alias': 'used',
         'domain_of': ['ProvActivity',
                       'CellTypeTaxonomyCreationProcess',
                       'ClusteringProcess'],
         'slot_uri': 'prov:used'} })


class ProvEntity(ConfiguredBaseModel):
    """
    An entity is a physical, digital, conceptual, or other kind of thing with some fixed aspects;  entities may be real or imaginary.
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'class_uri': 'prov:Entity',
         'from_schema': 'https://identifiers.org/brain-bican/bican-prov-schema',
         'mixin': True})

    was_derived_from: Optional[str] = Field(default=None, description="""A derivation is a transformation of an entity into another, an update of an entity resulting in a new one, or the construction of a new entity based on a pre-existing entity.""", json_schema_extra = { "linkml_meta": {'alias': 'was_derived_from',
         'domain_of': ['ProvEntity',
                       'CellTypeTaxonomy',
                       'ClusterSet',
                       'ObservationMatrix',
                       'ObservationRow'],
         'slot_uri': 'prov:wasDerivedFrom'} })
    was_generated_by: Optional[str] = Field(default=None, description="""Generation is the completion of production of a new entity by an activity. This entity did not exist before generation and becomes available for usage after this generation.""", json_schema_extra = { "linkml_meta": {'alias': 'was_generated_by',
         'domain_of': ['ProvEntity',
                       'CellTypeTaxonomy',
                       'ClusterSet',
                       'ObservationMatrix'],
         'slot_uri': 'prov:wasGeneratedBy'} })


class VersionedNamedThing(NamedThing):
    """
    An iteration of the biolink:NamedThing class that stores metadata about the object's version.
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'abstract': True,
         'from_schema': 'https://identifiers.org/brain-bican/bican-core-schema',
         'slot_usage': {'version': {'name': 'version', 'required': True}}})

    version: str = Field(default=..., json_schema_extra = { "linkml_meta": {'alias': 'version',
         'broad_mappings': ['pav:version', 'owl:versionInfo'],
         'definition_uri': 'https://w3id.org/biolink/vocab/version',
         'domain': 'dataset',
         'domain_of': ['VersionedNamedThing', 'GenomeAnnotation', 'GenomeAssembly'],
         'is_a': 'node property',
         'slot_uri': 'biolink:version'} })
    revision_of: Optional[str] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'revision_of', 'domain_of': ['VersionedNamedThing']} })
    id: str = Field(default=..., description="""A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })
    iri: Optional[str] = Field(default=None, description="""An IRI for an entity. This is determined by the id using expansion rules.""", json_schema_extra = { "linkml_meta": {'alias': 'iri',
         'definition_uri': 'https://w3id.org/biolink/vocab/iri',
         'domain_of': ['attribute',
                       'entity',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P854'],
         'in_subset': ['translator_minimal', 'samples'],
         'slot_uri': 'biolink:iri'} })
    category: List[Literal["https://identifiers.org/brain-bican/vocab/VersionedNamedThing","bican:VersionedNamedThing"]] = Field(default=["bican:VersionedNamedThing"], description="""Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}.""", json_schema_extra = { "linkml_meta": {'alias': 'category',
         'definition_uri': 'https://w3id.org/biolink/vocab/category',
         'designates_type': True,
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'type',
         'is_class_field': True,
         'slot_uri': 'biolink:category'} })
    type: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'type',
         'definition_uri': 'https://w3id.org/biolink/vocab/type',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['gff3:type', 'gpi:DB_Object_Type'],
         'mappings': ['rdf:type'],
         'slot_uri': 'rdf:type'} })
    name: Optional[str] = Field(default=None, description="""A human-readable name for an attribute or entity.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })
    description: Optional[str] = Field(default=None, description="""a human-readable description of an entity""", json_schema_extra = { "linkml_meta": {'alias': 'description',
         'aliases': ['definition'],
         'definition_uri': 'https://w3id.org/biolink/vocab/description',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'ColorPalette'],
         'exact_mappings': ['IAO:0000115', 'skos:definitions'],
         'in_subset': ['translator_minimal'],
         'mappings': ['dct:description'],
         'narrow_mappings': ['gff3:Description'],
         'slot_uri': 'dct:description'} })
    has_attribute: Optional[List[str]] = Field(default=None, description="""connects any entity to an attribute""", json_schema_extra = { "linkml_meta": {'alias': 'has_attribute',
         'close_mappings': ['OBI:0001927'],
         'definition_uri': 'https://w3id.org/biolink/vocab/has_attribute',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['SIO:000008'],
         'in_subset': ['samples'],
         'narrow_mappings': ['OBAN:association_has_subject_property',
                             'OBAN:association_has_object_property',
                             'CPT:has_possibly_included_panel_element',
                             'DRUGBANK:category',
                             'EFO:is_executed_in',
                             'HANCESTRO:0301',
                             'LOINC:has_action_guidance',
                             'LOINC:has_adjustment',
                             'LOINC:has_aggregation_view',
                             'LOINC:has_approach_guidance',
                             'LOINC:has_divisor',
                             'LOINC:has_exam',
                             'LOINC:has_method',
                             'LOINC:has_modality_subtype',
                             'LOINC:has_object_guidance',
                             'LOINC:has_scale',
                             'LOINC:has_suffix',
                             'LOINC:has_time_aspect',
                             'LOINC:has_time_modifier',
                             'LOINC:has_timing_of',
                             'NCIT:R88',
                             'NCIT:eo_disease_has_property_or_attribute',
                             'NCIT:has_data_element',
                             'NCIT:has_pharmaceutical_administration_method',
                             'NCIT:has_pharmaceutical_basic_dose_form',
                             'NCIT:has_pharmaceutical_intended_site',
                             'NCIT:has_pharmaceutical_release_characteristics',
                             'NCIT:has_pharmaceutical_state_of_matter',
                             'NCIT:has_pharmaceutical_transformation',
                             'NCIT:is_qualified_by',
                             'NCIT:qualifier_applies_to',
                             'NCIT:role_has_domain',
                             'NCIT:role_has_range',
                             'INO:0000154',
                             'HANCESTRO:0308',
                             'OMIM:has_inheritance_type',
                             'orphanet:C016',
                             'orphanet:C017',
                             'RO:0000053',
                             'RO:0000086',
                             'RO:0000087',
                             'SNOMED:has_access',
                             'SNOMED:has_clinical_course',
                             'SNOMED:has_count_of_base_of_active_ingredient',
                             'SNOMED:has_dose_form_administration_method',
                             'SNOMED:has_dose_form_release_characteristic',
                             'SNOMED:has_dose_form_transformation',
                             'SNOMED:has_finding_context',
                             'SNOMED:has_finding_informer',
                             'SNOMED:has_inherent_attribute',
                             'SNOMED:has_intent',
                             'SNOMED:has_interpretation',
                             'SNOMED:has_laterality',
                             'SNOMED:has_measurement_method',
                             'SNOMED:has_method',
                             'SNOMED:has_priority',
                             'SNOMED:has_procedure_context',
                             'SNOMED:has_process_duration',
                             'SNOMED:has_property',
                             'SNOMED:has_revision_status',
                             'SNOMED:has_scale_type',
                             'SNOMED:has_severity',
                             'SNOMED:has_specimen',
                             'SNOMED:has_state_of_matter',
                             'SNOMED:has_subject_relationship_context',
                             'SNOMED:has_surgical_approach',
                             'SNOMED:has_technique',
                             'SNOMED:has_temporal_context',
                             'SNOMED:has_time_aspect',
                             'SNOMED:has_units',
                             'UMLS:has_structural_class',
                             'UMLS:has_supported_concept_property',
                             'UMLS:has_supported_concept_relationship',
                             'UMLS:may_be_qualified_by'],
         'slot_uri': 'biolink:has_attribute'} })
    deprecated: Optional[bool] = Field(default=None, description="""A boolean flag indicating that an entity is no longer considered current or valid.""", json_schema_extra = { "linkml_meta": {'alias': 'deprecated',
         'definition_uri': 'https://w3id.org/biolink/vocab/deprecated',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['oboInOwl:ObsoleteClass'],
         'slot_uri': 'biolink:deprecated'} })
    provided_by: Optional[List[str]] = Field(default=None, description="""The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.""", json_schema_extra = { "linkml_meta": {'alias': 'provided_by',
         'definition_uri': 'https://w3id.org/biolink/vocab/provided_by',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:provided_by'} })
    xref: Optional[List[str]] = Field(default=None, description="""A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.""", json_schema_extra = { "linkml_meta": {'alias': 'xref',
         'aliases': ['dbxref', 'Dbxref', 'DbXref', 'record_url', 'source_record_urls'],
         'definition_uri': 'https://w3id.org/biolink/vocab/xref',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'gene',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ObservationMatrix',
                       'ObservationRow',
                       'Abbreviation',
                       'MatrixFile',
                       'ColorPalette',
                       'DisplayColor'],
         'in_subset': ['translator_minimal'],
         'narrow_mappings': ['gff3:Dbxref', 'gpi:DB_Xrefs'],
         'slot_uri': 'biolink:xref'} })
    full_name: Optional[str] = Field(default=None, description="""a long-form human readable name for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'full_name',
         'definition_uri': 'https://w3id.org/biolink/vocab/full_name',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:full_name'} })
    synonym: Optional[List[str]] = Field(default=None, description="""Alternate human-readable names for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'synonym',
         'aliases': ['alias'],
         'definition_uri': 'https://w3id.org/biolink/vocab/synonym',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'narrow_mappings': ['skos:altLabel',
                             'gff3:Alias',
                             'AGRKB:synonyms',
                             'gpi:DB_Object_Synonyms',
                             'HANCESTRO:0330',
                             'IAO:0000136',
                             'RXNORM:has_tradename'],
         'slot_uri': 'biolink:synonym'} })


class Checksum(Entity):
    """
    Checksum values associated with digital entities.
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'from_schema': 'https://identifiers.org/brain-bican/bican-core-schema'})

    checksum_algorithm: Optional[DigestType] = Field(default=None, description="""The type of cryptographic hash function used to calculate the checksum value.""", json_schema_extra = { "linkml_meta": {'alias': 'checksum_algorithm', 'domain_of': ['checksum']} })
    value: Optional[str] = Field(default=None, description="""The checksum value obtained from a specific cryotographic hash function.""", json_schema_extra = { "linkml_meta": {'alias': 'value', 'domain_of': ['checksum']} })
    id: str = Field(default=..., description="""A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })
    iri: Optional[str] = Field(default=None, description="""An IRI for an entity. This is determined by the id using expansion rules.""", json_schema_extra = { "linkml_meta": {'alias': 'iri',
         'definition_uri': 'https://w3id.org/biolink/vocab/iri',
         'domain_of': ['attribute',
                       'entity',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P854'],
         'in_subset': ['translator_minimal', 'samples'],
         'slot_uri': 'biolink:iri'} })
    category: List[Literal["https://identifiers.org/brain-bican/vocab/Checksum","bican:Checksum"]] = Field(default=["bican:Checksum"], description="""Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}.""", json_schema_extra = { "linkml_meta": {'alias': 'category',
         'definition_uri': 'https://w3id.org/biolink/vocab/category',
         'designates_type': True,
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'type',
         'is_class_field': True,
         'slot_uri': 'biolink:category'} })
    type: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'type',
         'definition_uri': 'https://w3id.org/biolink/vocab/type',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['gff3:type', 'gpi:DB_Object_Type'],
         'mappings': ['rdf:type'],
         'slot_uri': 'rdf:type'} })
    name: Optional[str] = Field(default=None, description="""A human-readable name for an attribute or entity.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })
    description: Optional[str] = Field(default=None, description="""a human-readable description of an entity""", json_schema_extra = { "linkml_meta": {'alias': 'description',
         'aliases': ['definition'],
         'definition_uri': 'https://w3id.org/biolink/vocab/description',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'ColorPalette'],
         'exact_mappings': ['IAO:0000115', 'skos:definitions'],
         'in_subset': ['translator_minimal'],
         'mappings': ['dct:description'],
         'narrow_mappings': ['gff3:Description'],
         'slot_uri': 'dct:description'} })
    has_attribute: Optional[List[str]] = Field(default=None, description="""connects any entity to an attribute""", json_schema_extra = { "linkml_meta": {'alias': 'has_attribute',
         'close_mappings': ['OBI:0001927'],
         'definition_uri': 'https://w3id.org/biolink/vocab/has_attribute',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['SIO:000008'],
         'in_subset': ['samples'],
         'narrow_mappings': ['OBAN:association_has_subject_property',
                             'OBAN:association_has_object_property',
                             'CPT:has_possibly_included_panel_element',
                             'DRUGBANK:category',
                             'EFO:is_executed_in',
                             'HANCESTRO:0301',
                             'LOINC:has_action_guidance',
                             'LOINC:has_adjustment',
                             'LOINC:has_aggregation_view',
                             'LOINC:has_approach_guidance',
                             'LOINC:has_divisor',
                             'LOINC:has_exam',
                             'LOINC:has_method',
                             'LOINC:has_modality_subtype',
                             'LOINC:has_object_guidance',
                             'LOINC:has_scale',
                             'LOINC:has_suffix',
                             'LOINC:has_time_aspect',
                             'LOINC:has_time_modifier',
                             'LOINC:has_timing_of',
                             'NCIT:R88',
                             'NCIT:eo_disease_has_property_or_attribute',
                             'NCIT:has_data_element',
                             'NCIT:has_pharmaceutical_administration_method',
                             'NCIT:has_pharmaceutical_basic_dose_form',
                             'NCIT:has_pharmaceutical_intended_site',
                             'NCIT:has_pharmaceutical_release_characteristics',
                             'NCIT:has_pharmaceutical_state_of_matter',
                             'NCIT:has_pharmaceutical_transformation',
                             'NCIT:is_qualified_by',
                             'NCIT:qualifier_applies_to',
                             'NCIT:role_has_domain',
                             'NCIT:role_has_range',
                             'INO:0000154',
                             'HANCESTRO:0308',
                             'OMIM:has_inheritance_type',
                             'orphanet:C016',
                             'orphanet:C017',
                             'RO:0000053',
                             'RO:0000086',
                             'RO:0000087',
                             'SNOMED:has_access',
                             'SNOMED:has_clinical_course',
                             'SNOMED:has_count_of_base_of_active_ingredient',
                             'SNOMED:has_dose_form_administration_method',
                             'SNOMED:has_dose_form_release_characteristic',
                             'SNOMED:has_dose_form_transformation',
                             'SNOMED:has_finding_context',
                             'SNOMED:has_finding_informer',
                             'SNOMED:has_inherent_attribute',
                             'SNOMED:has_intent',
                             'SNOMED:has_interpretation',
                             'SNOMED:has_laterality',
                             'SNOMED:has_measurement_method',
                             'SNOMED:has_method',
                             'SNOMED:has_priority',
                             'SNOMED:has_procedure_context',
                             'SNOMED:has_process_duration',
                             'SNOMED:has_property',
                             'SNOMED:has_revision_status',
                             'SNOMED:has_scale_type',
                             'SNOMED:has_severity',
                             'SNOMED:has_specimen',
                             'SNOMED:has_state_of_matter',
                             'SNOMED:has_subject_relationship_context',
                             'SNOMED:has_surgical_approach',
                             'SNOMED:has_technique',
                             'SNOMED:has_temporal_context',
                             'SNOMED:has_time_aspect',
                             'SNOMED:has_units',
                             'UMLS:has_structural_class',
                             'UMLS:has_supported_concept_property',
                             'UMLS:has_supported_concept_relationship',
                             'UMLS:may_be_qualified_by'],
         'slot_uri': 'biolink:has_attribute'} })
    deprecated: Optional[bool] = Field(default=None, description="""A boolean flag indicating that an entity is no longer considered current or valid.""", json_schema_extra = { "linkml_meta": {'alias': 'deprecated',
         'definition_uri': 'https://w3id.org/biolink/vocab/deprecated',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['oboInOwl:ObsoleteClass'],
         'slot_uri': 'biolink:deprecated'} })


class GeneAnnotation(Gene):
    """
    Represents a single gene. Includes metadata about the gene, such as its molecular type and the genome annotation it was referenced from.
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'from_schema': 'https://identifiers.org/brain-bican/genome-annotation-schema'})

    molecular_type: Optional[Union[BioType, str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'molecular_type',
         'any_of': [{'range': 'BioType'}, {'range': 'string'}],
         'domain_of': ['GeneAnnotation']} })
    source_id: Optional[str] = Field(default=None, description="""The authority specific identifier.""", json_schema_extra = { "linkml_meta": {'alias': 'source_id',
         'domain_of': ['GeneAnnotation'],
         'slot_uri': 'schema:identifier'} })
    referenced_in: Union[GenomeAnnotation, str] = Field(default=..., description="""The genome annotation that this gene was referenced from.""", json_schema_extra = { "linkml_meta": {'alias': 'referenced_in',
         'any_of': [{'range': 'GenomeAnnotation'}, {'range': 'string'}],
         'domain_of': ['GeneAnnotation']} })
    id: str = Field(default=..., description="""A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })
    iri: Optional[str] = Field(default=None, description="""An IRI for an entity. This is determined by the id using expansion rules.""", json_schema_extra = { "linkml_meta": {'alias': 'iri',
         'definition_uri': 'https://w3id.org/biolink/vocab/iri',
         'domain_of': ['attribute',
                       'entity',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P854'],
         'in_subset': ['translator_minimal', 'samples'],
         'slot_uri': 'biolink:iri'} })
    category: List[Literal["https://identifiers.org/brain-bican/vocab/GeneAnnotation","bican:GeneAnnotation"]] = Field(default=["bican:GeneAnnotation"], description="""Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}.""", json_schema_extra = { "linkml_meta": {'alias': 'category',
         'definition_uri': 'https://w3id.org/biolink/vocab/category',
         'designates_type': True,
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'type',
         'is_class_field': True,
         'slot_uri': 'biolink:category'} })
    type: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'type',
         'definition_uri': 'https://w3id.org/biolink/vocab/type',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['gff3:type', 'gpi:DB_Object_Type'],
         'mappings': ['rdf:type'],
         'slot_uri': 'rdf:type'} })
    name: Optional[str] = Field(default=None, description="""A human-readable name for an attribute or entity.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })
    description: Optional[str] = Field(default=None, description="""a human-readable description of an entity""", json_schema_extra = { "linkml_meta": {'alias': 'description',
         'aliases': ['definition'],
         'definition_uri': 'https://w3id.org/biolink/vocab/description',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'ColorPalette'],
         'exact_mappings': ['IAO:0000115', 'skos:definitions'],
         'in_subset': ['translator_minimal'],
         'mappings': ['dct:description'],
         'narrow_mappings': ['gff3:Description'],
         'slot_uri': 'dct:description'} })
    has_attribute: Optional[List[str]] = Field(default=None, description="""connects any entity to an attribute""", json_schema_extra = { "linkml_meta": {'alias': 'has_attribute',
         'close_mappings': ['OBI:0001927'],
         'definition_uri': 'https://w3id.org/biolink/vocab/has_attribute',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['SIO:000008'],
         'in_subset': ['samples'],
         'narrow_mappings': ['OBAN:association_has_subject_property',
                             'OBAN:association_has_object_property',
                             'CPT:has_possibly_included_panel_element',
                             'DRUGBANK:category',
                             'EFO:is_executed_in',
                             'HANCESTRO:0301',
                             'LOINC:has_action_guidance',
                             'LOINC:has_adjustment',
                             'LOINC:has_aggregation_view',
                             'LOINC:has_approach_guidance',
                             'LOINC:has_divisor',
                             'LOINC:has_exam',
                             'LOINC:has_method',
                             'LOINC:has_modality_subtype',
                             'LOINC:has_object_guidance',
                             'LOINC:has_scale',
                             'LOINC:has_suffix',
                             'LOINC:has_time_aspect',
                             'LOINC:has_time_modifier',
                             'LOINC:has_timing_of',
                             'NCIT:R88',
                             'NCIT:eo_disease_has_property_or_attribute',
                             'NCIT:has_data_element',
                             'NCIT:has_pharmaceutical_administration_method',
                             'NCIT:has_pharmaceutical_basic_dose_form',
                             'NCIT:has_pharmaceutical_intended_site',
                             'NCIT:has_pharmaceutical_release_characteristics',
                             'NCIT:has_pharmaceutical_state_of_matter',
                             'NCIT:has_pharmaceutical_transformation',
                             'NCIT:is_qualified_by',
                             'NCIT:qualifier_applies_to',
                             'NCIT:role_has_domain',
                             'NCIT:role_has_range',
                             'INO:0000154',
                             'HANCESTRO:0308',
                             'OMIM:has_inheritance_type',
                             'orphanet:C016',
                             'orphanet:C017',
                             'RO:0000053',
                             'RO:0000086',
                             'RO:0000087',
                             'SNOMED:has_access',
                             'SNOMED:has_clinical_course',
                             'SNOMED:has_count_of_base_of_active_ingredient',
                             'SNOMED:has_dose_form_administration_method',
                             'SNOMED:has_dose_form_release_characteristic',
                             'SNOMED:has_dose_form_transformation',
                             'SNOMED:has_finding_context',
                             'SNOMED:has_finding_informer',
                             'SNOMED:has_inherent_attribute',
                             'SNOMED:has_intent',
                             'SNOMED:has_interpretation',
                             'SNOMED:has_laterality',
                             'SNOMED:has_measurement_method',
                             'SNOMED:has_method',
                             'SNOMED:has_priority',
                             'SNOMED:has_procedure_context',
                             'SNOMED:has_process_duration',
                             'SNOMED:has_property',
                             'SNOMED:has_revision_status',
                             'SNOMED:has_scale_type',
                             'SNOMED:has_severity',
                             'SNOMED:has_specimen',
                             'SNOMED:has_state_of_matter',
                             'SNOMED:has_subject_relationship_context',
                             'SNOMED:has_surgical_approach',
                             'SNOMED:has_technique',
                             'SNOMED:has_temporal_context',
                             'SNOMED:has_time_aspect',
                             'SNOMED:has_units',
                             'UMLS:has_structural_class',
                             'UMLS:has_supported_concept_property',
                             'UMLS:has_supported_concept_relationship',
                             'UMLS:may_be_qualified_by'],
         'slot_uri': 'biolink:has_attribute'} })
    deprecated: Optional[bool] = Field(default=None, description="""A boolean flag indicating that an entity is no longer considered current or valid.""", json_schema_extra = { "linkml_meta": {'alias': 'deprecated',
         'definition_uri': 'https://w3id.org/biolink/vocab/deprecated',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['oboInOwl:ObsoleteClass'],
         'slot_uri': 'biolink:deprecated'} })
    provided_by: Optional[List[str]] = Field(default=None, description="""The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.""", json_schema_extra = { "linkml_meta": {'alias': 'provided_by',
         'definition_uri': 'https://w3id.org/biolink/vocab/provided_by',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:provided_by'} })
    full_name: Optional[str] = Field(default=None, description="""a long-form human readable name for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'full_name',
         'definition_uri': 'https://w3id.org/biolink/vocab/full_name',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:full_name'} })
    synonym: Optional[List[str]] = Field(default=None, description="""Alternate human-readable names for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'synonym',
         'aliases': ['alias'],
         'definition_uri': 'https://w3id.org/biolink/vocab/synonym',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'narrow_mappings': ['skos:altLabel',
                             'gff3:Alias',
                             'AGRKB:synonyms',
                             'gpi:DB_Object_Synonyms',
                             'HANCESTRO:0330',
                             'IAO:0000136',
                             'RXNORM:has_tradename'],
         'slot_uri': 'biolink:synonym'} })
    in_taxon: Optional[List[str]] = Field(default=None, description="""connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'""", json_schema_extra = { "linkml_meta": {'alias': 'in_taxon',
         'aliases': ['instance of',
                     'is organism source of gene product',
                     'organism has gene',
                     'gene found in organism',
                     'gene product has organism source'],
         'annotations': {'canonical_predicate': {'tag': 'canonical_predicate',
                                                 'value': True}},
         'definition_uri': 'https://w3id.org/biolink/vocab/in_taxon',
         'domain': 'thing with taxon',
         'domain_of': ['thing with taxon', 'biological entity', 'gene', 'genome'],
         'exact_mappings': ['RO:0002162', 'WIKIDATA_PROPERTY:P703'],
         'in_subset': ['translator_minimal'],
         'inherited': True,
         'is_a': 'related to at instance level',
         'narrow_mappings': ['RO:0002160'],
         'slot_uri': 'biolink:in_taxon'} })
    in_taxon_label: Optional[str] = Field(default=None, description="""The human readable scientific name for the taxon of the entity.""", json_schema_extra = { "linkml_meta": {'alias': 'in_taxon_label',
         'annotations': {'denormalized': {'tag': 'denormalized', 'value': True}},
         'definition_uri': 'https://w3id.org/biolink/vocab/in_taxon_label',
         'domain': 'thing with taxon',
         'domain_of': ['thing with taxon', 'biological entity', 'gene', 'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P225'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'slot_uri': 'biolink:in_taxon_label'} })
    symbol: Optional[str] = Field(default=None, description="""Symbol for a particular thing""", json_schema_extra = { "linkml_meta": {'alias': 'symbol',
         'definition_uri': 'https://w3id.org/biolink/vocab/symbol',
         'domain': 'named thing',
         'domain_of': ['gene', 'ParcellationTerm'],
         'exact_mappings': ['AGRKB:symbol', 'gpi:DB_Object_Symbol'],
         'is_a': 'node property',
         'slot_uri': 'biolink:symbol'} })
    xref: Optional[List[str]] = Field(default=None, description="""A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.""", json_schema_extra = { "linkml_meta": {'alias': 'xref',
         'aliases': ['dbxref', 'Dbxref', 'DbXref', 'record_url', 'source_record_urls'],
         'definition_uri': 'https://w3id.org/biolink/vocab/xref',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'gene',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ObservationMatrix',
                       'ObservationRow',
                       'Abbreviation',
                       'MatrixFile',
                       'ColorPalette',
                       'DisplayColor'],
         'in_subset': ['translator_minimal'],
         'narrow_mappings': ['gff3:Dbxref', 'gpi:DB_Xrefs'],
         'slot_uri': 'biolink:xref'} })
    has_biological_sequence: Optional[str] = Field(default=None, description="""connects a genomic feature to its sequence""", json_schema_extra = { "linkml_meta": {'alias': 'has_biological_sequence',
         'definition_uri': 'https://w3id.org/biolink/vocab/has_biological_sequence',
         'domain': 'named thing',
         'domain_of': ['genomic entity', 'gene', 'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:has_biological_sequence'} })


class GenomeAnnotation(Genome):
    """
    Represents a genome annotation. Includes metadata about the genome, such as its version and reference assembly.
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'from_schema': 'https://identifiers.org/brain-bican/genome-annotation-schema'})

    version: Optional[str] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'version',
         'broad_mappings': ['pav:version', 'owl:versionInfo'],
         'definition_uri': 'https://w3id.org/biolink/vocab/version',
         'domain': 'dataset',
         'domain_of': ['VersionedNamedThing', 'GenomeAnnotation', 'GenomeAssembly'],
         'is_a': 'node property',
         'slot_uri': 'biolink:version'} })
    digest: Optional[List[Union[Checksum, str]]] = Field(default=None, description="""Stores checksum information.""", json_schema_extra = { "linkml_meta": {'alias': 'digest',
         'any_of': [{'range': 'checksum'}, {'range': 'string'}],
         'domain_of': ['GenomeAnnotation'],
         'slot_uri': 'bican:digest'} })
    content_url: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'content_url',
         'domain_of': ['GenomeAnnotation', 'ObservationMatrix', 'MatrixFile'],
         'slot_uri': 'schema:url'} })
    authority: Optional[AuthorityType] = Field(default=None, description="""The organization responsible for publishing the data.""", json_schema_extra = { "linkml_meta": {'alias': 'authority', 'domain_of': ['GenomeAnnotation']} })
    reference_assembly: Union[GenomeAssembly, str] = Field(default=..., description="""The reference genome assembly that this genome annotation was created from.""", json_schema_extra = { "linkml_meta": {'alias': 'reference_assembly',
         'any_of': [{'range': 'GenomeAssembly'}, {'range': 'string'}],
         'domain_of': ['GenomeAnnotation']} })
    id: str = Field(default=..., description="""A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })
    iri: Optional[str] = Field(default=None, description="""An IRI for an entity. This is determined by the id using expansion rules.""", json_schema_extra = { "linkml_meta": {'alias': 'iri',
         'definition_uri': 'https://w3id.org/biolink/vocab/iri',
         'domain_of': ['attribute',
                       'entity',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P854'],
         'in_subset': ['translator_minimal', 'samples'],
         'slot_uri': 'biolink:iri'} })
    category: List[Literal["https://identifiers.org/brain-bican/vocab/GenomeAnnotation","bican:GenomeAnnotation"]] = Field(default=["bican:GenomeAnnotation"], description="""Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}.""", json_schema_extra = { "linkml_meta": {'alias': 'category',
         'definition_uri': 'https://w3id.org/biolink/vocab/category',
         'designates_type': True,
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'type',
         'is_class_field': True,
         'slot_uri': 'biolink:category'} })
    type: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'type',
         'definition_uri': 'https://w3id.org/biolink/vocab/type',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['gff3:type', 'gpi:DB_Object_Type'],
         'mappings': ['rdf:type'],
         'slot_uri': 'rdf:type'} })
    name: Optional[str] = Field(default=None, description="""A human-readable name for an attribute or entity.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })
    description: Optional[str] = Field(default=None, description="""a human-readable description of an entity""", json_schema_extra = { "linkml_meta": {'alias': 'description',
         'aliases': ['definition'],
         'definition_uri': 'https://w3id.org/biolink/vocab/description',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'ColorPalette'],
         'exact_mappings': ['IAO:0000115', 'skos:definitions'],
         'in_subset': ['translator_minimal'],
         'mappings': ['dct:description'],
         'narrow_mappings': ['gff3:Description'],
         'slot_uri': 'dct:description'} })
    has_attribute: Optional[List[str]] = Field(default=None, description="""connects any entity to an attribute""", json_schema_extra = { "linkml_meta": {'alias': 'has_attribute',
         'close_mappings': ['OBI:0001927'],
         'definition_uri': 'https://w3id.org/biolink/vocab/has_attribute',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['SIO:000008'],
         'in_subset': ['samples'],
         'narrow_mappings': ['OBAN:association_has_subject_property',
                             'OBAN:association_has_object_property',
                             'CPT:has_possibly_included_panel_element',
                             'DRUGBANK:category',
                             'EFO:is_executed_in',
                             'HANCESTRO:0301',
                             'LOINC:has_action_guidance',
                             'LOINC:has_adjustment',
                             'LOINC:has_aggregation_view',
                             'LOINC:has_approach_guidance',
                             'LOINC:has_divisor',
                             'LOINC:has_exam',
                             'LOINC:has_method',
                             'LOINC:has_modality_subtype',
                             'LOINC:has_object_guidance',
                             'LOINC:has_scale',
                             'LOINC:has_suffix',
                             'LOINC:has_time_aspect',
                             'LOINC:has_time_modifier',
                             'LOINC:has_timing_of',
                             'NCIT:R88',
                             'NCIT:eo_disease_has_property_or_attribute',
                             'NCIT:has_data_element',
                             'NCIT:has_pharmaceutical_administration_method',
                             'NCIT:has_pharmaceutical_basic_dose_form',
                             'NCIT:has_pharmaceutical_intended_site',
                             'NCIT:has_pharmaceutical_release_characteristics',
                             'NCIT:has_pharmaceutical_state_of_matter',
                             'NCIT:has_pharmaceutical_transformation',
                             'NCIT:is_qualified_by',
                             'NCIT:qualifier_applies_to',
                             'NCIT:role_has_domain',
                             'NCIT:role_has_range',
                             'INO:0000154',
                             'HANCESTRO:0308',
                             'OMIM:has_inheritance_type',
                             'orphanet:C016',
                             'orphanet:C017',
                             'RO:0000053',
                             'RO:0000086',
                             'RO:0000087',
                             'SNOMED:has_access',
                             'SNOMED:has_clinical_course',
                             'SNOMED:has_count_of_base_of_active_ingredient',
                             'SNOMED:has_dose_form_administration_method',
                             'SNOMED:has_dose_form_release_characteristic',
                             'SNOMED:has_dose_form_transformation',
                             'SNOMED:has_finding_context',
                             'SNOMED:has_finding_informer',
                             'SNOMED:has_inherent_attribute',
                             'SNOMED:has_intent',
                             'SNOMED:has_interpretation',
                             'SNOMED:has_laterality',
                             'SNOMED:has_measurement_method',
                             'SNOMED:has_method',
                             'SNOMED:has_priority',
                             'SNOMED:has_procedure_context',
                             'SNOMED:has_process_duration',
                             'SNOMED:has_property',
                             'SNOMED:has_revision_status',
                             'SNOMED:has_scale_type',
                             'SNOMED:has_severity',
                             'SNOMED:has_specimen',
                             'SNOMED:has_state_of_matter',
                             'SNOMED:has_subject_relationship_context',
                             'SNOMED:has_surgical_approach',
                             'SNOMED:has_technique',
                             'SNOMED:has_temporal_context',
                             'SNOMED:has_time_aspect',
                             'SNOMED:has_units',
                             'UMLS:has_structural_class',
                             'UMLS:has_supported_concept_property',
                             'UMLS:has_supported_concept_relationship',
                             'UMLS:may_be_qualified_by'],
         'slot_uri': 'biolink:has_attribute'} })
    deprecated: Optional[bool] = Field(default=None, description="""A boolean flag indicating that an entity is no longer considered current or valid.""", json_schema_extra = { "linkml_meta": {'alias': 'deprecated',
         'definition_uri': 'https://w3id.org/biolink/vocab/deprecated',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['oboInOwl:ObsoleteClass'],
         'slot_uri': 'biolink:deprecated'} })
    provided_by: Optional[List[str]] = Field(default=None, description="""The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.""", json_schema_extra = { "linkml_meta": {'alias': 'provided_by',
         'definition_uri': 'https://w3id.org/biolink/vocab/provided_by',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:provided_by'} })
    xref: Optional[List[str]] = Field(default=None, description="""A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.""", json_schema_extra = { "linkml_meta": {'alias': 'xref',
         'aliases': ['dbxref', 'Dbxref', 'DbXref', 'record_url', 'source_record_urls'],
         'definition_uri': 'https://w3id.org/biolink/vocab/xref',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'gene',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ObservationMatrix',
                       'ObservationRow',
                       'Abbreviation',
                       'MatrixFile',
                       'ColorPalette',
                       'DisplayColor'],
         'in_subset': ['translator_minimal'],
         'narrow_mappings': ['gff3:Dbxref', 'gpi:DB_Xrefs'],
         'slot_uri': 'biolink:xref'} })
    full_name: Optional[str] = Field(default=None, description="""a long-form human readable name for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'full_name',
         'definition_uri': 'https://w3id.org/biolink/vocab/full_name',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:full_name'} })
    synonym: Optional[List[str]] = Field(default=None, description="""Alternate human-readable names for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'synonym',
         'aliases': ['alias'],
         'definition_uri': 'https://w3id.org/biolink/vocab/synonym',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'narrow_mappings': ['skos:altLabel',
                             'gff3:Alias',
                             'AGRKB:synonyms',
                             'gpi:DB_Object_Synonyms',
                             'HANCESTRO:0330',
                             'IAO:0000136',
                             'RXNORM:has_tradename'],
         'slot_uri': 'biolink:synonym'} })
    in_taxon: Optional[List[str]] = Field(default=None, description="""connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'""", json_schema_extra = { "linkml_meta": {'alias': 'in_taxon',
         'aliases': ['instance of',
                     'is organism source of gene product',
                     'organism has gene',
                     'gene found in organism',
                     'gene product has organism source'],
         'annotations': {'canonical_predicate': {'tag': 'canonical_predicate',
                                                 'value': True}},
         'definition_uri': 'https://w3id.org/biolink/vocab/in_taxon',
         'domain': 'thing with taxon',
         'domain_of': ['thing with taxon', 'biological entity', 'gene', 'genome'],
         'exact_mappings': ['RO:0002162', 'WIKIDATA_PROPERTY:P703'],
         'in_subset': ['translator_minimal'],
         'inherited': True,
         'is_a': 'related to at instance level',
         'narrow_mappings': ['RO:0002160'],
         'slot_uri': 'biolink:in_taxon'} })
    in_taxon_label: Optional[str] = Field(default=None, description="""The human readable scientific name for the taxon of the entity.""", json_schema_extra = { "linkml_meta": {'alias': 'in_taxon_label',
         'annotations': {'denormalized': {'tag': 'denormalized', 'value': True}},
         'definition_uri': 'https://w3id.org/biolink/vocab/in_taxon_label',
         'domain': 'thing with taxon',
         'domain_of': ['thing with taxon', 'biological entity', 'gene', 'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P225'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'slot_uri': 'biolink:in_taxon_label'} })
    has_biological_sequence: Optional[str] = Field(default=None, description="""connects a genomic feature to its sequence""", json_schema_extra = { "linkml_meta": {'alias': 'has_biological_sequence',
         'definition_uri': 'https://w3id.org/biolink/vocab/has_biological_sequence',
         'domain': 'named thing',
         'domain_of': ['genomic entity', 'gene', 'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:has_biological_sequence'} })


class GenomeAssembly(ThingWithTaxon, NamedThing):
    """
    Represents a genome assembly. A genome assembly is a computational representation of a genome sequence.
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'from_schema': 'https://identifiers.org/brain-bican/genome-annotation-schema',
         'mixins': ['thing with taxon']})

    version: Optional[str] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'version',
         'broad_mappings': ['pav:version', 'owl:versionInfo'],
         'definition_uri': 'https://w3id.org/biolink/vocab/version',
         'domain': 'dataset',
         'domain_of': ['VersionedNamedThing', 'GenomeAnnotation', 'GenomeAssembly'],
         'is_a': 'node property',
         'slot_uri': 'biolink:version'} })
    strain: Optional[str] = Field(default=None, description="""The genetic variant or subtype of a species or organism.""", json_schema_extra = { "linkml_meta": {'alias': 'strain', 'domain_of': ['GenomeAssembly']} })
    in_taxon: Optional[List[str]] = Field(default=None, description="""connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'""", json_schema_extra = { "linkml_meta": {'alias': 'in_taxon',
         'aliases': ['instance of',
                     'is organism source of gene product',
                     'organism has gene',
                     'gene found in organism',
                     'gene product has organism source'],
         'annotations': {'canonical_predicate': {'tag': 'canonical_predicate',
                                                 'value': True}},
         'definition_uri': 'https://w3id.org/biolink/vocab/in_taxon',
         'domain': 'thing with taxon',
         'domain_of': ['thing with taxon', 'biological entity', 'gene', 'genome'],
         'exact_mappings': ['RO:0002162', 'WIKIDATA_PROPERTY:P703'],
         'in_subset': ['translator_minimal'],
         'inherited': True,
         'is_a': 'related to at instance level',
         'narrow_mappings': ['RO:0002160'],
         'slot_uri': 'biolink:in_taxon'} })
    in_taxon_label: Optional[str] = Field(default=None, description="""The human readable scientific name for the taxon of the entity.""", json_schema_extra = { "linkml_meta": {'alias': 'in_taxon_label',
         'annotations': {'denormalized': {'tag': 'denormalized', 'value': True}},
         'definition_uri': 'https://w3id.org/biolink/vocab/in_taxon_label',
         'domain': 'thing with taxon',
         'domain_of': ['thing with taxon', 'biological entity', 'gene', 'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P225'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'slot_uri': 'biolink:in_taxon_label'} })
    id: str = Field(default=..., description="""A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })
    iri: Optional[str] = Field(default=None, description="""An IRI for an entity. This is determined by the id using expansion rules.""", json_schema_extra = { "linkml_meta": {'alias': 'iri',
         'definition_uri': 'https://w3id.org/biolink/vocab/iri',
         'domain_of': ['attribute',
                       'entity',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P854'],
         'in_subset': ['translator_minimal', 'samples'],
         'slot_uri': 'biolink:iri'} })
    category: List[Literal["https://identifiers.org/brain-bican/vocab/GenomeAssembly","bican:GenomeAssembly"]] = Field(default=["bican:GenomeAssembly"], description="""Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}.""", json_schema_extra = { "linkml_meta": {'alias': 'category',
         'definition_uri': 'https://w3id.org/biolink/vocab/category',
         'designates_type': True,
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'type',
         'is_class_field': True,
         'slot_uri': 'biolink:category'} })
    type: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'type',
         'definition_uri': 'https://w3id.org/biolink/vocab/type',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['gff3:type', 'gpi:DB_Object_Type'],
         'mappings': ['rdf:type'],
         'slot_uri': 'rdf:type'} })
    name: Optional[str] = Field(default=None, description="""A human-readable name for an attribute or entity.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })
    description: Optional[str] = Field(default=None, description="""a human-readable description of an entity""", json_schema_extra = { "linkml_meta": {'alias': 'description',
         'aliases': ['definition'],
         'definition_uri': 'https://w3id.org/biolink/vocab/description',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'ColorPalette'],
         'exact_mappings': ['IAO:0000115', 'skos:definitions'],
         'in_subset': ['translator_minimal'],
         'mappings': ['dct:description'],
         'narrow_mappings': ['gff3:Description'],
         'slot_uri': 'dct:description'} })
    has_attribute: Optional[List[str]] = Field(default=None, description="""connects any entity to an attribute""", json_schema_extra = { "linkml_meta": {'alias': 'has_attribute',
         'close_mappings': ['OBI:0001927'],
         'definition_uri': 'https://w3id.org/biolink/vocab/has_attribute',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['SIO:000008'],
         'in_subset': ['samples'],
         'narrow_mappings': ['OBAN:association_has_subject_property',
                             'OBAN:association_has_object_property',
                             'CPT:has_possibly_included_panel_element',
                             'DRUGBANK:category',
                             'EFO:is_executed_in',
                             'HANCESTRO:0301',
                             'LOINC:has_action_guidance',
                             'LOINC:has_adjustment',
                             'LOINC:has_aggregation_view',
                             'LOINC:has_approach_guidance',
                             'LOINC:has_divisor',
                             'LOINC:has_exam',
                             'LOINC:has_method',
                             'LOINC:has_modality_subtype',
                             'LOINC:has_object_guidance',
                             'LOINC:has_scale',
                             'LOINC:has_suffix',
                             'LOINC:has_time_aspect',
                             'LOINC:has_time_modifier',
                             'LOINC:has_timing_of',
                             'NCIT:R88',
                             'NCIT:eo_disease_has_property_or_attribute',
                             'NCIT:has_data_element',
                             'NCIT:has_pharmaceutical_administration_method',
                             'NCIT:has_pharmaceutical_basic_dose_form',
                             'NCIT:has_pharmaceutical_intended_site',
                             'NCIT:has_pharmaceutical_release_characteristics',
                             'NCIT:has_pharmaceutical_state_of_matter',
                             'NCIT:has_pharmaceutical_transformation',
                             'NCIT:is_qualified_by',
                             'NCIT:qualifier_applies_to',
                             'NCIT:role_has_domain',
                             'NCIT:role_has_range',
                             'INO:0000154',
                             'HANCESTRO:0308',
                             'OMIM:has_inheritance_type',
                             'orphanet:C016',
                             'orphanet:C017',
                             'RO:0000053',
                             'RO:0000086',
                             'RO:0000087',
                             'SNOMED:has_access',
                             'SNOMED:has_clinical_course',
                             'SNOMED:has_count_of_base_of_active_ingredient',
                             'SNOMED:has_dose_form_administration_method',
                             'SNOMED:has_dose_form_release_characteristic',
                             'SNOMED:has_dose_form_transformation',
                             'SNOMED:has_finding_context',
                             'SNOMED:has_finding_informer',
                             'SNOMED:has_inherent_attribute',
                             'SNOMED:has_intent',
                             'SNOMED:has_interpretation',
                             'SNOMED:has_laterality',
                             'SNOMED:has_measurement_method',
                             'SNOMED:has_method',
                             'SNOMED:has_priority',
                             'SNOMED:has_procedure_context',
                             'SNOMED:has_process_duration',
                             'SNOMED:has_property',
                             'SNOMED:has_revision_status',
                             'SNOMED:has_scale_type',
                             'SNOMED:has_severity',
                             'SNOMED:has_specimen',
                             'SNOMED:has_state_of_matter',
                             'SNOMED:has_subject_relationship_context',
                             'SNOMED:has_surgical_approach',
                             'SNOMED:has_technique',
                             'SNOMED:has_temporal_context',
                             'SNOMED:has_time_aspect',
                             'SNOMED:has_units',
                             'UMLS:has_structural_class',
                             'UMLS:has_supported_concept_property',
                             'UMLS:has_supported_concept_relationship',
                             'UMLS:may_be_qualified_by'],
         'slot_uri': 'biolink:has_attribute'} })
    deprecated: Optional[bool] = Field(default=None, description="""A boolean flag indicating that an entity is no longer considered current or valid.""", json_schema_extra = { "linkml_meta": {'alias': 'deprecated',
         'definition_uri': 'https://w3id.org/biolink/vocab/deprecated',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['oboInOwl:ObsoleteClass'],
         'slot_uri': 'biolink:deprecated'} })
    provided_by: Optional[List[str]] = Field(default=None, description="""The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.""", json_schema_extra = { "linkml_meta": {'alias': 'provided_by',
         'definition_uri': 'https://w3id.org/biolink/vocab/provided_by',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:provided_by'} })
    xref: Optional[List[str]] = Field(default=None, description="""A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.""", json_schema_extra = { "linkml_meta": {'alias': 'xref',
         'aliases': ['dbxref', 'Dbxref', 'DbXref', 'record_url', 'source_record_urls'],
         'definition_uri': 'https://w3id.org/biolink/vocab/xref',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'gene',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ObservationMatrix',
                       'ObservationRow',
                       'Abbreviation',
                       'MatrixFile',
                       'ColorPalette',
                       'DisplayColor'],
         'in_subset': ['translator_minimal'],
         'narrow_mappings': ['gff3:Dbxref', 'gpi:DB_Xrefs'],
         'slot_uri': 'biolink:xref'} })
    full_name: Optional[str] = Field(default=None, description="""a long-form human readable name for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'full_name',
         'definition_uri': 'https://w3id.org/biolink/vocab/full_name',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:full_name'} })
    synonym: Optional[List[str]] = Field(default=None, description="""Alternate human-readable names for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'synonym',
         'aliases': ['alias'],
         'definition_uri': 'https://w3id.org/biolink/vocab/synonym',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'narrow_mappings': ['skos:altLabel',
                             'gff3:Alias',
                             'AGRKB:synonyms',
                             'gpi:DB_Object_Synonyms',
                             'HANCESTRO:0330',
                             'IAO:0000136',
                             'RXNORM:has_tradename'],
         'slot_uri': 'biolink:synonym'} })


class AnnotationCollection(ConfiguredBaseModel):
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'from_schema': 'https://identifiers.org/brain-bican/genome-annotation-schema',
         'tree_root': True})

    annotations: Optional[List[GeneAnnotation]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'annotations', 'domain_of': ['AnnotationCollection']} })
    genome_annotations: Optional[List[GenomeAnnotation]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'genome_annotations', 'domain_of': ['AnnotationCollection']} })
    genome_assemblies: Optional[List[GenomeAssembly]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'genome_assemblies', 'domain_of': ['AnnotationCollection']} })


class ImageDataset(VersionedNamedThing):
    """
    An image dataset is versioned release of a multidimensional regular grid of measurements  and metadata required for a morphological representation of an entity such as an anatomical  structure (ref: OBI_0003327, RRID:SCR_006266)
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'from_schema': 'https://identifiers.org/brain-bican/anatomical-structure-schema',
         'slot_usage': {'revision_of': {'any_of': [{'range': 'ImageDataset'},
                                                   {'range': 'string'}],
                                        'name': 'revision_of'}}})

    x_direction: Optional[ANATOMICALDIRECTION] = Field(default=None, description="""A controlled vocabulary attribute defining the x axis direction in terms of anatomical  direction.""", json_schema_extra = { "linkml_meta": {'alias': 'x_direction', 'domain_of': ['ImageDataset']} })
    y_direction: Optional[ANATOMICALDIRECTION] = Field(default=None, description="""A controlled vocabulary attribute defining the y axis direction in terms of anatomical  direction.""", json_schema_extra = { "linkml_meta": {'alias': 'y_direction', 'domain_of': ['ImageDataset']} })
    z_direction: Optional[ANATOMICALDIRECTION] = Field(default=None, description="""A controlled vocabulary attribute defining the z axis direction in terms of anatomical  direction.""", json_schema_extra = { "linkml_meta": {'alias': 'z_direction', 'domain_of': ['ImageDataset']} })
    x_size: Optional[int] = Field(default=None, description="""The number of pixels/voxels (size) along the x axis.""", ge=1, json_schema_extra = { "linkml_meta": {'alias': 'x_size', 'domain_of': ['ImageDataset']} })
    y_size: Optional[int] = Field(default=None, description="""The number of pixels/voxels (size) along the y axis.""", ge=1, json_schema_extra = { "linkml_meta": {'alias': 'y_size', 'domain_of': ['ImageDataset']} })
    z_size: Optional[int] = Field(default=None, description="""The number of pixels/voxels (size) along the y axis.""", ge=1, json_schema_extra = { "linkml_meta": {'alias': 'z_size', 'domain_of': ['ImageDataset']} })
    x_resolution: Optional[float] = Field(default=None, description="""The resolution (length / pixel) in along the x axis (numerical value part).""", json_schema_extra = { "linkml_meta": {'alias': 'x_resolution',
         'domain_of': ['ImageDataset'],
         'structured_pattern': {'syntax': '{PositiveFloat}'}} })
    y_resolution: Optional[float] = Field(default=None, description="""The resolution (length / pixel) in along the y axis (numerical value part).""", json_schema_extra = { "linkml_meta": {'alias': 'y_resolution',
         'domain_of': ['ImageDataset'],
         'structured_pattern': {'syntax': '{PositiveFloat}'}} })
    z_resolution: Optional[float] = Field(default=None, description="""The resolution (length / pixel) in along the z axis (numerical value part).""", json_schema_extra = { "linkml_meta": {'alias': 'z_resolution',
         'domain_of': ['ImageDataset'],
         'structured_pattern': {'syntax': '{PositiveFloat}'}} })
    unit: Optional[DISTANCEUNIT] = Field(default=None, description="""A controlled vocabulary attribute defining the length unit of the x, y, and z  resolution values.""", json_schema_extra = { "linkml_meta": {'alias': 'unit', 'domain_of': ['ImageDataset']} })
    version: str = Field(default=..., json_schema_extra = { "linkml_meta": {'alias': 'version',
         'broad_mappings': ['pav:version', 'owl:versionInfo'],
         'definition_uri': 'https://w3id.org/biolink/vocab/version',
         'domain': 'dataset',
         'domain_of': ['VersionedNamedThing', 'GenomeAnnotation', 'GenomeAssembly'],
         'is_a': 'node property',
         'slot_uri': 'biolink:version'} })
    revision_of: Optional[str] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'revision_of',
         'any_of': [{'range': 'ImageDataset'}, {'range': 'string'}],
         'domain_of': ['VersionedNamedThing']} })
    id: str = Field(default=..., description="""A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })
    iri: Optional[str] = Field(default=None, description="""An IRI for an entity. This is determined by the id using expansion rules.""", json_schema_extra = { "linkml_meta": {'alias': 'iri',
         'definition_uri': 'https://w3id.org/biolink/vocab/iri',
         'domain_of': ['attribute',
                       'entity',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P854'],
         'in_subset': ['translator_minimal', 'samples'],
         'slot_uri': 'biolink:iri'} })
    category: List[Literal["https://identifiers.org/brain-bican/vocab/ImageDataset","bican:ImageDataset"]] = Field(default=["bican:ImageDataset"], description="""Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}.""", json_schema_extra = { "linkml_meta": {'alias': 'category',
         'definition_uri': 'https://w3id.org/biolink/vocab/category',
         'designates_type': True,
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'type',
         'is_class_field': True,
         'slot_uri': 'biolink:category'} })
    type: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'type',
         'definition_uri': 'https://w3id.org/biolink/vocab/type',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['gff3:type', 'gpi:DB_Object_Type'],
         'mappings': ['rdf:type'],
         'slot_uri': 'rdf:type'} })
    name: Optional[str] = Field(default=None, description="""A human-readable name for an attribute or entity.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })
    description: Optional[str] = Field(default=None, description="""a human-readable description of an entity""", json_schema_extra = { "linkml_meta": {'alias': 'description',
         'aliases': ['definition'],
         'definition_uri': 'https://w3id.org/biolink/vocab/description',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'ColorPalette'],
         'exact_mappings': ['IAO:0000115', 'skos:definitions'],
         'in_subset': ['translator_minimal'],
         'mappings': ['dct:description'],
         'narrow_mappings': ['gff3:Description'],
         'slot_uri': 'dct:description'} })
    has_attribute: Optional[List[str]] = Field(default=None, description="""connects any entity to an attribute""", json_schema_extra = { "linkml_meta": {'alias': 'has_attribute',
         'close_mappings': ['OBI:0001927'],
         'definition_uri': 'https://w3id.org/biolink/vocab/has_attribute',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['SIO:000008'],
         'in_subset': ['samples'],
         'narrow_mappings': ['OBAN:association_has_subject_property',
                             'OBAN:association_has_object_property',
                             'CPT:has_possibly_included_panel_element',
                             'DRUGBANK:category',
                             'EFO:is_executed_in',
                             'HANCESTRO:0301',
                             'LOINC:has_action_guidance',
                             'LOINC:has_adjustment',
                             'LOINC:has_aggregation_view',
                             'LOINC:has_approach_guidance',
                             'LOINC:has_divisor',
                             'LOINC:has_exam',
                             'LOINC:has_method',
                             'LOINC:has_modality_subtype',
                             'LOINC:has_object_guidance',
                             'LOINC:has_scale',
                             'LOINC:has_suffix',
                             'LOINC:has_time_aspect',
                             'LOINC:has_time_modifier',
                             'LOINC:has_timing_of',
                             'NCIT:R88',
                             'NCIT:eo_disease_has_property_or_attribute',
                             'NCIT:has_data_element',
                             'NCIT:has_pharmaceutical_administration_method',
                             'NCIT:has_pharmaceutical_basic_dose_form',
                             'NCIT:has_pharmaceutical_intended_site',
                             'NCIT:has_pharmaceutical_release_characteristics',
                             'NCIT:has_pharmaceutical_state_of_matter',
                             'NCIT:has_pharmaceutical_transformation',
                             'NCIT:is_qualified_by',
                             'NCIT:qualifier_applies_to',
                             'NCIT:role_has_domain',
                             'NCIT:role_has_range',
                             'INO:0000154',
                             'HANCESTRO:0308',
                             'OMIM:has_inheritance_type',
                             'orphanet:C016',
                             'orphanet:C017',
                             'RO:0000053',
                             'RO:0000086',
                             'RO:0000087',
                             'SNOMED:has_access',
                             'SNOMED:has_clinical_course',
                             'SNOMED:has_count_of_base_of_active_ingredient',
                             'SNOMED:has_dose_form_administration_method',
                             'SNOMED:has_dose_form_release_characteristic',
                             'SNOMED:has_dose_form_transformation',
                             'SNOMED:has_finding_context',
                             'SNOMED:has_finding_informer',
                             'SNOMED:has_inherent_attribute',
                             'SNOMED:has_intent',
                             'SNOMED:has_interpretation',
                             'SNOMED:has_laterality',
                             'SNOMED:has_measurement_method',
                             'SNOMED:has_method',
                             'SNOMED:has_priority',
                             'SNOMED:has_procedure_context',
                             'SNOMED:has_process_duration',
                             'SNOMED:has_property',
                             'SNOMED:has_revision_status',
                             'SNOMED:has_scale_type',
                             'SNOMED:has_severity',
                             'SNOMED:has_specimen',
                             'SNOMED:has_state_of_matter',
                             'SNOMED:has_subject_relationship_context',
                             'SNOMED:has_surgical_approach',
                             'SNOMED:has_technique',
                             'SNOMED:has_temporal_context',
                             'SNOMED:has_time_aspect',
                             'SNOMED:has_units',
                             'UMLS:has_structural_class',
                             'UMLS:has_supported_concept_property',
                             'UMLS:has_supported_concept_relationship',
                             'UMLS:may_be_qualified_by'],
         'slot_uri': 'biolink:has_attribute'} })
    deprecated: Optional[bool] = Field(default=None, description="""A boolean flag indicating that an entity is no longer considered current or valid.""", json_schema_extra = { "linkml_meta": {'alias': 'deprecated',
         'definition_uri': 'https://w3id.org/biolink/vocab/deprecated',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['oboInOwl:ObsoleteClass'],
         'slot_uri': 'biolink:deprecated'} })
    provided_by: Optional[List[str]] = Field(default=None, description="""The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.""", json_schema_extra = { "linkml_meta": {'alias': 'provided_by',
         'definition_uri': 'https://w3id.org/biolink/vocab/provided_by',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:provided_by'} })
    xref: Optional[List[str]] = Field(default=None, description="""A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.""", json_schema_extra = { "linkml_meta": {'alias': 'xref',
         'aliases': ['dbxref', 'Dbxref', 'DbXref', 'record_url', 'source_record_urls'],
         'definition_uri': 'https://w3id.org/biolink/vocab/xref',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'gene',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ObservationMatrix',
                       'ObservationRow',
                       'Abbreviation',
                       'MatrixFile',
                       'ColorPalette',
                       'DisplayColor'],
         'in_subset': ['translator_minimal'],
         'narrow_mappings': ['gff3:Dbxref', 'gpi:DB_Xrefs'],
         'slot_uri': 'biolink:xref'} })
    full_name: Optional[str] = Field(default=None, description="""a long-form human readable name for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'full_name',
         'definition_uri': 'https://w3id.org/biolink/vocab/full_name',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:full_name'} })
    synonym: Optional[List[str]] = Field(default=None, description="""Alternate human-readable names for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'synonym',
         'aliases': ['alias'],
         'definition_uri': 'https://w3id.org/biolink/vocab/synonym',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'narrow_mappings': ['skos:altLabel',
                             'gff3:Alias',
                             'AGRKB:synonyms',
                             'gpi:DB_Object_Synonyms',
                             'HANCESTRO:0330',
                             'IAO:0000136',
                             'RXNORM:has_tradename'],
         'slot_uri': 'biolink:synonym'} })


class AnatomicalSpace(VersionedNamedThing):
    """
    An anatomical space is versioned release of a mathematical space with a defined mapping  between the anatomical axes and the mathematical axes. An anatomical space may be defined by  a reference image chosen as the biological reference for an anatomical structure of interest  derived from a single or multiple specimens (ref: ILX:0777106, RRID:SCR_023499)
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'from_schema': 'https://identifiers.org/brain-bican/anatomical-structure-schema',
         'slot_usage': {'revision_of': {'any_of': [{'range': 'AnatomicalSpace'},
                                                   {'range': 'string'}],
                                        'name': 'revision_of'}}})

    measures: str = Field(default=..., description="""Reference to the specific image dataset used to define the anatomical space.""", json_schema_extra = { "linkml_meta": {'alias': 'measures',
         'any_of': [{'range': 'ImageDataset'}, {'range': 'string'}],
         'domain_of': ['AnatomicalSpace']} })
    version: str = Field(default=..., json_schema_extra = { "linkml_meta": {'alias': 'version',
         'broad_mappings': ['pav:version', 'owl:versionInfo'],
         'definition_uri': 'https://w3id.org/biolink/vocab/version',
         'domain': 'dataset',
         'domain_of': ['VersionedNamedThing', 'GenomeAnnotation', 'GenomeAssembly'],
         'is_a': 'node property',
         'slot_uri': 'biolink:version'} })
    revision_of: Optional[str] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'revision_of',
         'any_of': [{'range': 'AnatomicalSpace'}, {'range': 'string'}],
         'domain_of': ['VersionedNamedThing']} })
    id: str = Field(default=..., description="""A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })
    iri: Optional[str] = Field(default=None, description="""An IRI for an entity. This is determined by the id using expansion rules.""", json_schema_extra = { "linkml_meta": {'alias': 'iri',
         'definition_uri': 'https://w3id.org/biolink/vocab/iri',
         'domain_of': ['attribute',
                       'entity',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P854'],
         'in_subset': ['translator_minimal', 'samples'],
         'slot_uri': 'biolink:iri'} })
    category: List[Literal["https://identifiers.org/brain-bican/vocab/AnatomicalSpace","bican:AnatomicalSpace"]] = Field(default=["bican:AnatomicalSpace"], description="""Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}.""", json_schema_extra = { "linkml_meta": {'alias': 'category',
         'definition_uri': 'https://w3id.org/biolink/vocab/category',
         'designates_type': True,
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'type',
         'is_class_field': True,
         'slot_uri': 'biolink:category'} })
    type: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'type',
         'definition_uri': 'https://w3id.org/biolink/vocab/type',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['gff3:type', 'gpi:DB_Object_Type'],
         'mappings': ['rdf:type'],
         'slot_uri': 'rdf:type'} })
    name: Optional[str] = Field(default=None, description="""A human-readable name for an attribute or entity.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })
    description: Optional[str] = Field(default=None, description="""a human-readable description of an entity""", json_schema_extra = { "linkml_meta": {'alias': 'description',
         'aliases': ['definition'],
         'definition_uri': 'https://w3id.org/biolink/vocab/description',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'ColorPalette'],
         'exact_mappings': ['IAO:0000115', 'skos:definitions'],
         'in_subset': ['translator_minimal'],
         'mappings': ['dct:description'],
         'narrow_mappings': ['gff3:Description'],
         'slot_uri': 'dct:description'} })
    has_attribute: Optional[List[str]] = Field(default=None, description="""connects any entity to an attribute""", json_schema_extra = { "linkml_meta": {'alias': 'has_attribute',
         'close_mappings': ['OBI:0001927'],
         'definition_uri': 'https://w3id.org/biolink/vocab/has_attribute',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['SIO:000008'],
         'in_subset': ['samples'],
         'narrow_mappings': ['OBAN:association_has_subject_property',
                             'OBAN:association_has_object_property',
                             'CPT:has_possibly_included_panel_element',
                             'DRUGBANK:category',
                             'EFO:is_executed_in',
                             'HANCESTRO:0301',
                             'LOINC:has_action_guidance',
                             'LOINC:has_adjustment',
                             'LOINC:has_aggregation_view',
                             'LOINC:has_approach_guidance',
                             'LOINC:has_divisor',
                             'LOINC:has_exam',
                             'LOINC:has_method',
                             'LOINC:has_modality_subtype',
                             'LOINC:has_object_guidance',
                             'LOINC:has_scale',
                             'LOINC:has_suffix',
                             'LOINC:has_time_aspect',
                             'LOINC:has_time_modifier',
                             'LOINC:has_timing_of',
                             'NCIT:R88',
                             'NCIT:eo_disease_has_property_or_attribute',
                             'NCIT:has_data_element',
                             'NCIT:has_pharmaceutical_administration_method',
                             'NCIT:has_pharmaceutical_basic_dose_form',
                             'NCIT:has_pharmaceutical_intended_site',
                             'NCIT:has_pharmaceutical_release_characteristics',
                             'NCIT:has_pharmaceutical_state_of_matter',
                             'NCIT:has_pharmaceutical_transformation',
                             'NCIT:is_qualified_by',
                             'NCIT:qualifier_applies_to',
                             'NCIT:role_has_domain',
                             'NCIT:role_has_range',
                             'INO:0000154',
                             'HANCESTRO:0308',
                             'OMIM:has_inheritance_type',
                             'orphanet:C016',
                             'orphanet:C017',
                             'RO:0000053',
                             'RO:0000086',
                             'RO:0000087',
                             'SNOMED:has_access',
                             'SNOMED:has_clinical_course',
                             'SNOMED:has_count_of_base_of_active_ingredient',
                             'SNOMED:has_dose_form_administration_method',
                             'SNOMED:has_dose_form_release_characteristic',
                             'SNOMED:has_dose_form_transformation',
                             'SNOMED:has_finding_context',
                             'SNOMED:has_finding_informer',
                             'SNOMED:has_inherent_attribute',
                             'SNOMED:has_intent',
                             'SNOMED:has_interpretation',
                             'SNOMED:has_laterality',
                             'SNOMED:has_measurement_method',
                             'SNOMED:has_method',
                             'SNOMED:has_priority',
                             'SNOMED:has_procedure_context',
                             'SNOMED:has_process_duration',
                             'SNOMED:has_property',
                             'SNOMED:has_revision_status',
                             'SNOMED:has_scale_type',
                             'SNOMED:has_severity',
                             'SNOMED:has_specimen',
                             'SNOMED:has_state_of_matter',
                             'SNOMED:has_subject_relationship_context',
                             'SNOMED:has_surgical_approach',
                             'SNOMED:has_technique',
                             'SNOMED:has_temporal_context',
                             'SNOMED:has_time_aspect',
                             'SNOMED:has_units',
                             'UMLS:has_structural_class',
                             'UMLS:has_supported_concept_property',
                             'UMLS:has_supported_concept_relationship',
                             'UMLS:may_be_qualified_by'],
         'slot_uri': 'biolink:has_attribute'} })
    deprecated: Optional[bool] = Field(default=None, description="""A boolean flag indicating that an entity is no longer considered current or valid.""", json_schema_extra = { "linkml_meta": {'alias': 'deprecated',
         'definition_uri': 'https://w3id.org/biolink/vocab/deprecated',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['oboInOwl:ObsoleteClass'],
         'slot_uri': 'biolink:deprecated'} })
    provided_by: Optional[List[str]] = Field(default=None, description="""The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.""", json_schema_extra = { "linkml_meta": {'alias': 'provided_by',
         'definition_uri': 'https://w3id.org/biolink/vocab/provided_by',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:provided_by'} })
    xref: Optional[List[str]] = Field(default=None, description="""A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.""", json_schema_extra = { "linkml_meta": {'alias': 'xref',
         'aliases': ['dbxref', 'Dbxref', 'DbXref', 'record_url', 'source_record_urls'],
         'definition_uri': 'https://w3id.org/biolink/vocab/xref',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'gene',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ObservationMatrix',
                       'ObservationRow',
                       'Abbreviation',
                       'MatrixFile',
                       'ColorPalette',
                       'DisplayColor'],
         'in_subset': ['translator_minimal'],
         'narrow_mappings': ['gff3:Dbxref', 'gpi:DB_Xrefs'],
         'slot_uri': 'biolink:xref'} })
    full_name: Optional[str] = Field(default=None, description="""a long-form human readable name for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'full_name',
         'definition_uri': 'https://w3id.org/biolink/vocab/full_name',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:full_name'} })
    synonym: Optional[List[str]] = Field(default=None, description="""Alternate human-readable names for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'synonym',
         'aliases': ['alias'],
         'definition_uri': 'https://w3id.org/biolink/vocab/synonym',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'narrow_mappings': ['skos:altLabel',
                             'gff3:Alias',
                             'AGRKB:synonyms',
                             'gpi:DB_Object_Synonyms',
                             'HANCESTRO:0330',
                             'IAO:0000136',
                             'RXNORM:has_tradename'],
         'slot_uri': 'biolink:synonym'} })


class ParcellationTerminology(VersionedNamedThing):
    """
    A parcellation terminology is a versioned release set of terms that can be used to label  annotations in an atlas, providing human readability and context and allowing communication  about brain locations and structural properties. Typically, a terminology is a set of  descriptive anatomical terms following a specific naming convention and/or approach to  organization scheme. The terminology may be a flat list of controlled vocabulary, a taxonomy  and partonomy, or an ontology (ref: ILX:0777107, RRID:SCR_023499)
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'from_schema': 'https://identifiers.org/brain-bican/anatomical-structure-schema',
         'slot_usage': {'revision_of': {'any_of': [{'range': 'ParcellationTerminology'},
                                                   {'range': 'string'}],
                                        'name': 'revision_of'}}})

    version: str = Field(default=..., json_schema_extra = { "linkml_meta": {'alias': 'version',
         'broad_mappings': ['pav:version', 'owl:versionInfo'],
         'definition_uri': 'https://w3id.org/biolink/vocab/version',
         'domain': 'dataset',
         'domain_of': ['VersionedNamedThing', 'GenomeAnnotation', 'GenomeAssembly'],
         'is_a': 'node property',
         'slot_uri': 'biolink:version'} })
    revision_of: Optional[str] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'revision_of',
         'any_of': [{'range': 'ParcellationTerminology'}, {'range': 'string'}],
         'domain_of': ['VersionedNamedThing']} })
    id: str = Field(default=..., description="""A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })
    iri: Optional[str] = Field(default=None, description="""An IRI for an entity. This is determined by the id using expansion rules.""", json_schema_extra = { "linkml_meta": {'alias': 'iri',
         'definition_uri': 'https://w3id.org/biolink/vocab/iri',
         'domain_of': ['attribute',
                       'entity',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P854'],
         'in_subset': ['translator_minimal', 'samples'],
         'slot_uri': 'biolink:iri'} })
    category: List[Literal["https://identifiers.org/brain-bican/vocab/ParcellationTerminology","bican:ParcellationTerminology"]] = Field(default=["bican:ParcellationTerminology"], description="""Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}.""", json_schema_extra = { "linkml_meta": {'alias': 'category',
         'definition_uri': 'https://w3id.org/biolink/vocab/category',
         'designates_type': True,
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'type',
         'is_class_field': True,
         'slot_uri': 'biolink:category'} })
    type: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'type',
         'definition_uri': 'https://w3id.org/biolink/vocab/type',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['gff3:type', 'gpi:DB_Object_Type'],
         'mappings': ['rdf:type'],
         'slot_uri': 'rdf:type'} })
    name: Optional[str] = Field(default=None, description="""A human-readable name for an attribute or entity.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })
    description: Optional[str] = Field(default=None, description="""a human-readable description of an entity""", json_schema_extra = { "linkml_meta": {'alias': 'description',
         'aliases': ['definition'],
         'definition_uri': 'https://w3id.org/biolink/vocab/description',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'ColorPalette'],
         'exact_mappings': ['IAO:0000115', 'skos:definitions'],
         'in_subset': ['translator_minimal'],
         'mappings': ['dct:description'],
         'narrow_mappings': ['gff3:Description'],
         'slot_uri': 'dct:description'} })
    has_attribute: Optional[List[str]] = Field(default=None, description="""connects any entity to an attribute""", json_schema_extra = { "linkml_meta": {'alias': 'has_attribute',
         'close_mappings': ['OBI:0001927'],
         'definition_uri': 'https://w3id.org/biolink/vocab/has_attribute',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['SIO:000008'],
         'in_subset': ['samples'],
         'narrow_mappings': ['OBAN:association_has_subject_property',
                             'OBAN:association_has_object_property',
                             'CPT:has_possibly_included_panel_element',
                             'DRUGBANK:category',
                             'EFO:is_executed_in',
                             'HANCESTRO:0301',
                             'LOINC:has_action_guidance',
                             'LOINC:has_adjustment',
                             'LOINC:has_aggregation_view',
                             'LOINC:has_approach_guidance',
                             'LOINC:has_divisor',
                             'LOINC:has_exam',
                             'LOINC:has_method',
                             'LOINC:has_modality_subtype',
                             'LOINC:has_object_guidance',
                             'LOINC:has_scale',
                             'LOINC:has_suffix',
                             'LOINC:has_time_aspect',
                             'LOINC:has_time_modifier',
                             'LOINC:has_timing_of',
                             'NCIT:R88',
                             'NCIT:eo_disease_has_property_or_attribute',
                             'NCIT:has_data_element',
                             'NCIT:has_pharmaceutical_administration_method',
                             'NCIT:has_pharmaceutical_basic_dose_form',
                             'NCIT:has_pharmaceutical_intended_site',
                             'NCIT:has_pharmaceutical_release_characteristics',
                             'NCIT:has_pharmaceutical_state_of_matter',
                             'NCIT:has_pharmaceutical_transformation',
                             'NCIT:is_qualified_by',
                             'NCIT:qualifier_applies_to',
                             'NCIT:role_has_domain',
                             'NCIT:role_has_range',
                             'INO:0000154',
                             'HANCESTRO:0308',
                             'OMIM:has_inheritance_type',
                             'orphanet:C016',
                             'orphanet:C017',
                             'RO:0000053',
                             'RO:0000086',
                             'RO:0000087',
                             'SNOMED:has_access',
                             'SNOMED:has_clinical_course',
                             'SNOMED:has_count_of_base_of_active_ingredient',
                             'SNOMED:has_dose_form_administration_method',
                             'SNOMED:has_dose_form_release_characteristic',
                             'SNOMED:has_dose_form_transformation',
                             'SNOMED:has_finding_context',
                             'SNOMED:has_finding_informer',
                             'SNOMED:has_inherent_attribute',
                             'SNOMED:has_intent',
                             'SNOMED:has_interpretation',
                             'SNOMED:has_laterality',
                             'SNOMED:has_measurement_method',
                             'SNOMED:has_method',
                             'SNOMED:has_priority',
                             'SNOMED:has_procedure_context',
                             'SNOMED:has_process_duration',
                             'SNOMED:has_property',
                             'SNOMED:has_revision_status',
                             'SNOMED:has_scale_type',
                             'SNOMED:has_severity',
                             'SNOMED:has_specimen',
                             'SNOMED:has_state_of_matter',
                             'SNOMED:has_subject_relationship_context',
                             'SNOMED:has_surgical_approach',
                             'SNOMED:has_technique',
                             'SNOMED:has_temporal_context',
                             'SNOMED:has_time_aspect',
                             'SNOMED:has_units',
                             'UMLS:has_structural_class',
                             'UMLS:has_supported_concept_property',
                             'UMLS:has_supported_concept_relationship',
                             'UMLS:may_be_qualified_by'],
         'slot_uri': 'biolink:has_attribute'} })
    deprecated: Optional[bool] = Field(default=None, description="""A boolean flag indicating that an entity is no longer considered current or valid.""", json_schema_extra = { "linkml_meta": {'alias': 'deprecated',
         'definition_uri': 'https://w3id.org/biolink/vocab/deprecated',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['oboInOwl:ObsoleteClass'],
         'slot_uri': 'biolink:deprecated'} })
    provided_by: Optional[List[str]] = Field(default=None, description="""The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.""", json_schema_extra = { "linkml_meta": {'alias': 'provided_by',
         'definition_uri': 'https://w3id.org/biolink/vocab/provided_by',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:provided_by'} })
    xref: Optional[List[str]] = Field(default=None, description="""A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.""", json_schema_extra = { "linkml_meta": {'alias': 'xref',
         'aliases': ['dbxref', 'Dbxref', 'DbXref', 'record_url', 'source_record_urls'],
         'definition_uri': 'https://w3id.org/biolink/vocab/xref',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'gene',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ObservationMatrix',
                       'ObservationRow',
                       'Abbreviation',
                       'MatrixFile',
                       'ColorPalette',
                       'DisplayColor'],
         'in_subset': ['translator_minimal'],
         'narrow_mappings': ['gff3:Dbxref', 'gpi:DB_Xrefs'],
         'slot_uri': 'biolink:xref'} })
    full_name: Optional[str] = Field(default=None, description="""a long-form human readable name for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'full_name',
         'definition_uri': 'https://w3id.org/biolink/vocab/full_name',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:full_name'} })
    synonym: Optional[List[str]] = Field(default=None, description="""Alternate human-readable names for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'synonym',
         'aliases': ['alias'],
         'definition_uri': 'https://w3id.org/biolink/vocab/synonym',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'narrow_mappings': ['skos:altLabel',
                             'gff3:Alias',
                             'AGRKB:synonyms',
                             'gpi:DB_Object_Synonyms',
                             'HANCESTRO:0330',
                             'IAO:0000136',
                             'RXNORM:has_tradename'],
         'slot_uri': 'biolink:synonym'} })


class ParcellationTermSet(VersionedNamedThing):
    """
    A parcellation term set is the set of parcellation terms within a specific parcellation terminology.  A parcellation term set belongs to one and only one parcellation terminology and each parcellation  term in a parcellation terminology belongs to one and only one term set.  If the parcellation terminology is a taxonomy, parcellation term sets can be used to represent  taxonomic ranks. For consistency, if the terminology does not have the notion of taxonomic ranks,  all terms are grouped into a single parcellation term set.
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'from_schema': 'https://identifiers.org/brain-bican/anatomical-structure-schema',
         'slot_usage': {'ordinal': {'description': 'Ordinal of the parcellation term '
                                                   'set among other term sets within '
                                                   'the context of the  associated '
                                                   'parcellation terminology.',
                                    'name': 'ordinal'}}})

    ordinal: Optional[int] = Field(default=None, description="""Ordinal of the parcellation term set among other term sets within the context of the  associated parcellation terminology.""", ge=0, json_schema_extra = { "linkml_meta": {'alias': 'ordinal', 'domain_of': ['ParcellationTermSet', 'ParcellationTerm']} })
    part_of_parcellation_terminology: str = Field(default=..., description="""Reference to the parcellation terminology for which the parcellation term set partitions.""", json_schema_extra = { "linkml_meta": {'alias': 'part_of_parcellation_terminology',
         'any_of': [{'range': 'ParcellationTerminology'}, {'range': 'string'}],
         'domain_of': ['ParcellationTermSet']} })
    has_parent_parcellation_term_set: Optional[str] = Field(default=None, description="""Reference to the parent parcellation term set for which the parcellation term set is a child  (lower taxonomic rank) of.""", json_schema_extra = { "linkml_meta": {'alias': 'has_parent_parcellation_term_set',
         'any_of': [{'range': 'ParcellationTermSet'}, {'range': 'string'}],
         'domain_of': ['ParcellationTermSet']} })
    version: str = Field(default=..., json_schema_extra = { "linkml_meta": {'alias': 'version',
         'broad_mappings': ['pav:version', 'owl:versionInfo'],
         'definition_uri': 'https://w3id.org/biolink/vocab/version',
         'domain': 'dataset',
         'domain_of': ['VersionedNamedThing', 'GenomeAnnotation', 'GenomeAssembly'],
         'is_a': 'node property',
         'slot_uri': 'biolink:version'} })
    revision_of: Optional[str] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'revision_of', 'domain_of': ['VersionedNamedThing']} })
    id: str = Field(default=..., description="""A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })
    iri: Optional[str] = Field(default=None, description="""An IRI for an entity. This is determined by the id using expansion rules.""", json_schema_extra = { "linkml_meta": {'alias': 'iri',
         'definition_uri': 'https://w3id.org/biolink/vocab/iri',
         'domain_of': ['attribute',
                       'entity',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P854'],
         'in_subset': ['translator_minimal', 'samples'],
         'slot_uri': 'biolink:iri'} })
    category: List[Literal["https://identifiers.org/brain-bican/vocab/ParcellationTermSet","bican:ParcellationTermSet"]] = Field(default=["bican:ParcellationTermSet"], description="""Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}.""", json_schema_extra = { "linkml_meta": {'alias': 'category',
         'definition_uri': 'https://w3id.org/biolink/vocab/category',
         'designates_type': True,
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'type',
         'is_class_field': True,
         'slot_uri': 'biolink:category'} })
    type: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'type',
         'definition_uri': 'https://w3id.org/biolink/vocab/type',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['gff3:type', 'gpi:DB_Object_Type'],
         'mappings': ['rdf:type'],
         'slot_uri': 'rdf:type'} })
    name: Optional[str] = Field(default=None, description="""A human-readable name for an attribute or entity.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })
    description: Optional[str] = Field(default=None, description="""a human-readable description of an entity""", json_schema_extra = { "linkml_meta": {'alias': 'description',
         'aliases': ['definition'],
         'definition_uri': 'https://w3id.org/biolink/vocab/description',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'ColorPalette'],
         'exact_mappings': ['IAO:0000115', 'skos:definitions'],
         'in_subset': ['translator_minimal'],
         'mappings': ['dct:description'],
         'narrow_mappings': ['gff3:Description'],
         'slot_uri': 'dct:description'} })
    has_attribute: Optional[List[str]] = Field(default=None, description="""connects any entity to an attribute""", json_schema_extra = { "linkml_meta": {'alias': 'has_attribute',
         'close_mappings': ['OBI:0001927'],
         'definition_uri': 'https://w3id.org/biolink/vocab/has_attribute',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['SIO:000008'],
         'in_subset': ['samples'],
         'narrow_mappings': ['OBAN:association_has_subject_property',
                             'OBAN:association_has_object_property',
                             'CPT:has_possibly_included_panel_element',
                             'DRUGBANK:category',
                             'EFO:is_executed_in',
                             'HANCESTRO:0301',
                             'LOINC:has_action_guidance',
                             'LOINC:has_adjustment',
                             'LOINC:has_aggregation_view',
                             'LOINC:has_approach_guidance',
                             'LOINC:has_divisor',
                             'LOINC:has_exam',
                             'LOINC:has_method',
                             'LOINC:has_modality_subtype',
                             'LOINC:has_object_guidance',
                             'LOINC:has_scale',
                             'LOINC:has_suffix',
                             'LOINC:has_time_aspect',
                             'LOINC:has_time_modifier',
                             'LOINC:has_timing_of',
                             'NCIT:R88',
                             'NCIT:eo_disease_has_property_or_attribute',
                             'NCIT:has_data_element',
                             'NCIT:has_pharmaceutical_administration_method',
                             'NCIT:has_pharmaceutical_basic_dose_form',
                             'NCIT:has_pharmaceutical_intended_site',
                             'NCIT:has_pharmaceutical_release_characteristics',
                             'NCIT:has_pharmaceutical_state_of_matter',
                             'NCIT:has_pharmaceutical_transformation',
                             'NCIT:is_qualified_by',
                             'NCIT:qualifier_applies_to',
                             'NCIT:role_has_domain',
                             'NCIT:role_has_range',
                             'INO:0000154',
                             'HANCESTRO:0308',
                             'OMIM:has_inheritance_type',
                             'orphanet:C016',
                             'orphanet:C017',
                             'RO:0000053',
                             'RO:0000086',
                             'RO:0000087',
                             'SNOMED:has_access',
                             'SNOMED:has_clinical_course',
                             'SNOMED:has_count_of_base_of_active_ingredient',
                             'SNOMED:has_dose_form_administration_method',
                             'SNOMED:has_dose_form_release_characteristic',
                             'SNOMED:has_dose_form_transformation',
                             'SNOMED:has_finding_context',
                             'SNOMED:has_finding_informer',
                             'SNOMED:has_inherent_attribute',
                             'SNOMED:has_intent',
                             'SNOMED:has_interpretation',
                             'SNOMED:has_laterality',
                             'SNOMED:has_measurement_method',
                             'SNOMED:has_method',
                             'SNOMED:has_priority',
                             'SNOMED:has_procedure_context',
                             'SNOMED:has_process_duration',
                             'SNOMED:has_property',
                             'SNOMED:has_revision_status',
                             'SNOMED:has_scale_type',
                             'SNOMED:has_severity',
                             'SNOMED:has_specimen',
                             'SNOMED:has_state_of_matter',
                             'SNOMED:has_subject_relationship_context',
                             'SNOMED:has_surgical_approach',
                             'SNOMED:has_technique',
                             'SNOMED:has_temporal_context',
                             'SNOMED:has_time_aspect',
                             'SNOMED:has_units',
                             'UMLS:has_structural_class',
                             'UMLS:has_supported_concept_property',
                             'UMLS:has_supported_concept_relationship',
                             'UMLS:may_be_qualified_by'],
         'slot_uri': 'biolink:has_attribute'} })
    deprecated: Optional[bool] = Field(default=None, description="""A boolean flag indicating that an entity is no longer considered current or valid.""", json_schema_extra = { "linkml_meta": {'alias': 'deprecated',
         'definition_uri': 'https://w3id.org/biolink/vocab/deprecated',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['oboInOwl:ObsoleteClass'],
         'slot_uri': 'biolink:deprecated'} })
    provided_by: Optional[List[str]] = Field(default=None, description="""The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.""", json_schema_extra = { "linkml_meta": {'alias': 'provided_by',
         'definition_uri': 'https://w3id.org/biolink/vocab/provided_by',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:provided_by'} })
    xref: Optional[List[str]] = Field(default=None, description="""A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.""", json_schema_extra = { "linkml_meta": {'alias': 'xref',
         'aliases': ['dbxref', 'Dbxref', 'DbXref', 'record_url', 'source_record_urls'],
         'definition_uri': 'https://w3id.org/biolink/vocab/xref',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'gene',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ObservationMatrix',
                       'ObservationRow',
                       'Abbreviation',
                       'MatrixFile',
                       'ColorPalette',
                       'DisplayColor'],
         'in_subset': ['translator_minimal'],
         'narrow_mappings': ['gff3:Dbxref', 'gpi:DB_Xrefs'],
         'slot_uri': 'biolink:xref'} })
    full_name: Optional[str] = Field(default=None, description="""a long-form human readable name for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'full_name',
         'definition_uri': 'https://w3id.org/biolink/vocab/full_name',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:full_name'} })
    synonym: Optional[List[str]] = Field(default=None, description="""Alternate human-readable names for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'synonym',
         'aliases': ['alias'],
         'definition_uri': 'https://w3id.org/biolink/vocab/synonym',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'narrow_mappings': ['skos:altLabel',
                             'gff3:Alias',
                             'AGRKB:synonyms',
                             'gpi:DB_Object_Synonyms',
                             'HANCESTRO:0330',
                             'IAO:0000136',
                             'RXNORM:has_tradename'],
         'slot_uri': 'biolink:synonym'} })


class ParcellationTerm(VersionedNamedThing):
    """
    A parcellation term is an individual term within a specific parcellation terminology describing a  single anatomical entity by a persistent identifier, name, symbol and description.  A parcellation  term is a unique and exclusive member of a versioned release parcellation terminology. Although term  identifiers must be unique within the context of one versioned release of a parcellation terminology,  they can be reused in different parcellation terminology versions enabling the representation of  terminology updates and modifications over time.
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'from_schema': 'https://identifiers.org/brain-bican/anatomical-structure-schema',
         'slot_usage': {'ordinal': {'description': 'Ordinal of the parcellation term '
                                                   'among other terms within the '
                                                   'context of the associated  '
                                                   'parcellation terminology.',
                                    'name': 'ordinal'}}})

    ordinal: Optional[int] = Field(default=None, description="""Ordinal of the parcellation term among other terms within the context of the associated  parcellation terminology.""", ge=0, json_schema_extra = { "linkml_meta": {'alias': 'ordinal', 'domain_of': ['ParcellationTermSet', 'ParcellationTerm']} })
    symbol: Optional[str] = Field(default=None, description="""Symbol representing a parcellation term.""", json_schema_extra = { "linkml_meta": {'alias': 'symbol', 'domain_of': ['gene', 'ParcellationTerm']} })
    part_of_parcellation_term_set: str = Field(default=..., description="""Reference to the parcellation term set for which the parcellation term is part of.""", json_schema_extra = { "linkml_meta": {'alias': 'part_of_parcellation_term_set',
         'any_of': [{'range': 'ParcellationTermSet'}, {'range': 'string'}],
         'domain_of': ['ParcellationTerm']} })
    has_parent_parcellation_term: Optional[str] = Field(default=None, description="""Reference to the parent parcellation term for which the parcellation term is a child ( spatially part) of""", json_schema_extra = { "linkml_meta": {'alias': 'has_parent_parcellation_term',
         'any_of': [{'range': 'ParcellationTerm'}, {'range': 'string'}],
         'domain_of': ['ParcellationTerm']} })
    version: str = Field(default=..., json_schema_extra = { "linkml_meta": {'alias': 'version',
         'broad_mappings': ['pav:version', 'owl:versionInfo'],
         'definition_uri': 'https://w3id.org/biolink/vocab/version',
         'domain': 'dataset',
         'domain_of': ['VersionedNamedThing', 'GenomeAnnotation', 'GenomeAssembly'],
         'is_a': 'node property',
         'slot_uri': 'biolink:version'} })
    revision_of: Optional[str] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'revision_of', 'domain_of': ['VersionedNamedThing']} })
    id: str = Field(default=..., description="""A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })
    iri: Optional[str] = Field(default=None, description="""An IRI for an entity. This is determined by the id using expansion rules.""", json_schema_extra = { "linkml_meta": {'alias': 'iri',
         'definition_uri': 'https://w3id.org/biolink/vocab/iri',
         'domain_of': ['attribute',
                       'entity',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P854'],
         'in_subset': ['translator_minimal', 'samples'],
         'slot_uri': 'biolink:iri'} })
    category: List[Literal["https://identifiers.org/brain-bican/vocab/ParcellationTerm","bican:ParcellationTerm"]] = Field(default=["bican:ParcellationTerm"], description="""Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}.""", json_schema_extra = { "linkml_meta": {'alias': 'category',
         'definition_uri': 'https://w3id.org/biolink/vocab/category',
         'designates_type': True,
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'type',
         'is_class_field': True,
         'slot_uri': 'biolink:category'} })
    type: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'type',
         'definition_uri': 'https://w3id.org/biolink/vocab/type',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['gff3:type', 'gpi:DB_Object_Type'],
         'mappings': ['rdf:type'],
         'slot_uri': 'rdf:type'} })
    name: Optional[str] = Field(default=None, description="""A human-readable name for an attribute or entity.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })
    description: Optional[str] = Field(default=None, description="""a human-readable description of an entity""", json_schema_extra = { "linkml_meta": {'alias': 'description',
         'aliases': ['definition'],
         'definition_uri': 'https://w3id.org/biolink/vocab/description',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'ColorPalette'],
         'exact_mappings': ['IAO:0000115', 'skos:definitions'],
         'in_subset': ['translator_minimal'],
         'mappings': ['dct:description'],
         'narrow_mappings': ['gff3:Description'],
         'slot_uri': 'dct:description'} })
    has_attribute: Optional[List[str]] = Field(default=None, description="""connects any entity to an attribute""", json_schema_extra = { "linkml_meta": {'alias': 'has_attribute',
         'close_mappings': ['OBI:0001927'],
         'definition_uri': 'https://w3id.org/biolink/vocab/has_attribute',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['SIO:000008'],
         'in_subset': ['samples'],
         'narrow_mappings': ['OBAN:association_has_subject_property',
                             'OBAN:association_has_object_property',
                             'CPT:has_possibly_included_panel_element',
                             'DRUGBANK:category',
                             'EFO:is_executed_in',
                             'HANCESTRO:0301',
                             'LOINC:has_action_guidance',
                             'LOINC:has_adjustment',
                             'LOINC:has_aggregation_view',
                             'LOINC:has_approach_guidance',
                             'LOINC:has_divisor',
                             'LOINC:has_exam',
                             'LOINC:has_method',
                             'LOINC:has_modality_subtype',
                             'LOINC:has_object_guidance',
                             'LOINC:has_scale',
                             'LOINC:has_suffix',
                             'LOINC:has_time_aspect',
                             'LOINC:has_time_modifier',
                             'LOINC:has_timing_of',
                             'NCIT:R88',
                             'NCIT:eo_disease_has_property_or_attribute',
                             'NCIT:has_data_element',
                             'NCIT:has_pharmaceutical_administration_method',
                             'NCIT:has_pharmaceutical_basic_dose_form',
                             'NCIT:has_pharmaceutical_intended_site',
                             'NCIT:has_pharmaceutical_release_characteristics',
                             'NCIT:has_pharmaceutical_state_of_matter',
                             'NCIT:has_pharmaceutical_transformation',
                             'NCIT:is_qualified_by',
                             'NCIT:qualifier_applies_to',
                             'NCIT:role_has_domain',
                             'NCIT:role_has_range',
                             'INO:0000154',
                             'HANCESTRO:0308',
                             'OMIM:has_inheritance_type',
                             'orphanet:C016',
                             'orphanet:C017',
                             'RO:0000053',
                             'RO:0000086',
                             'RO:0000087',
                             'SNOMED:has_access',
                             'SNOMED:has_clinical_course',
                             'SNOMED:has_count_of_base_of_active_ingredient',
                             'SNOMED:has_dose_form_administration_method',
                             'SNOMED:has_dose_form_release_characteristic',
                             'SNOMED:has_dose_form_transformation',
                             'SNOMED:has_finding_context',
                             'SNOMED:has_finding_informer',
                             'SNOMED:has_inherent_attribute',
                             'SNOMED:has_intent',
                             'SNOMED:has_interpretation',
                             'SNOMED:has_laterality',
                             'SNOMED:has_measurement_method',
                             'SNOMED:has_method',
                             'SNOMED:has_priority',
                             'SNOMED:has_procedure_context',
                             'SNOMED:has_process_duration',
                             'SNOMED:has_property',
                             'SNOMED:has_revision_status',
                             'SNOMED:has_scale_type',
                             'SNOMED:has_severity',
                             'SNOMED:has_specimen',
                             'SNOMED:has_state_of_matter',
                             'SNOMED:has_subject_relationship_context',
                             'SNOMED:has_surgical_approach',
                             'SNOMED:has_technique',
                             'SNOMED:has_temporal_context',
                             'SNOMED:has_time_aspect',
                             'SNOMED:has_units',
                             'UMLS:has_structural_class',
                             'UMLS:has_supported_concept_property',
                             'UMLS:has_supported_concept_relationship',
                             'UMLS:may_be_qualified_by'],
         'slot_uri': 'biolink:has_attribute'} })
    deprecated: Optional[bool] = Field(default=None, description="""A boolean flag indicating that an entity is no longer considered current or valid.""", json_schema_extra = { "linkml_meta": {'alias': 'deprecated',
         'definition_uri': 'https://w3id.org/biolink/vocab/deprecated',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['oboInOwl:ObsoleteClass'],
         'slot_uri': 'biolink:deprecated'} })
    provided_by: Optional[List[str]] = Field(default=None, description="""The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.""", json_schema_extra = { "linkml_meta": {'alias': 'provided_by',
         'definition_uri': 'https://w3id.org/biolink/vocab/provided_by',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:provided_by'} })
    xref: Optional[List[str]] = Field(default=None, description="""A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.""", json_schema_extra = { "linkml_meta": {'alias': 'xref',
         'aliases': ['dbxref', 'Dbxref', 'DbXref', 'record_url', 'source_record_urls'],
         'definition_uri': 'https://w3id.org/biolink/vocab/xref',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'gene',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ObservationMatrix',
                       'ObservationRow',
                       'Abbreviation',
                       'MatrixFile',
                       'ColorPalette',
                       'DisplayColor'],
         'in_subset': ['translator_minimal'],
         'narrow_mappings': ['gff3:Dbxref', 'gpi:DB_Xrefs'],
         'slot_uri': 'biolink:xref'} })
    full_name: Optional[str] = Field(default=None, description="""a long-form human readable name for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'full_name',
         'definition_uri': 'https://w3id.org/biolink/vocab/full_name',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:full_name'} })
    synonym: Optional[List[str]] = Field(default=None, description="""Alternate human-readable names for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'synonym',
         'aliases': ['alias'],
         'definition_uri': 'https://w3id.org/biolink/vocab/synonym',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'narrow_mappings': ['skos:altLabel',
                             'gff3:Alias',
                             'AGRKB:synonyms',
                             'gpi:DB_Object_Synonyms',
                             'HANCESTRO:0330',
                             'IAO:0000136',
                             'RXNORM:has_tradename'],
         'slot_uri': 'biolink:synonym'} })


class ParcellationColorScheme(VersionedNamedThing):
    """
    A parcellation color scheme is a versioned release color palette that can be used to visualize a  parcellation terminology or its related parcellation annotation. A parcellation terminology may  have zero or more parcellation color schemes and each color scheme is in context of a specific  parcellation terminology, where each parcellation term is assigned a hex color value. A parcellation  color scheme is defined as a part of one and only one parcellation terminology.
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'from_schema': 'https://identifiers.org/brain-bican/anatomical-structure-schema',
         'slot_usage': {'revision_of': {'any_of': [{'range': 'ParcellationColorScheme'},
                                                   {'range': 'string'}],
                                        'name': 'revision_of'}}})

    subject_parcellation_terminology: str = Field(default=..., description="""Reference to the parcellation terminology for which the parcellation color scheme is in  context of.""", json_schema_extra = { "linkml_meta": {'alias': 'subject_parcellation_terminology',
         'any_of': [{'range': 'ParcellationTerminology'}, {'range': 'string'}],
         'domain_of': ['ParcellationColorScheme']} })
    version: str = Field(default=..., json_schema_extra = { "linkml_meta": {'alias': 'version',
         'broad_mappings': ['pav:version', 'owl:versionInfo'],
         'definition_uri': 'https://w3id.org/biolink/vocab/version',
         'domain': 'dataset',
         'domain_of': ['VersionedNamedThing', 'GenomeAnnotation', 'GenomeAssembly'],
         'is_a': 'node property',
         'slot_uri': 'biolink:version'} })
    revision_of: Optional[str] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'revision_of',
         'any_of': [{'range': 'ParcellationColorScheme'}, {'range': 'string'}],
         'domain_of': ['VersionedNamedThing']} })
    id: str = Field(default=..., description="""A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })
    iri: Optional[str] = Field(default=None, description="""An IRI for an entity. This is determined by the id using expansion rules.""", json_schema_extra = { "linkml_meta": {'alias': 'iri',
         'definition_uri': 'https://w3id.org/biolink/vocab/iri',
         'domain_of': ['attribute',
                       'entity',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P854'],
         'in_subset': ['translator_minimal', 'samples'],
         'slot_uri': 'biolink:iri'} })
    category: List[Literal["https://identifiers.org/brain-bican/vocab/ParcellationColorScheme","bican:ParcellationColorScheme"]] = Field(default=["bican:ParcellationColorScheme"], description="""Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}.""", json_schema_extra = { "linkml_meta": {'alias': 'category',
         'definition_uri': 'https://w3id.org/biolink/vocab/category',
         'designates_type': True,
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'type',
         'is_class_field': True,
         'slot_uri': 'biolink:category'} })
    type: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'type',
         'definition_uri': 'https://w3id.org/biolink/vocab/type',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['gff3:type', 'gpi:DB_Object_Type'],
         'mappings': ['rdf:type'],
         'slot_uri': 'rdf:type'} })
    name: Optional[str] = Field(default=None, description="""A human-readable name for an attribute or entity.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })
    description: Optional[str] = Field(default=None, description="""a human-readable description of an entity""", json_schema_extra = { "linkml_meta": {'alias': 'description',
         'aliases': ['definition'],
         'definition_uri': 'https://w3id.org/biolink/vocab/description',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'ColorPalette'],
         'exact_mappings': ['IAO:0000115', 'skos:definitions'],
         'in_subset': ['translator_minimal'],
         'mappings': ['dct:description'],
         'narrow_mappings': ['gff3:Description'],
         'slot_uri': 'dct:description'} })
    has_attribute: Optional[List[str]] = Field(default=None, description="""connects any entity to an attribute""", json_schema_extra = { "linkml_meta": {'alias': 'has_attribute',
         'close_mappings': ['OBI:0001927'],
         'definition_uri': 'https://w3id.org/biolink/vocab/has_attribute',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['SIO:000008'],
         'in_subset': ['samples'],
         'narrow_mappings': ['OBAN:association_has_subject_property',
                             'OBAN:association_has_object_property',
                             'CPT:has_possibly_included_panel_element',
                             'DRUGBANK:category',
                             'EFO:is_executed_in',
                             'HANCESTRO:0301',
                             'LOINC:has_action_guidance',
                             'LOINC:has_adjustment',
                             'LOINC:has_aggregation_view',
                             'LOINC:has_approach_guidance',
                             'LOINC:has_divisor',
                             'LOINC:has_exam',
                             'LOINC:has_method',
                             'LOINC:has_modality_subtype',
                             'LOINC:has_object_guidance',
                             'LOINC:has_scale',
                             'LOINC:has_suffix',
                             'LOINC:has_time_aspect',
                             'LOINC:has_time_modifier',
                             'LOINC:has_timing_of',
                             'NCIT:R88',
                             'NCIT:eo_disease_has_property_or_attribute',
                             'NCIT:has_data_element',
                             'NCIT:has_pharmaceutical_administration_method',
                             'NCIT:has_pharmaceutical_basic_dose_form',
                             'NCIT:has_pharmaceutical_intended_site',
                             'NCIT:has_pharmaceutical_release_characteristics',
                             'NCIT:has_pharmaceutical_state_of_matter',
                             'NCIT:has_pharmaceutical_transformation',
                             'NCIT:is_qualified_by',
                             'NCIT:qualifier_applies_to',
                             'NCIT:role_has_domain',
                             'NCIT:role_has_range',
                             'INO:0000154',
                             'HANCESTRO:0308',
                             'OMIM:has_inheritance_type',
                             'orphanet:C016',
                             'orphanet:C017',
                             'RO:0000053',
                             'RO:0000086',
                             'RO:0000087',
                             'SNOMED:has_access',
                             'SNOMED:has_clinical_course',
                             'SNOMED:has_count_of_base_of_active_ingredient',
                             'SNOMED:has_dose_form_administration_method',
                             'SNOMED:has_dose_form_release_characteristic',
                             'SNOMED:has_dose_form_transformation',
                             'SNOMED:has_finding_context',
                             'SNOMED:has_finding_informer',
                             'SNOMED:has_inherent_attribute',
                             'SNOMED:has_intent',
                             'SNOMED:has_interpretation',
                             'SNOMED:has_laterality',
                             'SNOMED:has_measurement_method',
                             'SNOMED:has_method',
                             'SNOMED:has_priority',
                             'SNOMED:has_procedure_context',
                             'SNOMED:has_process_duration',
                             'SNOMED:has_property',
                             'SNOMED:has_revision_status',
                             'SNOMED:has_scale_type',
                             'SNOMED:has_severity',
                             'SNOMED:has_specimen',
                             'SNOMED:has_state_of_matter',
                             'SNOMED:has_subject_relationship_context',
                             'SNOMED:has_surgical_approach',
                             'SNOMED:has_technique',
                             'SNOMED:has_temporal_context',
                             'SNOMED:has_time_aspect',
                             'SNOMED:has_units',
                             'UMLS:has_structural_class',
                             'UMLS:has_supported_concept_property',
                             'UMLS:has_supported_concept_relationship',
                             'UMLS:may_be_qualified_by'],
         'slot_uri': 'biolink:has_attribute'} })
    deprecated: Optional[bool] = Field(default=None, description="""A boolean flag indicating that an entity is no longer considered current or valid.""", json_schema_extra = { "linkml_meta": {'alias': 'deprecated',
         'definition_uri': 'https://w3id.org/biolink/vocab/deprecated',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['oboInOwl:ObsoleteClass'],
         'slot_uri': 'biolink:deprecated'} })
    provided_by: Optional[List[str]] = Field(default=None, description="""The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.""", json_schema_extra = { "linkml_meta": {'alias': 'provided_by',
         'definition_uri': 'https://w3id.org/biolink/vocab/provided_by',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:provided_by'} })
    xref: Optional[List[str]] = Field(default=None, description="""A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.""", json_schema_extra = { "linkml_meta": {'alias': 'xref',
         'aliases': ['dbxref', 'Dbxref', 'DbXref', 'record_url', 'source_record_urls'],
         'definition_uri': 'https://w3id.org/biolink/vocab/xref',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'gene',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ObservationMatrix',
                       'ObservationRow',
                       'Abbreviation',
                       'MatrixFile',
                       'ColorPalette',
                       'DisplayColor'],
         'in_subset': ['translator_minimal'],
         'narrow_mappings': ['gff3:Dbxref', 'gpi:DB_Xrefs'],
         'slot_uri': 'biolink:xref'} })
    full_name: Optional[str] = Field(default=None, description="""a long-form human readable name for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'full_name',
         'definition_uri': 'https://w3id.org/biolink/vocab/full_name',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:full_name'} })
    synonym: Optional[List[str]] = Field(default=None, description="""Alternate human-readable names for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'synonym',
         'aliases': ['alias'],
         'definition_uri': 'https://w3id.org/biolink/vocab/synonym',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'narrow_mappings': ['skos:altLabel',
                             'gff3:Alias',
                             'AGRKB:synonyms',
                             'gpi:DB_Object_Synonyms',
                             'HANCESTRO:0330',
                             'IAO:0000136',
                             'RXNORM:has_tradename'],
         'slot_uri': 'biolink:synonym'} })


class ParcellationColorAssignment(ConfiguredBaseModel):
    """
    The parcellation color assignment associates hex color value to a parcellation term within a  versioned release of a color scheme. A parcellation term is uniquely denoted by a parcellation  term identifier and the parcellation terminology it belongs to.
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'from_schema': 'https://identifiers.org/brain-bican/anatomical-structure-schema'})

    subject_parcellation_term: str = Field(default=..., description="""Reference to the parcellation term that is the subject of the association.""", json_schema_extra = { "linkml_meta": {'alias': 'subject_parcellation_term',
         'any_of': [{'range': 'ParcellationTerm'}, {'range': 'string'}],
         'domain_of': ['ParcellationColorAssignment', 'ParcellationAnnotationTermMap']} })
    part_of_parcellation_color_scheme: str = Field(default=..., description="""Reference to the parcellation color scheme for which the color assignment is part of.""", json_schema_extra = { "linkml_meta": {'alias': 'part_of_parcellation_color_scheme',
         'any_of': [{'range': 'ParcellationColorScheme'}, {'range': 'string'}],
         'domain_of': ['ParcellationColorAssignment']} })
    color: Optional[str] = Field(default=None, description="""A string representing to hex triplet code of a color""", json_schema_extra = { "linkml_meta": {'alias': 'color',
         'domain_of': ['ParcellationColorAssignment'],
         'structured_pattern': {'syntax': '{ColorHexTriplet}'}} })


class AnatomicalAnnotationSet(VersionedNamedThing):
    """
    An anatomical annotation set is a versioned release of a set of anatomical annotations anchored  in the same anatomical space that divides the space into distinct segments following some annotation  criteria or parcellation scheme. For example, the anatomical annotation set of 3D image based  reference atlases (e.g. Allen Mouse CCF) can be expressed as a set of label indices of single  multi-valued image annotations or as a set of segmentation masks (ref: ILX:0777108, RRID:SCR_023499)
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'from_schema': 'https://identifiers.org/brain-bican/anatomical-structure-schema',
         'slot_usage': {'revision_of': {'any_of': [{'range': 'AnatomicalAnnotationSet'},
                                                   {'range': 'string'}],
                                        'name': 'revision_of'}}})

    parameterizes: str = Field(default=..., description="""Reference to the anatomical space for which the anatomical annotation set is anchored""", json_schema_extra = { "linkml_meta": {'alias': 'parameterizes',
         'any_of': [{'range': 'AnatomicalSpace'}, {'range': 'string'}],
         'domain_of': ['AnatomicalAnnotationSet']} })
    version: str = Field(default=..., json_schema_extra = { "linkml_meta": {'alias': 'version',
         'broad_mappings': ['pav:version', 'owl:versionInfo'],
         'definition_uri': 'https://w3id.org/biolink/vocab/version',
         'domain': 'dataset',
         'domain_of': ['VersionedNamedThing', 'GenomeAnnotation', 'GenomeAssembly'],
         'is_a': 'node property',
         'slot_uri': 'biolink:version'} })
    revision_of: Optional[str] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'revision_of',
         'any_of': [{'range': 'AnatomicalAnnotationSet'}, {'range': 'string'}],
         'domain_of': ['VersionedNamedThing']} })
    id: str = Field(default=..., description="""A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })
    iri: Optional[str] = Field(default=None, description="""An IRI for an entity. This is determined by the id using expansion rules.""", json_schema_extra = { "linkml_meta": {'alias': 'iri',
         'definition_uri': 'https://w3id.org/biolink/vocab/iri',
         'domain_of': ['attribute',
                       'entity',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P854'],
         'in_subset': ['translator_minimal', 'samples'],
         'slot_uri': 'biolink:iri'} })
    category: List[Literal["https://identifiers.org/brain-bican/vocab/AnatomicalAnnotationSet","bican:AnatomicalAnnotationSet"]] = Field(default=["bican:AnatomicalAnnotationSet"], description="""Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}.""", json_schema_extra = { "linkml_meta": {'alias': 'category',
         'definition_uri': 'https://w3id.org/biolink/vocab/category',
         'designates_type': True,
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'type',
         'is_class_field': True,
         'slot_uri': 'biolink:category'} })
    type: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'type',
         'definition_uri': 'https://w3id.org/biolink/vocab/type',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['gff3:type', 'gpi:DB_Object_Type'],
         'mappings': ['rdf:type'],
         'slot_uri': 'rdf:type'} })
    name: Optional[str] = Field(default=None, description="""A human-readable name for an attribute or entity.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })
    description: Optional[str] = Field(default=None, description="""a human-readable description of an entity""", json_schema_extra = { "linkml_meta": {'alias': 'description',
         'aliases': ['definition'],
         'definition_uri': 'https://w3id.org/biolink/vocab/description',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'ColorPalette'],
         'exact_mappings': ['IAO:0000115', 'skos:definitions'],
         'in_subset': ['translator_minimal'],
         'mappings': ['dct:description'],
         'narrow_mappings': ['gff3:Description'],
         'slot_uri': 'dct:description'} })
    has_attribute: Optional[List[str]] = Field(default=None, description="""connects any entity to an attribute""", json_schema_extra = { "linkml_meta": {'alias': 'has_attribute',
         'close_mappings': ['OBI:0001927'],
         'definition_uri': 'https://w3id.org/biolink/vocab/has_attribute',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['SIO:000008'],
         'in_subset': ['samples'],
         'narrow_mappings': ['OBAN:association_has_subject_property',
                             'OBAN:association_has_object_property',
                             'CPT:has_possibly_included_panel_element',
                             'DRUGBANK:category',
                             'EFO:is_executed_in',
                             'HANCESTRO:0301',
                             'LOINC:has_action_guidance',
                             'LOINC:has_adjustment',
                             'LOINC:has_aggregation_view',
                             'LOINC:has_approach_guidance',
                             'LOINC:has_divisor',
                             'LOINC:has_exam',
                             'LOINC:has_method',
                             'LOINC:has_modality_subtype',
                             'LOINC:has_object_guidance',
                             'LOINC:has_scale',
                             'LOINC:has_suffix',
                             'LOINC:has_time_aspect',
                             'LOINC:has_time_modifier',
                             'LOINC:has_timing_of',
                             'NCIT:R88',
                             'NCIT:eo_disease_has_property_or_attribute',
                             'NCIT:has_data_element',
                             'NCIT:has_pharmaceutical_administration_method',
                             'NCIT:has_pharmaceutical_basic_dose_form',
                             'NCIT:has_pharmaceutical_intended_site',
                             'NCIT:has_pharmaceutical_release_characteristics',
                             'NCIT:has_pharmaceutical_state_of_matter',
                             'NCIT:has_pharmaceutical_transformation',
                             'NCIT:is_qualified_by',
                             'NCIT:qualifier_applies_to',
                             'NCIT:role_has_domain',
                             'NCIT:role_has_range',
                             'INO:0000154',
                             'HANCESTRO:0308',
                             'OMIM:has_inheritance_type',
                             'orphanet:C016',
                             'orphanet:C017',
                             'RO:0000053',
                             'RO:0000086',
                             'RO:0000087',
                             'SNOMED:has_access',
                             'SNOMED:has_clinical_course',
                             'SNOMED:has_count_of_base_of_active_ingredient',
                             'SNOMED:has_dose_form_administration_method',
                             'SNOMED:has_dose_form_release_characteristic',
                             'SNOMED:has_dose_form_transformation',
                             'SNOMED:has_finding_context',
                             'SNOMED:has_finding_informer',
                             'SNOMED:has_inherent_attribute',
                             'SNOMED:has_intent',
                             'SNOMED:has_interpretation',
                             'SNOMED:has_laterality',
                             'SNOMED:has_measurement_method',
                             'SNOMED:has_method',
                             'SNOMED:has_priority',
                             'SNOMED:has_procedure_context',
                             'SNOMED:has_process_duration',
                             'SNOMED:has_property',
                             'SNOMED:has_revision_status',
                             'SNOMED:has_scale_type',
                             'SNOMED:has_severity',
                             'SNOMED:has_specimen',
                             'SNOMED:has_state_of_matter',
                             'SNOMED:has_subject_relationship_context',
                             'SNOMED:has_surgical_approach',
                             'SNOMED:has_technique',
                             'SNOMED:has_temporal_context',
                             'SNOMED:has_time_aspect',
                             'SNOMED:has_units',
                             'UMLS:has_structural_class',
                             'UMLS:has_supported_concept_property',
                             'UMLS:has_supported_concept_relationship',
                             'UMLS:may_be_qualified_by'],
         'slot_uri': 'biolink:has_attribute'} })
    deprecated: Optional[bool] = Field(default=None, description="""A boolean flag indicating that an entity is no longer considered current or valid.""", json_schema_extra = { "linkml_meta": {'alias': 'deprecated',
         'definition_uri': 'https://w3id.org/biolink/vocab/deprecated',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['oboInOwl:ObsoleteClass'],
         'slot_uri': 'biolink:deprecated'} })
    provided_by: Optional[List[str]] = Field(default=None, description="""The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.""", json_schema_extra = { "linkml_meta": {'alias': 'provided_by',
         'definition_uri': 'https://w3id.org/biolink/vocab/provided_by',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:provided_by'} })
    xref: Optional[List[str]] = Field(default=None, description="""A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.""", json_schema_extra = { "linkml_meta": {'alias': 'xref',
         'aliases': ['dbxref', 'Dbxref', 'DbXref', 'record_url', 'source_record_urls'],
         'definition_uri': 'https://w3id.org/biolink/vocab/xref',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'gene',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ObservationMatrix',
                       'ObservationRow',
                       'Abbreviation',
                       'MatrixFile',
                       'ColorPalette',
                       'DisplayColor'],
         'in_subset': ['translator_minimal'],
         'narrow_mappings': ['gff3:Dbxref', 'gpi:DB_Xrefs'],
         'slot_uri': 'biolink:xref'} })
    full_name: Optional[str] = Field(default=None, description="""a long-form human readable name for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'full_name',
         'definition_uri': 'https://w3id.org/biolink/vocab/full_name',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:full_name'} })
    synonym: Optional[List[str]] = Field(default=None, description="""Alternate human-readable names for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'synonym',
         'aliases': ['alias'],
         'definition_uri': 'https://w3id.org/biolink/vocab/synonym',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'narrow_mappings': ['skos:altLabel',
                             'gff3:Alias',
                             'AGRKB:synonyms',
                             'gpi:DB_Object_Synonyms',
                             'HANCESTRO:0330',
                             'IAO:0000136',
                             'RXNORM:has_tradename'],
         'slot_uri': 'biolink:synonym'} })


class ParcellationAnnotation(ConfiguredBaseModel):
    """
    A parcellation annotation defines a specific segment of an anatomical space denoted by an internal  identifier and is a unique and exclusive member of a versioned release anatomical annotation set.  For example, in the case where the anatomical annotation set is a single multi-value image mask (e.g. Allen Mouse CCF), a specific annotation corresponds to a specific label index (internal identifier) in the mask.
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'from_schema': 'https://identifiers.org/brain-bican/anatomical-structure-schema'})

    part_of_anatomical_annotation_set: str = Field(default=..., json_schema_extra = { "linkml_meta": {'alias': 'part_of_anatomical_annotation_set',
         'any_of': [{'range': 'AnatomicalAnnotationSet'}, {'range': 'string'}],
         'domain_of': ['ParcellationAnnotation']} })
    internal_identifier: str = Field(default=..., description="""An identifier that uniquely denotes a specific parcellation annotation within the context of an anatomical annotation set""", json_schema_extra = { "linkml_meta": {'alias': 'internal_identifier', 'domain_of': ['ParcellationAnnotation']} })
    voxel_count: Optional[int] = Field(default=None, description="""The number of voxels (3D pixels) spanned by the parcellation annotation (optional).""", ge=0, json_schema_extra = { "linkml_meta": {'alias': 'voxel_count', 'domain_of': ['ParcellationAnnotation']} })


class ParcellationAnnotationTermMap(ConfiguredBaseModel):
    """
    The parcellation annotation term map table defines the relationship between parcellation annotations and parcellation terms.  A parcellation term is uniquely denoted by a parcellation term identifier and the parcellation terminology it belongs to.  A parcellation term can be spatially parameterized by the union of one or more parcellation annotations within a versioned  release of an anatomical annotation set. For example, annotations defining individual cortical layers in cortical region  R (R1, R2/3, R4, etc) can be combined to define the parent region R.
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'from_schema': 'https://identifiers.org/brain-bican/anatomical-structure-schema'})

    subject_parcellation_term: str = Field(default=..., description="""Reference to the parcellation term that is the subject of the association.""", json_schema_extra = { "linkml_meta": {'alias': 'subject_parcellation_term',
         'any_of': [{'range': 'ParcellationTerm'}, {'range': 'string'}],
         'domain_of': ['ParcellationColorAssignment', 'ParcellationAnnotationTermMap']} })
    subject_parcellation_annotation: Union[ParcellationAnnotation, str] = Field(default=..., description="""Reference to the parcellation annotation that is the subject of the association.""", json_schema_extra = { "linkml_meta": {'alias': 'subject_parcellation_annotation',
         'any_of': [{'range': 'ParcellationAnnotation'}, {'range': 'string'}],
         'domain_of': ['ParcellationAnnotationTermMap']} })


class ParcellationAtlas(VersionedNamedThing):
    """
    A parcellation atlas is a versioned release reference used to guide experiments or deal with the spatial relationship between  objects or the location of objects within the context of some anatomical structure. An atlas is minimally defined by a notion  of space (either implicit or explicit) and an annotation set. Reference atlases usually have additional parts that make them  more useful in certain situations, such as a well defined coordinate system, delineations indicating the boundaries of various  regions or cell populations, landmarks, and labels and names to make it easier to communicate about well known and useful  locations (ref: ILX:0777109, RRID:SCR_023499).
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'from_schema': 'https://identifiers.org/brain-bican/anatomical-structure-schema',
         'slot_usage': {'revision_of': {'any_of': [{'range': 'ParcellationAtlas'},
                                                   {'range': 'string'}],
                                        'name': 'revision_of'}}})

    has_anatomical_space: str = Field(default=..., description="""Reference to the anatomical space component of the parcellation atlas""", json_schema_extra = { "linkml_meta": {'alias': 'has_anatomical_space',
         'any_of': [{'range': 'AnatomicalSpace'}, {'range': 'string'}],
         'domain_of': ['ParcellationAtlas']} })
    has_anatomical_annotation_set: str = Field(default=..., description="""Reference to the anatomical annotation set component of the parcellation atlas""", json_schema_extra = { "linkml_meta": {'alias': 'has_anatomical_annotation_set',
         'any_of': [{'range': 'AnatomicalAnnotationSet'}, {'range': 'string'}],
         'domain_of': ['ParcellationAtlas']} })
    has_parcellation_terminology: str = Field(default=..., description="""Reference to the parcellation terminology component of the parcellation atlas""", json_schema_extra = { "linkml_meta": {'alias': 'has_parcellation_terminology',
         'any_of': [{'range': 'ParcellationTerminology'}, {'range': 'string'}],
         'domain_of': ['ParcellationAtlas']} })
    specialization_of: Optional[str] = Field(default=None, description="""Reference to the general (non versioned) parcellation atlas for which the parcellation atlas is a specific  version release of.""", json_schema_extra = { "linkml_meta": {'alias': 'specialization_of',
         'any_of': [{'range': 'ParcellationAtlas'}, {'range': 'string'}],
         'domain_of': ['ParcellationAtlas']} })
    version: str = Field(default=..., json_schema_extra = { "linkml_meta": {'alias': 'version',
         'broad_mappings': ['pav:version', 'owl:versionInfo'],
         'definition_uri': 'https://w3id.org/biolink/vocab/version',
         'domain': 'dataset',
         'domain_of': ['VersionedNamedThing', 'GenomeAnnotation', 'GenomeAssembly'],
         'is_a': 'node property',
         'slot_uri': 'biolink:version'} })
    revision_of: Optional[str] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'revision_of',
         'any_of': [{'range': 'ParcellationAtlas'}, {'range': 'string'}],
         'domain_of': ['VersionedNamedThing']} })
    id: str = Field(default=..., description="""A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })
    iri: Optional[str] = Field(default=None, description="""An IRI for an entity. This is determined by the id using expansion rules.""", json_schema_extra = { "linkml_meta": {'alias': 'iri',
         'definition_uri': 'https://w3id.org/biolink/vocab/iri',
         'domain_of': ['attribute',
                       'entity',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P854'],
         'in_subset': ['translator_minimal', 'samples'],
         'slot_uri': 'biolink:iri'} })
    category: List[Literal["https://identifiers.org/brain-bican/vocab/ParcellationAtlas","bican:ParcellationAtlas"]] = Field(default=["bican:ParcellationAtlas"], description="""Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}.""", json_schema_extra = { "linkml_meta": {'alias': 'category',
         'definition_uri': 'https://w3id.org/biolink/vocab/category',
         'designates_type': True,
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'type',
         'is_class_field': True,
         'slot_uri': 'biolink:category'} })
    type: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'type',
         'definition_uri': 'https://w3id.org/biolink/vocab/type',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['gff3:type', 'gpi:DB_Object_Type'],
         'mappings': ['rdf:type'],
         'slot_uri': 'rdf:type'} })
    name: Optional[str] = Field(default=None, description="""A human-readable name for an attribute or entity.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })
    description: Optional[str] = Field(default=None, description="""a human-readable description of an entity""", json_schema_extra = { "linkml_meta": {'alias': 'description',
         'aliases': ['definition'],
         'definition_uri': 'https://w3id.org/biolink/vocab/description',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'ColorPalette'],
         'exact_mappings': ['IAO:0000115', 'skos:definitions'],
         'in_subset': ['translator_minimal'],
         'mappings': ['dct:description'],
         'narrow_mappings': ['gff3:Description'],
         'slot_uri': 'dct:description'} })
    has_attribute: Optional[List[str]] = Field(default=None, description="""connects any entity to an attribute""", json_schema_extra = { "linkml_meta": {'alias': 'has_attribute',
         'close_mappings': ['OBI:0001927'],
         'definition_uri': 'https://w3id.org/biolink/vocab/has_attribute',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['SIO:000008'],
         'in_subset': ['samples'],
         'narrow_mappings': ['OBAN:association_has_subject_property',
                             'OBAN:association_has_object_property',
                             'CPT:has_possibly_included_panel_element',
                             'DRUGBANK:category',
                             'EFO:is_executed_in',
                             'HANCESTRO:0301',
                             'LOINC:has_action_guidance',
                             'LOINC:has_adjustment',
                             'LOINC:has_aggregation_view',
                             'LOINC:has_approach_guidance',
                             'LOINC:has_divisor',
                             'LOINC:has_exam',
                             'LOINC:has_method',
                             'LOINC:has_modality_subtype',
                             'LOINC:has_object_guidance',
                             'LOINC:has_scale',
                             'LOINC:has_suffix',
                             'LOINC:has_time_aspect',
                             'LOINC:has_time_modifier',
                             'LOINC:has_timing_of',
                             'NCIT:R88',
                             'NCIT:eo_disease_has_property_or_attribute',
                             'NCIT:has_data_element',
                             'NCIT:has_pharmaceutical_administration_method',
                             'NCIT:has_pharmaceutical_basic_dose_form',
                             'NCIT:has_pharmaceutical_intended_site',
                             'NCIT:has_pharmaceutical_release_characteristics',
                             'NCIT:has_pharmaceutical_state_of_matter',
                             'NCIT:has_pharmaceutical_transformation',
                             'NCIT:is_qualified_by',
                             'NCIT:qualifier_applies_to',
                             'NCIT:role_has_domain',
                             'NCIT:role_has_range',
                             'INO:0000154',
                             'HANCESTRO:0308',
                             'OMIM:has_inheritance_type',
                             'orphanet:C016',
                             'orphanet:C017',
                             'RO:0000053',
                             'RO:0000086',
                             'RO:0000087',
                             'SNOMED:has_access',
                             'SNOMED:has_clinical_course',
                             'SNOMED:has_count_of_base_of_active_ingredient',
                             'SNOMED:has_dose_form_administration_method',
                             'SNOMED:has_dose_form_release_characteristic',
                             'SNOMED:has_dose_form_transformation',
                             'SNOMED:has_finding_context',
                             'SNOMED:has_finding_informer',
                             'SNOMED:has_inherent_attribute',
                             'SNOMED:has_intent',
                             'SNOMED:has_interpretation',
                             'SNOMED:has_laterality',
                             'SNOMED:has_measurement_method',
                             'SNOMED:has_method',
                             'SNOMED:has_priority',
                             'SNOMED:has_procedure_context',
                             'SNOMED:has_process_duration',
                             'SNOMED:has_property',
                             'SNOMED:has_revision_status',
                             'SNOMED:has_scale_type',
                             'SNOMED:has_severity',
                             'SNOMED:has_specimen',
                             'SNOMED:has_state_of_matter',
                             'SNOMED:has_subject_relationship_context',
                             'SNOMED:has_surgical_approach',
                             'SNOMED:has_technique',
                             'SNOMED:has_temporal_context',
                             'SNOMED:has_time_aspect',
                             'SNOMED:has_units',
                             'UMLS:has_structural_class',
                             'UMLS:has_supported_concept_property',
                             'UMLS:has_supported_concept_relationship',
                             'UMLS:may_be_qualified_by'],
         'slot_uri': 'biolink:has_attribute'} })
    deprecated: Optional[bool] = Field(default=None, description="""A boolean flag indicating that an entity is no longer considered current or valid.""", json_schema_extra = { "linkml_meta": {'alias': 'deprecated',
         'definition_uri': 'https://w3id.org/biolink/vocab/deprecated',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['oboInOwl:ObsoleteClass'],
         'slot_uri': 'biolink:deprecated'} })
    provided_by: Optional[List[str]] = Field(default=None, description="""The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.""", json_schema_extra = { "linkml_meta": {'alias': 'provided_by',
         'definition_uri': 'https://w3id.org/biolink/vocab/provided_by',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:provided_by'} })
    xref: Optional[List[str]] = Field(default=None, description="""A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.""", json_schema_extra = { "linkml_meta": {'alias': 'xref',
         'aliases': ['dbxref', 'Dbxref', 'DbXref', 'record_url', 'source_record_urls'],
         'definition_uri': 'https://w3id.org/biolink/vocab/xref',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'gene',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ObservationMatrix',
                       'ObservationRow',
                       'Abbreviation',
                       'MatrixFile',
                       'ColorPalette',
                       'DisplayColor'],
         'in_subset': ['translator_minimal'],
         'narrow_mappings': ['gff3:Dbxref', 'gpi:DB_Xrefs'],
         'slot_uri': 'biolink:xref'} })
    full_name: Optional[str] = Field(default=None, description="""a long-form human readable name for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'full_name',
         'definition_uri': 'https://w3id.org/biolink/vocab/full_name',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:full_name'} })
    synonym: Optional[List[str]] = Field(default=None, description="""Alternate human-readable names for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'synonym',
         'aliases': ['alias'],
         'definition_uri': 'https://w3id.org/biolink/vocab/synonym',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'narrow_mappings': ['skos:altLabel',
                             'gff3:Alias',
                             'AGRKB:synonyms',
                             'gpi:DB_Object_Synonyms',
                             'HANCESTRO:0330',
                             'IAO:0000136',
                             'RXNORM:has_tradename'],
         'slot_uri': 'biolink:synonym'} })


class CellTypeTaxonomyCreationProcess(ProvActivity, Procedure):
    """
    The process of organizing cells or clusters into a systematic classification of cell types and their heirarchical relationships and groupings.
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'from_schema': 'https://w3id.org/brain-bican/bke-taxonomy',
         'mixins': ['ProvActivity'],
         'slot_usage': {'used': {'description': 'One of potentially many input cluster '
                                                'sets from which the cell type '
                                                'taxonomy is derived.',
                                 'from_schema': 'bican_prov',
                                 'multivalued': True,
                                 'name': 'used',
                                 'range': 'ClusterSet'}}})

    used: Optional[List[str]] = Field(default=None, description="""One of potentially many input cluster sets from which the cell type taxonomy is derived.""", json_schema_extra = { "linkml_meta": {'alias': 'used',
         'domain_of': ['ProvActivity',
                       'CellTypeTaxonomyCreationProcess',
                       'ClusteringProcess'],
         'slot_uri': 'prov:used'} })
    id: str = Field(default=..., description="""A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })
    iri: Optional[str] = Field(default=None, description="""An IRI for an entity. This is determined by the id using expansion rules.""", json_schema_extra = { "linkml_meta": {'alias': 'iri',
         'definition_uri': 'https://w3id.org/biolink/vocab/iri',
         'domain_of': ['attribute',
                       'entity',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P854'],
         'in_subset': ['translator_minimal', 'samples'],
         'slot_uri': 'biolink:iri'} })
    category: List[Literal["https://identifiers.org/brain-bican/vocab/CellTypeTaxonomyCreationProcess","bican:CellTypeTaxonomyCreationProcess"]] = Field(default=["bican:CellTypeTaxonomyCreationProcess"], description="""Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}.""", json_schema_extra = { "linkml_meta": {'alias': 'category',
         'definition_uri': 'https://w3id.org/biolink/vocab/category',
         'designates_type': True,
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'type',
         'is_class_field': True,
         'slot_uri': 'biolink:category'} })
    type: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'type',
         'definition_uri': 'https://w3id.org/biolink/vocab/type',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['gff3:type', 'gpi:DB_Object_Type'],
         'mappings': ['rdf:type'],
         'slot_uri': 'rdf:type'} })
    name: Optional[str] = Field(default=None, description="""A human-readable name for an attribute or entity.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })
    description: Optional[str] = Field(default=None, description="""a human-readable description of an entity""", json_schema_extra = { "linkml_meta": {'alias': 'description',
         'aliases': ['definition'],
         'definition_uri': 'https://w3id.org/biolink/vocab/description',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'ColorPalette'],
         'exact_mappings': ['IAO:0000115', 'skos:definitions'],
         'in_subset': ['translator_minimal'],
         'mappings': ['dct:description'],
         'narrow_mappings': ['gff3:Description'],
         'slot_uri': 'dct:description'} })
    has_attribute: Optional[List[str]] = Field(default=None, description="""connects any entity to an attribute""", json_schema_extra = { "linkml_meta": {'alias': 'has_attribute',
         'close_mappings': ['OBI:0001927'],
         'definition_uri': 'https://w3id.org/biolink/vocab/has_attribute',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['SIO:000008'],
         'in_subset': ['samples'],
         'narrow_mappings': ['OBAN:association_has_subject_property',
                             'OBAN:association_has_object_property',
                             'CPT:has_possibly_included_panel_element',
                             'DRUGBANK:category',
                             'EFO:is_executed_in',
                             'HANCESTRO:0301',
                             'LOINC:has_action_guidance',
                             'LOINC:has_adjustment',
                             'LOINC:has_aggregation_view',
                             'LOINC:has_approach_guidance',
                             'LOINC:has_divisor',
                             'LOINC:has_exam',
                             'LOINC:has_method',
                             'LOINC:has_modality_subtype',
                             'LOINC:has_object_guidance',
                             'LOINC:has_scale',
                             'LOINC:has_suffix',
                             'LOINC:has_time_aspect',
                             'LOINC:has_time_modifier',
                             'LOINC:has_timing_of',
                             'NCIT:R88',
                             'NCIT:eo_disease_has_property_or_attribute',
                             'NCIT:has_data_element',
                             'NCIT:has_pharmaceutical_administration_method',
                             'NCIT:has_pharmaceutical_basic_dose_form',
                             'NCIT:has_pharmaceutical_intended_site',
                             'NCIT:has_pharmaceutical_release_characteristics',
                             'NCIT:has_pharmaceutical_state_of_matter',
                             'NCIT:has_pharmaceutical_transformation',
                             'NCIT:is_qualified_by',
                             'NCIT:qualifier_applies_to',
                             'NCIT:role_has_domain',
                             'NCIT:role_has_range',
                             'INO:0000154',
                             'HANCESTRO:0308',
                             'OMIM:has_inheritance_type',
                             'orphanet:C016',
                             'orphanet:C017',
                             'RO:0000053',
                             'RO:0000086',
                             'RO:0000087',
                             'SNOMED:has_access',
                             'SNOMED:has_clinical_course',
                             'SNOMED:has_count_of_base_of_active_ingredient',
                             'SNOMED:has_dose_form_administration_method',
                             'SNOMED:has_dose_form_release_characteristic',
                             'SNOMED:has_dose_form_transformation',
                             'SNOMED:has_finding_context',
                             'SNOMED:has_finding_informer',
                             'SNOMED:has_inherent_attribute',
                             'SNOMED:has_intent',
                             'SNOMED:has_interpretation',
                             'SNOMED:has_laterality',
                             'SNOMED:has_measurement_method',
                             'SNOMED:has_method',
                             'SNOMED:has_priority',
                             'SNOMED:has_procedure_context',
                             'SNOMED:has_process_duration',
                             'SNOMED:has_property',
                             'SNOMED:has_revision_status',
                             'SNOMED:has_scale_type',
                             'SNOMED:has_severity',
                             'SNOMED:has_specimen',
                             'SNOMED:has_state_of_matter',
                             'SNOMED:has_subject_relationship_context',
                             'SNOMED:has_surgical_approach',
                             'SNOMED:has_technique',
                             'SNOMED:has_temporal_context',
                             'SNOMED:has_time_aspect',
                             'SNOMED:has_units',
                             'UMLS:has_structural_class',
                             'UMLS:has_supported_concept_property',
                             'UMLS:has_supported_concept_relationship',
                             'UMLS:may_be_qualified_by'],
         'slot_uri': 'biolink:has_attribute'} })
    deprecated: Optional[bool] = Field(default=None, description="""A boolean flag indicating that an entity is no longer considered current or valid.""", json_schema_extra = { "linkml_meta": {'alias': 'deprecated',
         'definition_uri': 'https://w3id.org/biolink/vocab/deprecated',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['oboInOwl:ObsoleteClass'],
         'slot_uri': 'biolink:deprecated'} })
    provided_by: Optional[List[str]] = Field(default=None, description="""The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.""", json_schema_extra = { "linkml_meta": {'alias': 'provided_by',
         'definition_uri': 'https://w3id.org/biolink/vocab/provided_by',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:provided_by'} })
    xref: Optional[List[str]] = Field(default=None, description="""A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.""", json_schema_extra = { "linkml_meta": {'alias': 'xref',
         'aliases': ['dbxref', 'Dbxref', 'DbXref', 'record_url', 'source_record_urls'],
         'definition_uri': 'https://w3id.org/biolink/vocab/xref',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'gene',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ObservationMatrix',
                       'ObservationRow',
                       'Abbreviation',
                       'MatrixFile',
                       'ColorPalette',
                       'DisplayColor'],
         'in_subset': ['translator_minimal'],
         'narrow_mappings': ['gff3:Dbxref', 'gpi:DB_Xrefs'],
         'slot_uri': 'biolink:xref'} })
    full_name: Optional[str] = Field(default=None, description="""a long-form human readable name for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'full_name',
         'definition_uri': 'https://w3id.org/biolink/vocab/full_name',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:full_name'} })
    synonym: Optional[List[str]] = Field(default=None, description="""Alternate human-readable names for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'synonym',
         'aliases': ['alias'],
         'definition_uri': 'https://w3id.org/biolink/vocab/synonym',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'narrow_mappings': ['skos:altLabel',
                             'gff3:Alias',
                             'AGRKB:synonyms',
                             'gpi:DB_Object_Synonyms',
                             'HANCESTRO:0330',
                             'IAO:0000136',
                             'RXNORM:has_tradename'],
         'slot_uri': 'biolink:synonym'} })


class CellTypeTaxonomy(ProvEntity, NamedThing):
    """
    A cell type taxonomy is a systematic classification of cell types and their heirarchical relationships and groupings. A taxonomy may include concepts such as heirarchical taxonomic levels or (potentially overlapping) neighborhoods.
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'from_schema': 'https://w3id.org/brain-bican/bke-taxonomy',
         'mixins': ['ProvEntity'],
         'slot_usage': {'accession_id': {'description': 'A provider assigned accession '
                                                        'identifier for the taxonomy.',
                                         'examples': [{'value': 'CCN20230722'}],
                                         'name': 'accession_id',
                                         'range': 'string'},
                        'creation date': {'description': 'The creation date of the '
                                                         'cell type taxonomy.',
                                          'from_schema': 'bican_biolink',
                                          'name': 'creation date'},
                        'description': {'description': 'Description of the cell type '
                                                       'taxonomy.',
                                        'from_schema': 'bican_biolink',
                                        'name': 'description',
                                        'range': 'string'},
                        'id': {'description': '( database GUID)',
                               'from_schema': 'bican_biolink',
                               'name': 'id',
                               'range': 'string'},
                        'is_revision_of': {'description': 'The previous version for '
                                                          'which this cell type '
                                                          'taxonomy is a revision of.',
                                           'name': 'is_revision_of',
                                           'range': 'CellTypeTaxonomy'},
                        'name': {'description': 'Name of the cell type taxonomy.',
                                 'examples': [{'value': 'AIT21.0'}],
                                 'from_schema': 'bican_biolink',
                                 'name': 'name',
                                 'range': 'string'},
                        'was_derived_from': {'description': 'One of potentially many '
                                                            'input clusters set from '
                                                            'which the cell type '
                                                            'taxonomy is derived.',
                                             'from_schema': 'bican_prov',
                                             'multivalued': True,
                                             'name': 'was_derived_from',
                                             'range': 'ClusterSet'},
                        'was_generated_by': {'description': 'The analysis process from '
                                                            'which the cell types '
                                                            'taxonomy was generated '
                                                            'by.',
                                             'from_schema': 'bican_prov',
                                             'name': 'was_generated_by',
                                             'range': 'CellTypeTaxonomyCreationProcess'},
                        'xref': {'from_schema': 'bican_biolink',
                                 'local_names': {'allen': {'local_name_source': 'allen',
                                                           'local_name_value': 'unique_id'}},
                                 'name': 'xref'}}})

    was_generated_by: Optional[str] = Field(default=None, description="""The analysis process from which the cell types taxonomy was generated by.""", json_schema_extra = { "linkml_meta": {'alias': 'was_generated_by',
         'domain_of': ['ProvEntity',
                       'CellTypeTaxonomy',
                       'ClusterSet',
                       'ObservationMatrix'],
         'slot_uri': 'prov:wasGeneratedBy'} })
    was_derived_from: Optional[List[str]] = Field(default=None, description="""One of potentially many input clusters set from which the cell type taxonomy is derived.""", json_schema_extra = { "linkml_meta": {'alias': 'was_derived_from',
         'domain_of': ['ProvEntity',
                       'CellTypeTaxonomy',
                       'ClusterSet',
                       'ObservationMatrix',
                       'ObservationRow'],
         'slot_uri': 'prov:wasDerivedFrom'} })
    is_revision_of: Optional[str] = Field(default=None, description="""The previous version for which this cell type taxonomy is a revision of.""", json_schema_extra = { "linkml_meta": {'alias': 'is_revision_of', 'domain_of': ['CellTypeTaxonomy', 'ClusterSet']} })
    id: str = Field(default=..., description="""( database GUID)""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })
    creation_date: Optional[date] = Field(default=None, description="""The creation date of the cell type taxonomy.""", json_schema_extra = { "linkml_meta": {'alias': 'creation_date',
         'aliases': ['publication date'],
         'definition_uri': 'https://w3id.org/biolink/vocab/creation_date',
         'domain': 'named thing',
         'domain_of': ['information content entity',
                       'dataset',
                       'CellTypeTaxonomy',
                       'ClusterSet'],
         'exact_mappings': ['dct:createdOn', 'WIKIDATA_PROPERTY:P577'],
         'is_a': 'node property',
         'slot_uri': 'biolink:creation_date'} })
    accession_id: Optional[str] = Field(default=None, description="""A provider assigned accession identifier for the taxonomy.""", json_schema_extra = { "linkml_meta": {'alias': 'accession_id',
         'domain_of': ['CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster'],
         'examples': [{'value': 'CCN20230722'}]} })
    name: Optional[str] = Field(default=None, description="""Name of the cell type taxonomy.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'examples': [{'value': 'AIT21.0'}],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })
    description: Optional[str] = Field(default=None, description="""Description of the cell type taxonomy.""", json_schema_extra = { "linkml_meta": {'alias': 'description',
         'aliases': ['definition'],
         'definition_uri': 'https://w3id.org/biolink/vocab/description',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'ColorPalette'],
         'exact_mappings': ['IAO:0000115', 'skos:definitions'],
         'in_subset': ['translator_minimal'],
         'mappings': ['dct:description'],
         'narrow_mappings': ['gff3:Description'],
         'slot_uri': 'dct:description'} })
    xref: Optional[List[str]] = Field(default=None, description="""A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.""", json_schema_extra = { "linkml_meta": {'alias': 'xref',
         'aliases': ['dbxref', 'Dbxref', 'DbXref', 'record_url', 'source_record_urls'],
         'definition_uri': 'https://w3id.org/biolink/vocab/xref',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'gene',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ObservationMatrix',
                       'ObservationRow',
                       'Abbreviation',
                       'MatrixFile',
                       'ColorPalette',
                       'DisplayColor'],
         'in_subset': ['translator_minimal'],
         'local_names': {'allen': {'local_name_source': 'allen',
                                   'local_name_value': 'unique_id'}},
         'narrow_mappings': ['gff3:Dbxref', 'gpi:DB_Xrefs'],
         'slot_uri': 'biolink:xref'} })
    iri: Optional[str] = Field(default=None, description="""An IRI for an entity. This is determined by the id using expansion rules.""", json_schema_extra = { "linkml_meta": {'alias': 'iri',
         'definition_uri': 'https://w3id.org/biolink/vocab/iri',
         'domain_of': ['attribute',
                       'entity',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P854'],
         'in_subset': ['translator_minimal', 'samples'],
         'slot_uri': 'biolink:iri'} })
    category: List[Literal["https://identifiers.org/brain-bican/vocab/CellTypeTaxonomy","bican:CellTypeTaxonomy"]] = Field(default=["bican:CellTypeTaxonomy"], description="""Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}.""", json_schema_extra = { "linkml_meta": {'alias': 'category',
         'definition_uri': 'https://w3id.org/biolink/vocab/category',
         'designates_type': True,
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'type',
         'is_class_field': True,
         'slot_uri': 'biolink:category'} })
    type: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'type',
         'definition_uri': 'https://w3id.org/biolink/vocab/type',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['gff3:type', 'gpi:DB_Object_Type'],
         'mappings': ['rdf:type'],
         'slot_uri': 'rdf:type'} })
    has_attribute: Optional[List[str]] = Field(default=None, description="""connects any entity to an attribute""", json_schema_extra = { "linkml_meta": {'alias': 'has_attribute',
         'close_mappings': ['OBI:0001927'],
         'definition_uri': 'https://w3id.org/biolink/vocab/has_attribute',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['SIO:000008'],
         'in_subset': ['samples'],
         'narrow_mappings': ['OBAN:association_has_subject_property',
                             'OBAN:association_has_object_property',
                             'CPT:has_possibly_included_panel_element',
                             'DRUGBANK:category',
                             'EFO:is_executed_in',
                             'HANCESTRO:0301',
                             'LOINC:has_action_guidance',
                             'LOINC:has_adjustment',
                             'LOINC:has_aggregation_view',
                             'LOINC:has_approach_guidance',
                             'LOINC:has_divisor',
                             'LOINC:has_exam',
                             'LOINC:has_method',
                             'LOINC:has_modality_subtype',
                             'LOINC:has_object_guidance',
                             'LOINC:has_scale',
                             'LOINC:has_suffix',
                             'LOINC:has_time_aspect',
                             'LOINC:has_time_modifier',
                             'LOINC:has_timing_of',
                             'NCIT:R88',
                             'NCIT:eo_disease_has_property_or_attribute',
                             'NCIT:has_data_element',
                             'NCIT:has_pharmaceutical_administration_method',
                             'NCIT:has_pharmaceutical_basic_dose_form',
                             'NCIT:has_pharmaceutical_intended_site',
                             'NCIT:has_pharmaceutical_release_characteristics',
                             'NCIT:has_pharmaceutical_state_of_matter',
                             'NCIT:has_pharmaceutical_transformation',
                             'NCIT:is_qualified_by',
                             'NCIT:qualifier_applies_to',
                             'NCIT:role_has_domain',
                             'NCIT:role_has_range',
                             'INO:0000154',
                             'HANCESTRO:0308',
                             'OMIM:has_inheritance_type',
                             'orphanet:C016',
                             'orphanet:C017',
                             'RO:0000053',
                             'RO:0000086',
                             'RO:0000087',
                             'SNOMED:has_access',
                             'SNOMED:has_clinical_course',
                             'SNOMED:has_count_of_base_of_active_ingredient',
                             'SNOMED:has_dose_form_administration_method',
                             'SNOMED:has_dose_form_release_characteristic',
                             'SNOMED:has_dose_form_transformation',
                             'SNOMED:has_finding_context',
                             'SNOMED:has_finding_informer',
                             'SNOMED:has_inherent_attribute',
                             'SNOMED:has_intent',
                             'SNOMED:has_interpretation',
                             'SNOMED:has_laterality',
                             'SNOMED:has_measurement_method',
                             'SNOMED:has_method',
                             'SNOMED:has_priority',
                             'SNOMED:has_procedure_context',
                             'SNOMED:has_process_duration',
                             'SNOMED:has_property',
                             'SNOMED:has_revision_status',
                             'SNOMED:has_scale_type',
                             'SNOMED:has_severity',
                             'SNOMED:has_specimen',
                             'SNOMED:has_state_of_matter',
                             'SNOMED:has_subject_relationship_context',
                             'SNOMED:has_surgical_approach',
                             'SNOMED:has_technique',
                             'SNOMED:has_temporal_context',
                             'SNOMED:has_time_aspect',
                             'SNOMED:has_units',
                             'UMLS:has_structural_class',
                             'UMLS:has_supported_concept_property',
                             'UMLS:has_supported_concept_relationship',
                             'UMLS:may_be_qualified_by'],
         'slot_uri': 'biolink:has_attribute'} })
    deprecated: Optional[bool] = Field(default=None, description="""A boolean flag indicating that an entity is no longer considered current or valid.""", json_schema_extra = { "linkml_meta": {'alias': 'deprecated',
         'definition_uri': 'https://w3id.org/biolink/vocab/deprecated',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['oboInOwl:ObsoleteClass'],
         'slot_uri': 'biolink:deprecated'} })
    provided_by: Optional[List[str]] = Field(default=None, description="""The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.""", json_schema_extra = { "linkml_meta": {'alias': 'provided_by',
         'definition_uri': 'https://w3id.org/biolink/vocab/provided_by',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:provided_by'} })
    full_name: Optional[str] = Field(default=None, description="""a long-form human readable name for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'full_name',
         'definition_uri': 'https://w3id.org/biolink/vocab/full_name',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:full_name'} })
    synonym: Optional[List[str]] = Field(default=None, description="""Alternate human-readable names for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'synonym',
         'aliases': ['alias'],
         'definition_uri': 'https://w3id.org/biolink/vocab/synonym',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'narrow_mappings': ['skos:altLabel',
                             'gff3:Alias',
                             'AGRKB:synonyms',
                             'gpi:DB_Object_Synonyms',
                             'HANCESTRO:0330',
                             'IAO:0000136',
                             'RXNORM:has_tradename'],
         'slot_uri': 'biolink:synonym'} })


class CellTypeSet(ProvEntity, NamedThing):
    """
    A grouping of cell type taxons. The grouping may represent a specific taxonomic level (rank) or cell type neighborhood.
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'from_schema': 'https://w3id.org/brain-bican/bke-taxonomy',
         'mixins': ['ProvEntity'],
         'slot_usage': {'accession_id': {'description': 'A provider assigned accession '
                                                        'identifier for the cell type '
                                                        'set.',
                                         'examples': [{'value': 'CCN20230722_CLAS'}],
                                         'name': 'accession_id',
                                         'range': 'string'},
                        'description': {'description': 'Description of the cell type '
                                                       'set.',
                                        'examples': [{'value': 'The top level of cell '
                                                               'type definition in the '
                                                               'mouse whole brain '
                                                               'taxonomy. It is '
                                                               'primarily determined '
                                                               'by broad brain region '
                                                               'and neurotransmitter '
                                                               'type. All cells within '
                                                               'a subclass belong to '
                                                               'the same class. Class '
                                                               'provides a broader '
                                                               'categorization of cell '
                                                               'types.'}],
                                        'from_schema': 'bican_biolink',
                                        'name': 'description',
                                        'range': 'string'},
                        'has_abbreviation': {'description': 'One of many abbreviation '
                                                            'that are part of the cell '
                                                            'type set name.',
                                             'multivalued': True,
                                             'name': 'has_abbreviation',
                                             'range': 'Abbreviation'},
                        'has_parent': {'description': 'When the cell type set '
                                                      'represents a taxonomic level, '
                                                      'the parent is the next higher '
                                                      'level in the heirarchy.',
                                       'name': 'has_parent',
                                       'range': 'CellTypeSet'},
                        'id': {'description': '( database GUID)',
                               'from_schema': 'bican_biolink',
                               'name': 'id',
                               'range': 'string'},
                        'name': {'description': 'Name of the cell type set taxonomy.',
                                 'examples': [{'value': 'class'}],
                                 'from_schema': 'bican_biolink',
                                 'name': 'name',
                                 'range': 'string'},
                        'order': {'description': 'The priority or display order of the '
                                                 'cell type set among all other sets '
                                                 'of the same type.',
                                  'examples': [{'value': '1'}],
                                  'local_names': {'allen': {'local_name_source': 'allen',
                                                            'local_name_value': 'order_idx'}},
                                  'minimum_value': '0.0',
                                  'name': 'order',
                                  'range': 'integer'},
                        'part_of_taxonomy': {'description': 'The cell types taxonomy '
                                                            'for which the cell type '
                                                            'set is part of.',
                                             'name': 'part_of_taxonomy',
                                             'range': 'CellTypeTaxonomy'},
                        'xref': {'from_schema': 'bican_biolink',
                                 'local_names': {'allen': {'local_name_source': 'allen',
                                                           'local_name_value': 'unique_id'}},
                                 'name': 'xref'}}})

    part_of_taxonomy: Optional[str] = Field(default=None, description="""The cell types taxonomy for which the cell type set is part of.""", json_schema_extra = { "linkml_meta": {'alias': 'part_of_taxonomy', 'domain_of': ['CellTypeSet', 'CellTypeTaxon']} })
    has_parent: Optional[str] = Field(default=None, description="""When the cell type set represents a taxonomic level, the parent is the next higher level in the heirarchy.""", json_schema_extra = { "linkml_meta": {'alias': 'has_parent', 'domain_of': ['CellTypeSet', 'CellTypeTaxon']} })
    has_abbreviation: Optional[List[str]] = Field(default=None, description="""One of many abbreviation that are part of the cell type set name.""", json_schema_extra = { "linkml_meta": {'alias': 'has_abbreviation', 'domain_of': ['CellTypeSet', 'CellTypeTaxon']} })
    id: str = Field(default=..., description="""( database GUID)""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })
    accession_id: Optional[str] = Field(default=None, description="""A provider assigned accession identifier for the cell type set.""", json_schema_extra = { "linkml_meta": {'alias': 'accession_id',
         'domain_of': ['CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster'],
         'examples': [{'value': 'CCN20230722_CLAS'}]} })
    name: Optional[str] = Field(default=None, description="""Name of the cell type set taxonomy.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'examples': [{'value': 'class'}],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })
    description: Optional[str] = Field(default=None, description="""Description of the cell type set.""", json_schema_extra = { "linkml_meta": {'alias': 'description',
         'aliases': ['definition'],
         'definition_uri': 'https://w3id.org/biolink/vocab/description',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'ColorPalette'],
         'exact_mappings': ['IAO:0000115', 'skos:definitions'],
         'examples': [{'value': 'The top level of cell type definition in the mouse '
                                'whole brain taxonomy. It is primarily determined by '
                                'broad brain region and neurotransmitter type. All '
                                'cells within a subclass belong to the same class. '
                                'Class provides a broader categorization of cell '
                                'types.'}],
         'in_subset': ['translator_minimal'],
         'mappings': ['dct:description'],
         'narrow_mappings': ['gff3:Description'],
         'slot_uri': 'dct:description'} })
    order: Optional[int] = Field(default=None, description="""The priority or display order of the cell type set among all other sets of the same type.""", ge=0, json_schema_extra = { "linkml_meta": {'alias': 'order',
         'domain_of': ['CellTypeSet', 'CellTypeTaxon'],
         'examples': [{'value': '1'}],
         'local_names': {'allen': {'local_name_source': 'allen',
                                   'local_name_value': 'order_idx'}}} })
    xref: Optional[List[str]] = Field(default=None, description="""A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.""", json_schema_extra = { "linkml_meta": {'alias': 'xref',
         'aliases': ['dbxref', 'Dbxref', 'DbXref', 'record_url', 'source_record_urls'],
         'definition_uri': 'https://w3id.org/biolink/vocab/xref',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'gene',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ObservationMatrix',
                       'ObservationRow',
                       'Abbreviation',
                       'MatrixFile',
                       'ColorPalette',
                       'DisplayColor'],
         'in_subset': ['translator_minimal'],
         'local_names': {'allen': {'local_name_source': 'allen',
                                   'local_name_value': 'unique_id'}},
         'narrow_mappings': ['gff3:Dbxref', 'gpi:DB_Xrefs'],
         'slot_uri': 'biolink:xref'} })
    contains_taxon: Optional[List[str]] = Field(default=None, description="""One of potentially many cell types taxons which together defines the cell type set.""", json_schema_extra = { "linkml_meta": {'alias': 'contains_taxon', 'domain_of': ['CellTypeSet']} })
    cell_type_set_type: Optional[CellTypeSetType] = Field(default=None, description="""A tag denoting the type or purpose of the cell type set.""", json_schema_extra = { "linkml_meta": {'alias': 'cell_type_set_type',
         'domain_of': ['CellTypeSet'],
         'examples': [{'value': 'taxonomic_level'}],
         'local_names': {'allen': {'local_name_source': 'allen',
                                   'local_name_value': 'type'}}} })
    was_derived_from: Optional[str] = Field(default=None, description="""A derivation is a transformation of an entity into another, an update of an entity resulting in a new one, or the construction of a new entity based on a pre-existing entity.""", json_schema_extra = { "linkml_meta": {'alias': 'was_derived_from',
         'domain_of': ['ProvEntity',
                       'CellTypeTaxonomy',
                       'ClusterSet',
                       'ObservationMatrix',
                       'ObservationRow'],
         'slot_uri': 'prov:wasDerivedFrom'} })
    was_generated_by: Optional[str] = Field(default=None, description="""Generation is the completion of production of a new entity by an activity. This entity did not exist before generation and becomes available for usage after this generation.""", json_schema_extra = { "linkml_meta": {'alias': 'was_generated_by',
         'domain_of': ['ProvEntity',
                       'CellTypeTaxonomy',
                       'ClusterSet',
                       'ObservationMatrix'],
         'slot_uri': 'prov:wasGeneratedBy'} })
    iri: Optional[str] = Field(default=None, description="""An IRI for an entity. This is determined by the id using expansion rules.""", json_schema_extra = { "linkml_meta": {'alias': 'iri',
         'definition_uri': 'https://w3id.org/biolink/vocab/iri',
         'domain_of': ['attribute',
                       'entity',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P854'],
         'in_subset': ['translator_minimal', 'samples'],
         'slot_uri': 'biolink:iri'} })
    category: List[Literal["https://identifiers.org/brain-bican/vocab/CellTypeSet","bican:CellTypeSet"]] = Field(default=["bican:CellTypeSet"], description="""Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}.""", json_schema_extra = { "linkml_meta": {'alias': 'category',
         'definition_uri': 'https://w3id.org/biolink/vocab/category',
         'designates_type': True,
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'type',
         'is_class_field': True,
         'slot_uri': 'biolink:category'} })
    type: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'type',
         'definition_uri': 'https://w3id.org/biolink/vocab/type',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['gff3:type', 'gpi:DB_Object_Type'],
         'mappings': ['rdf:type'],
         'slot_uri': 'rdf:type'} })
    has_attribute: Optional[List[str]] = Field(default=None, description="""connects any entity to an attribute""", json_schema_extra = { "linkml_meta": {'alias': 'has_attribute',
         'close_mappings': ['OBI:0001927'],
         'definition_uri': 'https://w3id.org/biolink/vocab/has_attribute',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['SIO:000008'],
         'in_subset': ['samples'],
         'narrow_mappings': ['OBAN:association_has_subject_property',
                             'OBAN:association_has_object_property',
                             'CPT:has_possibly_included_panel_element',
                             'DRUGBANK:category',
                             'EFO:is_executed_in',
                             'HANCESTRO:0301',
                             'LOINC:has_action_guidance',
                             'LOINC:has_adjustment',
                             'LOINC:has_aggregation_view',
                             'LOINC:has_approach_guidance',
                             'LOINC:has_divisor',
                             'LOINC:has_exam',
                             'LOINC:has_method',
                             'LOINC:has_modality_subtype',
                             'LOINC:has_object_guidance',
                             'LOINC:has_scale',
                             'LOINC:has_suffix',
                             'LOINC:has_time_aspect',
                             'LOINC:has_time_modifier',
                             'LOINC:has_timing_of',
                             'NCIT:R88',
                             'NCIT:eo_disease_has_property_or_attribute',
                             'NCIT:has_data_element',
                             'NCIT:has_pharmaceutical_administration_method',
                             'NCIT:has_pharmaceutical_basic_dose_form',
                             'NCIT:has_pharmaceutical_intended_site',
                             'NCIT:has_pharmaceutical_release_characteristics',
                             'NCIT:has_pharmaceutical_state_of_matter',
                             'NCIT:has_pharmaceutical_transformation',
                             'NCIT:is_qualified_by',
                             'NCIT:qualifier_applies_to',
                             'NCIT:role_has_domain',
                             'NCIT:role_has_range',
                             'INO:0000154',
                             'HANCESTRO:0308',
                             'OMIM:has_inheritance_type',
                             'orphanet:C016',
                             'orphanet:C017',
                             'RO:0000053',
                             'RO:0000086',
                             'RO:0000087',
                             'SNOMED:has_access',
                             'SNOMED:has_clinical_course',
                             'SNOMED:has_count_of_base_of_active_ingredient',
                             'SNOMED:has_dose_form_administration_method',
                             'SNOMED:has_dose_form_release_characteristic',
                             'SNOMED:has_dose_form_transformation',
                             'SNOMED:has_finding_context',
                             'SNOMED:has_finding_informer',
                             'SNOMED:has_inherent_attribute',
                             'SNOMED:has_intent',
                             'SNOMED:has_interpretation',
                             'SNOMED:has_laterality',
                             'SNOMED:has_measurement_method',
                             'SNOMED:has_method',
                             'SNOMED:has_priority',
                             'SNOMED:has_procedure_context',
                             'SNOMED:has_process_duration',
                             'SNOMED:has_property',
                             'SNOMED:has_revision_status',
                             'SNOMED:has_scale_type',
                             'SNOMED:has_severity',
                             'SNOMED:has_specimen',
                             'SNOMED:has_state_of_matter',
                             'SNOMED:has_subject_relationship_context',
                             'SNOMED:has_surgical_approach',
                             'SNOMED:has_technique',
                             'SNOMED:has_temporal_context',
                             'SNOMED:has_time_aspect',
                             'SNOMED:has_units',
                             'UMLS:has_structural_class',
                             'UMLS:has_supported_concept_property',
                             'UMLS:has_supported_concept_relationship',
                             'UMLS:may_be_qualified_by'],
         'slot_uri': 'biolink:has_attribute'} })
    deprecated: Optional[bool] = Field(default=None, description="""A boolean flag indicating that an entity is no longer considered current or valid.""", json_schema_extra = { "linkml_meta": {'alias': 'deprecated',
         'definition_uri': 'https://w3id.org/biolink/vocab/deprecated',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['oboInOwl:ObsoleteClass'],
         'slot_uri': 'biolink:deprecated'} })
    provided_by: Optional[List[str]] = Field(default=None, description="""The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.""", json_schema_extra = { "linkml_meta": {'alias': 'provided_by',
         'definition_uri': 'https://w3id.org/biolink/vocab/provided_by',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:provided_by'} })
    full_name: Optional[str] = Field(default=None, description="""a long-form human readable name for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'full_name',
         'definition_uri': 'https://w3id.org/biolink/vocab/full_name',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:full_name'} })
    synonym: Optional[List[str]] = Field(default=None, description="""Alternate human-readable names for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'synonym',
         'aliases': ['alias'],
         'definition_uri': 'https://w3id.org/biolink/vocab/synonym',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'narrow_mappings': ['skos:altLabel',
                             'gff3:Alias',
                             'AGRKB:synonyms',
                             'gpi:DB_Object_Synonyms',
                             'HANCESTRO:0330',
                             'IAO:0000136',
                             'RXNORM:has_tradename'],
         'slot_uri': 'biolink:synonym'} })


class CellTypeTaxon(ProvEntity, NamedThing):
    """
    A cell type taxon is a node in a taxonomy. Taxons represents a unit of cell type classification and is defined by a set of clusters. Taxons may be organized into a heirarchy and levels. Taxons at higher levels represents broader cell type classes and partitioned into more specific types at lower levels. Additionally, taxons may be organized into neighborhoods or related groups.
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'from_schema': 'https://w3id.org/brain-bican/bke-taxonomy',
         'mixins': ['ProvEntity'],
         'slot_usage': {'accession_id': {'description': 'A provider assigned accession '
                                                        'identifier for the cell type '
                                                        'taxon.',
                                         'examples': [{'value': 'CS20230722_CLAS_11'}],
                                         'name': 'accession_id',
                                         'range': 'string'},
                        'description': {'description': 'Description of the cell type '
                                                       'taxon (optional).',
                                        'from_schema': 'bican_biolink',
                                        'name': 'description',
                                        'range': 'string'},
                        'has_abbreviation': {'description': 'One of many abbreviation '
                                                            'that are part of the cell '
                                                            'type taxon name.',
                                             'multivalued': True,
                                             'name': 'has_abbreviation',
                                             'range': 'Abbreviation'},
                        'has_parent': {'description': 'When the taxonomy is a single '
                                                      'inheritance tree, the parent '
                                                      'represents the superclass for '
                                                      'which the cell type taxon is a '
                                                      'member of.',
                                       'name': 'has_parent',
                                       'range': 'CellTypeTaxon'},
                        'id': {'description': '( database GUID)',
                               'from_schema': 'bican_biolink',
                               'name': 'id',
                               'range': 'string'},
                        'name': {'description': 'Name of the cell type taxon.',
                                 'examples': [{'value': '11 CNU-HYa GABA'}],
                                 'name': 'name',
                                 'range': 'string'},
                        'order': {'description': 'The priority or display order of the '
                                                 'cell type taxon among all other '
                                                 'taxons in the taxonomy.',
                                  'examples': [{'value': '11'}],
                                  'local_names': {'allen': {'local_name_source': 'allen',
                                                            'local_name_value': 'order_idx'}},
                                  'minimum_value': '0.0',
                                  'name': 'order',
                                  'range': 'integer'},
                        'part_of_taxonomy': {'description': 'The cell types taxonomy '
                                                            'for which the cell type '
                                                            'taxon is part of.',
                                             'name': 'part_of_taxonomy',
                                             'range': 'CellTypeTaxonomy'},
                        'xref': {'from_schema': 'bican_biolink',
                                 'local_names': {'allen': {'local_name_source': 'allen',
                                                           'local_name_value': 'unique_id'}},
                                 'name': 'xref'}}})

    part_of_taxonomy: Optional[str] = Field(default=None, description="""The cell types taxonomy for which the cell type taxon is part of.""", json_schema_extra = { "linkml_meta": {'alias': 'part_of_taxonomy', 'domain_of': ['CellTypeSet', 'CellTypeTaxon']} })
    has_parent: Optional[str] = Field(default=None, description="""When the taxonomy is a single inheritance tree, the parent represents the superclass for which the cell type taxon is a member of.""", json_schema_extra = { "linkml_meta": {'alias': 'has_parent', 'domain_of': ['CellTypeSet', 'CellTypeTaxon']} })
    has_abbreviation: Optional[List[str]] = Field(default=None, description="""One of many abbreviation that are part of the cell type taxon name.""", json_schema_extra = { "linkml_meta": {'alias': 'has_abbreviation', 'domain_of': ['CellTypeSet', 'CellTypeTaxon']} })
    id: str = Field(default=..., description="""( database GUID)""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })
    accession_id: Optional[str] = Field(default=None, description="""A provider assigned accession identifier for the cell type taxon.""", json_schema_extra = { "linkml_meta": {'alias': 'accession_id',
         'domain_of': ['CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster'],
         'examples': [{'value': 'CS20230722_CLAS_11'}]} })
    name: Optional[str] = Field(default=None, description="""Name of the cell type taxon.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'examples': [{'value': '11 CNU-HYa GABA'}],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })
    order: Optional[int] = Field(default=None, description="""The priority or display order of the cell type taxon among all other taxons in the taxonomy.""", ge=0, json_schema_extra = { "linkml_meta": {'alias': 'order',
         'domain_of': ['CellTypeSet', 'CellTypeTaxon'],
         'examples': [{'value': '11'}],
         'local_names': {'allen': {'local_name_source': 'allen',
                                   'local_name_value': 'order_idx'}}} })
    description: Optional[str] = Field(default=None, description="""Description of the cell type taxon (optional).""", json_schema_extra = { "linkml_meta": {'alias': 'description',
         'aliases': ['definition'],
         'definition_uri': 'https://w3id.org/biolink/vocab/description',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'ColorPalette'],
         'exact_mappings': ['IAO:0000115', 'skos:definitions'],
         'in_subset': ['translator_minimal'],
         'mappings': ['dct:description'],
         'narrow_mappings': ['gff3:Description'],
         'slot_uri': 'dct:description'} })
    xref: Optional[List[str]] = Field(default=None, description="""A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.""", json_schema_extra = { "linkml_meta": {'alias': 'xref',
         'aliases': ['dbxref', 'Dbxref', 'DbXref', 'record_url', 'source_record_urls'],
         'definition_uri': 'https://w3id.org/biolink/vocab/xref',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'gene',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ObservationMatrix',
                       'ObservationRow',
                       'Abbreviation',
                       'MatrixFile',
                       'ColorPalette',
                       'DisplayColor'],
         'in_subset': ['translator_minimal'],
         'local_names': {'allen': {'local_name_source': 'allen',
                                   'local_name_value': 'unique_id'}},
         'narrow_mappings': ['gff3:Dbxref', 'gpi:DB_Xrefs'],
         'slot_uri': 'biolink:xref'} })
    contains_cluster: Optional[List[str]] = Field(default=None, description="""One of potentially cell clusters which together defines the cell type taxon.""", json_schema_extra = { "linkml_meta": {'alias': 'contains_cluster', 'domain_of': ['CellTypeTaxon']} })
    number_of_cells: Optional[int] = Field(default=None, description="""The aggregated number of cells that defines the cell type taxon.""", ge=0, json_schema_extra = { "linkml_meta": {'alias': 'number_of_cells', 'domain_of': ['CellTypeTaxon']} })
    was_derived_from: Optional[str] = Field(default=None, description="""A derivation is a transformation of an entity into another, an update of an entity resulting in a new one, or the construction of a new entity based on a pre-existing entity.""", json_schema_extra = { "linkml_meta": {'alias': 'was_derived_from',
         'domain_of': ['ProvEntity',
                       'CellTypeTaxonomy',
                       'ClusterSet',
                       'ObservationMatrix',
                       'ObservationRow'],
         'slot_uri': 'prov:wasDerivedFrom'} })
    was_generated_by: Optional[str] = Field(default=None, description="""Generation is the completion of production of a new entity by an activity. This entity did not exist before generation and becomes available for usage after this generation.""", json_schema_extra = { "linkml_meta": {'alias': 'was_generated_by',
         'domain_of': ['ProvEntity',
                       'CellTypeTaxonomy',
                       'ClusterSet',
                       'ObservationMatrix'],
         'slot_uri': 'prov:wasGeneratedBy'} })
    iri: Optional[str] = Field(default=None, description="""An IRI for an entity. This is determined by the id using expansion rules.""", json_schema_extra = { "linkml_meta": {'alias': 'iri',
         'definition_uri': 'https://w3id.org/biolink/vocab/iri',
         'domain_of': ['attribute',
                       'entity',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P854'],
         'in_subset': ['translator_minimal', 'samples'],
         'slot_uri': 'biolink:iri'} })
    category: List[Literal["https://identifiers.org/brain-bican/vocab/CellTypeTaxon","bican:CellTypeTaxon"]] = Field(default=["bican:CellTypeTaxon"], description="""Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}.""", json_schema_extra = { "linkml_meta": {'alias': 'category',
         'definition_uri': 'https://w3id.org/biolink/vocab/category',
         'designates_type': True,
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'type',
         'is_class_field': True,
         'slot_uri': 'biolink:category'} })
    type: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'type',
         'definition_uri': 'https://w3id.org/biolink/vocab/type',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['gff3:type', 'gpi:DB_Object_Type'],
         'mappings': ['rdf:type'],
         'slot_uri': 'rdf:type'} })
    has_attribute: Optional[List[str]] = Field(default=None, description="""connects any entity to an attribute""", json_schema_extra = { "linkml_meta": {'alias': 'has_attribute',
         'close_mappings': ['OBI:0001927'],
         'definition_uri': 'https://w3id.org/biolink/vocab/has_attribute',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['SIO:000008'],
         'in_subset': ['samples'],
         'narrow_mappings': ['OBAN:association_has_subject_property',
                             'OBAN:association_has_object_property',
                             'CPT:has_possibly_included_panel_element',
                             'DRUGBANK:category',
                             'EFO:is_executed_in',
                             'HANCESTRO:0301',
                             'LOINC:has_action_guidance',
                             'LOINC:has_adjustment',
                             'LOINC:has_aggregation_view',
                             'LOINC:has_approach_guidance',
                             'LOINC:has_divisor',
                             'LOINC:has_exam',
                             'LOINC:has_method',
                             'LOINC:has_modality_subtype',
                             'LOINC:has_object_guidance',
                             'LOINC:has_scale',
                             'LOINC:has_suffix',
                             'LOINC:has_time_aspect',
                             'LOINC:has_time_modifier',
                             'LOINC:has_timing_of',
                             'NCIT:R88',
                             'NCIT:eo_disease_has_property_or_attribute',
                             'NCIT:has_data_element',
                             'NCIT:has_pharmaceutical_administration_method',
                             'NCIT:has_pharmaceutical_basic_dose_form',
                             'NCIT:has_pharmaceutical_intended_site',
                             'NCIT:has_pharmaceutical_release_characteristics',
                             'NCIT:has_pharmaceutical_state_of_matter',
                             'NCIT:has_pharmaceutical_transformation',
                             'NCIT:is_qualified_by',
                             'NCIT:qualifier_applies_to',
                             'NCIT:role_has_domain',
                             'NCIT:role_has_range',
                             'INO:0000154',
                             'HANCESTRO:0308',
                             'OMIM:has_inheritance_type',
                             'orphanet:C016',
                             'orphanet:C017',
                             'RO:0000053',
                             'RO:0000086',
                             'RO:0000087',
                             'SNOMED:has_access',
                             'SNOMED:has_clinical_course',
                             'SNOMED:has_count_of_base_of_active_ingredient',
                             'SNOMED:has_dose_form_administration_method',
                             'SNOMED:has_dose_form_release_characteristic',
                             'SNOMED:has_dose_form_transformation',
                             'SNOMED:has_finding_context',
                             'SNOMED:has_finding_informer',
                             'SNOMED:has_inherent_attribute',
                             'SNOMED:has_intent',
                             'SNOMED:has_interpretation',
                             'SNOMED:has_laterality',
                             'SNOMED:has_measurement_method',
                             'SNOMED:has_method',
                             'SNOMED:has_priority',
                             'SNOMED:has_procedure_context',
                             'SNOMED:has_process_duration',
                             'SNOMED:has_property',
                             'SNOMED:has_revision_status',
                             'SNOMED:has_scale_type',
                             'SNOMED:has_severity',
                             'SNOMED:has_specimen',
                             'SNOMED:has_state_of_matter',
                             'SNOMED:has_subject_relationship_context',
                             'SNOMED:has_surgical_approach',
                             'SNOMED:has_technique',
                             'SNOMED:has_temporal_context',
                             'SNOMED:has_time_aspect',
                             'SNOMED:has_units',
                             'UMLS:has_structural_class',
                             'UMLS:has_supported_concept_property',
                             'UMLS:has_supported_concept_relationship',
                             'UMLS:may_be_qualified_by'],
         'slot_uri': 'biolink:has_attribute'} })
    deprecated: Optional[bool] = Field(default=None, description="""A boolean flag indicating that an entity is no longer considered current or valid.""", json_schema_extra = { "linkml_meta": {'alias': 'deprecated',
         'definition_uri': 'https://w3id.org/biolink/vocab/deprecated',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['oboInOwl:ObsoleteClass'],
         'slot_uri': 'biolink:deprecated'} })
    provided_by: Optional[List[str]] = Field(default=None, description="""The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.""", json_schema_extra = { "linkml_meta": {'alias': 'provided_by',
         'definition_uri': 'https://w3id.org/biolink/vocab/provided_by',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:provided_by'} })
    full_name: Optional[str] = Field(default=None, description="""a long-form human readable name for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'full_name',
         'definition_uri': 'https://w3id.org/biolink/vocab/full_name',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:full_name'} })
    synonym: Optional[List[str]] = Field(default=None, description="""Alternate human-readable names for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'synonym',
         'aliases': ['alias'],
         'definition_uri': 'https://w3id.org/biolink/vocab/synonym',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'narrow_mappings': ['skos:altLabel',
                             'gff3:Alias',
                             'AGRKB:synonyms',
                             'gpi:DB_Object_Synonyms',
                             'HANCESTRO:0330',
                             'IAO:0000136',
                             'RXNORM:has_tradename'],
         'slot_uri': 'biolink:synonym'} })


class ClusteringProcess(ProvActivity, Procedure):
    """
    The process of organizing and classifying observations into groups or clusters based on similarities or patterns.
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'from_schema': 'https://w3id.org/brain-bican/bke-taxonomy',
         'mixins': ['ProvActivity'],
         'slot_usage': {'used': {'description': 'One of potentially many input '
                                                'observation matrices from which '
                                                'clusters are derived.',
                                 'from_schema': 'bican_prov',
                                 'multivalued': True,
                                 'name': 'used',
                                 'range': 'ObservationMatrix'}}})

    used: Optional[List[str]] = Field(default=None, description="""One of potentially many input observation matrices from which clusters are derived.""", json_schema_extra = { "linkml_meta": {'alias': 'used',
         'domain_of': ['ProvActivity',
                       'CellTypeTaxonomyCreationProcess',
                       'ClusteringProcess'],
         'slot_uri': 'prov:used'} })
    id: str = Field(default=..., description="""A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })
    iri: Optional[str] = Field(default=None, description="""An IRI for an entity. This is determined by the id using expansion rules.""", json_schema_extra = { "linkml_meta": {'alias': 'iri',
         'definition_uri': 'https://w3id.org/biolink/vocab/iri',
         'domain_of': ['attribute',
                       'entity',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P854'],
         'in_subset': ['translator_minimal', 'samples'],
         'slot_uri': 'biolink:iri'} })
    category: List[Literal["https://identifiers.org/brain-bican/vocab/ClusteringProcess","bican:ClusteringProcess"]] = Field(default=["bican:ClusteringProcess"], description="""Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}.""", json_schema_extra = { "linkml_meta": {'alias': 'category',
         'definition_uri': 'https://w3id.org/biolink/vocab/category',
         'designates_type': True,
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'type',
         'is_class_field': True,
         'slot_uri': 'biolink:category'} })
    type: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'type',
         'definition_uri': 'https://w3id.org/biolink/vocab/type',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['gff3:type', 'gpi:DB_Object_Type'],
         'mappings': ['rdf:type'],
         'slot_uri': 'rdf:type'} })
    name: Optional[str] = Field(default=None, description="""A human-readable name for an attribute or entity.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })
    description: Optional[str] = Field(default=None, description="""a human-readable description of an entity""", json_schema_extra = { "linkml_meta": {'alias': 'description',
         'aliases': ['definition'],
         'definition_uri': 'https://w3id.org/biolink/vocab/description',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'ColorPalette'],
         'exact_mappings': ['IAO:0000115', 'skos:definitions'],
         'in_subset': ['translator_minimal'],
         'mappings': ['dct:description'],
         'narrow_mappings': ['gff3:Description'],
         'slot_uri': 'dct:description'} })
    has_attribute: Optional[List[str]] = Field(default=None, description="""connects any entity to an attribute""", json_schema_extra = { "linkml_meta": {'alias': 'has_attribute',
         'close_mappings': ['OBI:0001927'],
         'definition_uri': 'https://w3id.org/biolink/vocab/has_attribute',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['SIO:000008'],
         'in_subset': ['samples'],
         'narrow_mappings': ['OBAN:association_has_subject_property',
                             'OBAN:association_has_object_property',
                             'CPT:has_possibly_included_panel_element',
                             'DRUGBANK:category',
                             'EFO:is_executed_in',
                             'HANCESTRO:0301',
                             'LOINC:has_action_guidance',
                             'LOINC:has_adjustment',
                             'LOINC:has_aggregation_view',
                             'LOINC:has_approach_guidance',
                             'LOINC:has_divisor',
                             'LOINC:has_exam',
                             'LOINC:has_method',
                             'LOINC:has_modality_subtype',
                             'LOINC:has_object_guidance',
                             'LOINC:has_scale',
                             'LOINC:has_suffix',
                             'LOINC:has_time_aspect',
                             'LOINC:has_time_modifier',
                             'LOINC:has_timing_of',
                             'NCIT:R88',
                             'NCIT:eo_disease_has_property_or_attribute',
                             'NCIT:has_data_element',
                             'NCIT:has_pharmaceutical_administration_method',
                             'NCIT:has_pharmaceutical_basic_dose_form',
                             'NCIT:has_pharmaceutical_intended_site',
                             'NCIT:has_pharmaceutical_release_characteristics',
                             'NCIT:has_pharmaceutical_state_of_matter',
                             'NCIT:has_pharmaceutical_transformation',
                             'NCIT:is_qualified_by',
                             'NCIT:qualifier_applies_to',
                             'NCIT:role_has_domain',
                             'NCIT:role_has_range',
                             'INO:0000154',
                             'HANCESTRO:0308',
                             'OMIM:has_inheritance_type',
                             'orphanet:C016',
                             'orphanet:C017',
                             'RO:0000053',
                             'RO:0000086',
                             'RO:0000087',
                             'SNOMED:has_access',
                             'SNOMED:has_clinical_course',
                             'SNOMED:has_count_of_base_of_active_ingredient',
                             'SNOMED:has_dose_form_administration_method',
                             'SNOMED:has_dose_form_release_characteristic',
                             'SNOMED:has_dose_form_transformation',
                             'SNOMED:has_finding_context',
                             'SNOMED:has_finding_informer',
                             'SNOMED:has_inherent_attribute',
                             'SNOMED:has_intent',
                             'SNOMED:has_interpretation',
                             'SNOMED:has_laterality',
                             'SNOMED:has_measurement_method',
                             'SNOMED:has_method',
                             'SNOMED:has_priority',
                             'SNOMED:has_procedure_context',
                             'SNOMED:has_process_duration',
                             'SNOMED:has_property',
                             'SNOMED:has_revision_status',
                             'SNOMED:has_scale_type',
                             'SNOMED:has_severity',
                             'SNOMED:has_specimen',
                             'SNOMED:has_state_of_matter',
                             'SNOMED:has_subject_relationship_context',
                             'SNOMED:has_surgical_approach',
                             'SNOMED:has_technique',
                             'SNOMED:has_temporal_context',
                             'SNOMED:has_time_aspect',
                             'SNOMED:has_units',
                             'UMLS:has_structural_class',
                             'UMLS:has_supported_concept_property',
                             'UMLS:has_supported_concept_relationship',
                             'UMLS:may_be_qualified_by'],
         'slot_uri': 'biolink:has_attribute'} })
    deprecated: Optional[bool] = Field(default=None, description="""A boolean flag indicating that an entity is no longer considered current or valid.""", json_schema_extra = { "linkml_meta": {'alias': 'deprecated',
         'definition_uri': 'https://w3id.org/biolink/vocab/deprecated',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['oboInOwl:ObsoleteClass'],
         'slot_uri': 'biolink:deprecated'} })
    provided_by: Optional[List[str]] = Field(default=None, description="""The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.""", json_schema_extra = { "linkml_meta": {'alias': 'provided_by',
         'definition_uri': 'https://w3id.org/biolink/vocab/provided_by',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:provided_by'} })
    xref: Optional[List[str]] = Field(default=None, description="""A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.""", json_schema_extra = { "linkml_meta": {'alias': 'xref',
         'aliases': ['dbxref', 'Dbxref', 'DbXref', 'record_url', 'source_record_urls'],
         'definition_uri': 'https://w3id.org/biolink/vocab/xref',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'gene',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ObservationMatrix',
                       'ObservationRow',
                       'Abbreviation',
                       'MatrixFile',
                       'ColorPalette',
                       'DisplayColor'],
         'in_subset': ['translator_minimal'],
         'narrow_mappings': ['gff3:Dbxref', 'gpi:DB_Xrefs'],
         'slot_uri': 'biolink:xref'} })
    full_name: Optional[str] = Field(default=None, description="""a long-form human readable name for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'full_name',
         'definition_uri': 'https://w3id.org/biolink/vocab/full_name',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:full_name'} })
    synonym: Optional[List[str]] = Field(default=None, description="""Alternate human-readable names for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'synonym',
         'aliases': ['alias'],
         'definition_uri': 'https://w3id.org/biolink/vocab/synonym',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'narrow_mappings': ['skos:altLabel',
                             'gff3:Alias',
                             'AGRKB:synonyms',
                             'gpi:DB_Object_Synonyms',
                             'HANCESTRO:0330',
                             'IAO:0000136',
                             'RXNORM:has_tradename'],
         'slot_uri': 'biolink:synonym'} })


class ClusterSet(ProvEntity, NamedThing):
    """
    The output of a clustering process where input observations are organized or classified into a set of clusters based on similarities or patterns.
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'from_schema': 'https://w3id.org/brain-bican/bke-taxonomy',
         'mixins': ['ProvEntity'],
         'slot_usage': {'accession_id': {'description': 'A provider assigned accession '
                                                        'identifier for the cluster '
                                                        'set.',
                                         'name': 'accession_id',
                                         'range': 'string'},
                        'creation date': {'description': 'The creation date of the '
                                                         'cluster set.',
                                          'from_schema': 'bican_biolink',
                                          'name': 'creation date'},
                        'description': {'description': 'Description of the cluster '
                                                       'set.',
                                        'from_schema': 'bican_biolink',
                                        'name': 'description',
                                        'range': 'string'},
                        'id': {'description': '( database GUID)',
                               'from_schema': 'bican_biolink',
                               'name': 'id',
                               'range': 'string'},
                        'is_revision_of': {'description': 'The previous version for '
                                                          'which this clustering '
                                                          'output is a revision of.',
                                           'name': 'is_revision_of',
                                           'range': 'ClusterSet'},
                        'name': {'description': 'Name of the cluster set.',
                                 'from_schema': 'bican_biolink',
                                 'name': 'name',
                                 'range': 'string'},
                        'was_derived_from': {'description': 'One of potentially many '
                                                            'input observation '
                                                            'matrices from which '
                                                            'clusters are derived.',
                                             'from_schema': 'bican_prov',
                                             'multivalued': True,
                                             'name': 'was_derived_from',
                                             'range': 'ObservationMatrix'},
                        'was_generated_by': {'description': 'The analysis process from '
                                                            'which clusters was '
                                                            'generated by.',
                                             'from_schema': 'bican_prov',
                                             'name': 'was_generated_by',
                                             'range': 'ClusteringProcess'},
                        'xref': {'from_schema': 'bican_biolink',
                                 'local_names': {'allen': {'local_name_source': 'allen',
                                                           'local_name_value': 'unique_id'}},
                                 'name': 'xref'}}})

    was_generated_by: Optional[str] = Field(default=None, description="""The analysis process from which clusters was generated by.""", json_schema_extra = { "linkml_meta": {'alias': 'was_generated_by',
         'domain_of': ['ProvEntity',
                       'CellTypeTaxonomy',
                       'ClusterSet',
                       'ObservationMatrix'],
         'slot_uri': 'prov:wasGeneratedBy'} })
    was_derived_from: Optional[List[str]] = Field(default=None, description="""One of potentially many input observation matrices from which clusters are derived.""", json_schema_extra = { "linkml_meta": {'alias': 'was_derived_from',
         'domain_of': ['ProvEntity',
                       'CellTypeTaxonomy',
                       'ClusterSet',
                       'ObservationMatrix',
                       'ObservationRow'],
         'slot_uri': 'prov:wasDerivedFrom'} })
    is_revision_of: Optional[str] = Field(default=None, description="""The previous version for which this clustering output is a revision of.""", json_schema_extra = { "linkml_meta": {'alias': 'is_revision_of', 'domain_of': ['CellTypeTaxonomy', 'ClusterSet']} })
    id: str = Field(default=..., description="""( database GUID)""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })
    accession_id: Optional[str] = Field(default=None, description="""A provider assigned accession identifier for the cluster set.""", json_schema_extra = { "linkml_meta": {'alias': 'accession_id',
         'domain_of': ['CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster']} })
    name: Optional[str] = Field(default=None, description="""Name of the cluster set.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })
    description: Optional[str] = Field(default=None, description="""Description of the cluster set.""", json_schema_extra = { "linkml_meta": {'alias': 'description',
         'aliases': ['definition'],
         'definition_uri': 'https://w3id.org/biolink/vocab/description',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'ColorPalette'],
         'exact_mappings': ['IAO:0000115', 'skos:definitions'],
         'in_subset': ['translator_minimal'],
         'mappings': ['dct:description'],
         'narrow_mappings': ['gff3:Description'],
         'slot_uri': 'dct:description'} })
    xref: Optional[List[str]] = Field(default=None, description="""A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.""", json_schema_extra = { "linkml_meta": {'alias': 'xref',
         'aliases': ['dbxref', 'Dbxref', 'DbXref', 'record_url', 'source_record_urls'],
         'definition_uri': 'https://w3id.org/biolink/vocab/xref',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'gene',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ObservationMatrix',
                       'ObservationRow',
                       'Abbreviation',
                       'MatrixFile',
                       'ColorPalette',
                       'DisplayColor'],
         'in_subset': ['translator_minimal'],
         'local_names': {'allen': {'local_name_source': 'allen',
                                   'local_name_value': 'unique_id'}},
         'narrow_mappings': ['gff3:Dbxref', 'gpi:DB_Xrefs'],
         'slot_uri': 'biolink:xref'} })
    creation_date: Optional[date] = Field(default=None, description="""The creation date of the cluster set.""", json_schema_extra = { "linkml_meta": {'alias': 'creation_date',
         'aliases': ['publication date'],
         'definition_uri': 'https://w3id.org/biolink/vocab/creation_date',
         'domain': 'named thing',
         'domain_of': ['information content entity',
                       'dataset',
                       'CellTypeTaxonomy',
                       'ClusterSet'],
         'exact_mappings': ['dct:createdOn', 'WIKIDATA_PROPERTY:P577'],
         'is_a': 'node property',
         'slot_uri': 'biolink:creation_date'} })
    iri: Optional[str] = Field(default=None, description="""An IRI for an entity. This is determined by the id using expansion rules.""", json_schema_extra = { "linkml_meta": {'alias': 'iri',
         'definition_uri': 'https://w3id.org/biolink/vocab/iri',
         'domain_of': ['attribute',
                       'entity',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P854'],
         'in_subset': ['translator_minimal', 'samples'],
         'slot_uri': 'biolink:iri'} })
    category: List[Literal["https://identifiers.org/brain-bican/vocab/ClusterSet","bican:ClusterSet"]] = Field(default=["bican:ClusterSet"], description="""Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}.""", json_schema_extra = { "linkml_meta": {'alias': 'category',
         'definition_uri': 'https://w3id.org/biolink/vocab/category',
         'designates_type': True,
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'type',
         'is_class_field': True,
         'slot_uri': 'biolink:category'} })
    type: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'type',
         'definition_uri': 'https://w3id.org/biolink/vocab/type',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['gff3:type', 'gpi:DB_Object_Type'],
         'mappings': ['rdf:type'],
         'slot_uri': 'rdf:type'} })
    has_attribute: Optional[List[str]] = Field(default=None, description="""connects any entity to an attribute""", json_schema_extra = { "linkml_meta": {'alias': 'has_attribute',
         'close_mappings': ['OBI:0001927'],
         'definition_uri': 'https://w3id.org/biolink/vocab/has_attribute',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['SIO:000008'],
         'in_subset': ['samples'],
         'narrow_mappings': ['OBAN:association_has_subject_property',
                             'OBAN:association_has_object_property',
                             'CPT:has_possibly_included_panel_element',
                             'DRUGBANK:category',
                             'EFO:is_executed_in',
                             'HANCESTRO:0301',
                             'LOINC:has_action_guidance',
                             'LOINC:has_adjustment',
                             'LOINC:has_aggregation_view',
                             'LOINC:has_approach_guidance',
                             'LOINC:has_divisor',
                             'LOINC:has_exam',
                             'LOINC:has_method',
                             'LOINC:has_modality_subtype',
                             'LOINC:has_object_guidance',
                             'LOINC:has_scale',
                             'LOINC:has_suffix',
                             'LOINC:has_time_aspect',
                             'LOINC:has_time_modifier',
                             'LOINC:has_timing_of',
                             'NCIT:R88',
                             'NCIT:eo_disease_has_property_or_attribute',
                             'NCIT:has_data_element',
                             'NCIT:has_pharmaceutical_administration_method',
                             'NCIT:has_pharmaceutical_basic_dose_form',
                             'NCIT:has_pharmaceutical_intended_site',
                             'NCIT:has_pharmaceutical_release_characteristics',
                             'NCIT:has_pharmaceutical_state_of_matter',
                             'NCIT:has_pharmaceutical_transformation',
                             'NCIT:is_qualified_by',
                             'NCIT:qualifier_applies_to',
                             'NCIT:role_has_domain',
                             'NCIT:role_has_range',
                             'INO:0000154',
                             'HANCESTRO:0308',
                             'OMIM:has_inheritance_type',
                             'orphanet:C016',
                             'orphanet:C017',
                             'RO:0000053',
                             'RO:0000086',
                             'RO:0000087',
                             'SNOMED:has_access',
                             'SNOMED:has_clinical_course',
                             'SNOMED:has_count_of_base_of_active_ingredient',
                             'SNOMED:has_dose_form_administration_method',
                             'SNOMED:has_dose_form_release_characteristic',
                             'SNOMED:has_dose_form_transformation',
                             'SNOMED:has_finding_context',
                             'SNOMED:has_finding_informer',
                             'SNOMED:has_inherent_attribute',
                             'SNOMED:has_intent',
                             'SNOMED:has_interpretation',
                             'SNOMED:has_laterality',
                             'SNOMED:has_measurement_method',
                             'SNOMED:has_method',
                             'SNOMED:has_priority',
                             'SNOMED:has_procedure_context',
                             'SNOMED:has_process_duration',
                             'SNOMED:has_property',
                             'SNOMED:has_revision_status',
                             'SNOMED:has_scale_type',
                             'SNOMED:has_severity',
                             'SNOMED:has_specimen',
                             'SNOMED:has_state_of_matter',
                             'SNOMED:has_subject_relationship_context',
                             'SNOMED:has_surgical_approach',
                             'SNOMED:has_technique',
                             'SNOMED:has_temporal_context',
                             'SNOMED:has_time_aspect',
                             'SNOMED:has_units',
                             'UMLS:has_structural_class',
                             'UMLS:has_supported_concept_property',
                             'UMLS:has_supported_concept_relationship',
                             'UMLS:may_be_qualified_by'],
         'slot_uri': 'biolink:has_attribute'} })
    deprecated: Optional[bool] = Field(default=None, description="""A boolean flag indicating that an entity is no longer considered current or valid.""", json_schema_extra = { "linkml_meta": {'alias': 'deprecated',
         'definition_uri': 'https://w3id.org/biolink/vocab/deprecated',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['oboInOwl:ObsoleteClass'],
         'slot_uri': 'biolink:deprecated'} })
    provided_by: Optional[List[str]] = Field(default=None, description="""The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.""", json_schema_extra = { "linkml_meta": {'alias': 'provided_by',
         'definition_uri': 'https://w3id.org/biolink/vocab/provided_by',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:provided_by'} })
    full_name: Optional[str] = Field(default=None, description="""a long-form human readable name for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'full_name',
         'definition_uri': 'https://w3id.org/biolink/vocab/full_name',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:full_name'} })
    synonym: Optional[List[str]] = Field(default=None, description="""Alternate human-readable names for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'synonym',
         'aliases': ['alias'],
         'definition_uri': 'https://w3id.org/biolink/vocab/synonym',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'narrow_mappings': ['skos:altLabel',
                             'gff3:Alias',
                             'AGRKB:synonyms',
                             'gpi:DB_Object_Synonyms',
                             'HANCESTRO:0330',
                             'IAO:0000136',
                             'RXNORM:has_tradename'],
         'slot_uri': 'biolink:synonym'} })


class Cluster(ProvEntity, NamedThing):
    """
    One specific cluster from the set of clusters determined by a clustering process. A cluster is defined by set of observations which has been grouped together based on similarities or patterns.
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'from_schema': 'https://w3id.org/brain-bican/bke-taxonomy',
         'mixins': ['ProvEntity'],
         'slot_usage': {'accession_id': {'description': 'A provider assigned accession '
                                                        'identifier for the cluster '
                                                        'which is unique amongs all '
                                                        'clusters in cluster set.',
                                         'examples': [{'value': 'CS20230722_1019'}],
                                         'name': 'accession_id',
                                         'range': 'string'},
                        'id': {'description': '( database GUID)',
                               'from_schema': 'bican_biolink',
                               'name': 'id',
                               'range': 'string'},
                        'name': {'description': 'Name of the cluster.',
                                 'examples': [{'value': '1019'}],
                                 'from_schema': 'bican_biolink',
                                 'name': 'name',
                                 'range': 'string'},
                        'xref': {'from_schema': 'bican_biolink',
                                 'local_names': {'allen': {'local_name_source': 'allen',
                                                           'local_name_value': 'unique_id'}},
                                 'name': 'xref'}}})

    id: str = Field(default=..., description="""( database GUID)""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })
    accession_id: Optional[str] = Field(default=None, description="""A provider assigned accession identifier for the cluster which is unique amongs all clusters in cluster set.""", json_schema_extra = { "linkml_meta": {'alias': 'accession_id',
         'domain_of': ['CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster'],
         'examples': [{'value': 'CS20230722_1019'}]} })
    name: Optional[str] = Field(default=None, description="""Name of the cluster.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'examples': [{'value': '1019'}],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })
    xref: Optional[List[str]] = Field(default=None, description="""A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.""", json_schema_extra = { "linkml_meta": {'alias': 'xref',
         'aliases': ['dbxref', 'Dbxref', 'DbXref', 'record_url', 'source_record_urls'],
         'definition_uri': 'https://w3id.org/biolink/vocab/xref',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'gene',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ObservationMatrix',
                       'ObservationRow',
                       'Abbreviation',
                       'MatrixFile',
                       'ColorPalette',
                       'DisplayColor'],
         'in_subset': ['translator_minimal'],
         'local_names': {'allen': {'local_name_source': 'allen',
                                   'local_name_value': 'unique_id'}},
         'narrow_mappings': ['gff3:Dbxref', 'gpi:DB_Xrefs'],
         'slot_uri': 'biolink:xref'} })
    part_of_set: Optional[str] = Field(default=None, description="""The cluster set from which the cluster is part of.""", json_schema_extra = { "linkml_meta": {'alias': 'part_of_set', 'domain_of': ['Cluster']} })
    contains_observation: Optional[List[str]] = Field(default=None, description="""One of potentially many input observations which together define the cluster.""", json_schema_extra = { "linkml_meta": {'alias': 'contains_observation', 'domain_of': ['Cluster']} })
    contains_sample: Optional[List[str]] = Field(default=None, description="""One of potentially many sample which together define the cluster.""", json_schema_extra = { "linkml_meta": {'alias': 'contains_sample', 'domain_of': ['Cluster']} })
    number_of_observations: Optional[int] = Field(default=None, description="""The number of observations in the cluster.""", ge=0, json_schema_extra = { "linkml_meta": {'alias': 'number_of_observations',
         'domain_of': ['Cluster'],
         'examples': [{'value': '448'}]} })
    was_derived_from: Optional[str] = Field(default=None, description="""A derivation is a transformation of an entity into another, an update of an entity resulting in a new one, or the construction of a new entity based on a pre-existing entity.""", json_schema_extra = { "linkml_meta": {'alias': 'was_derived_from',
         'domain_of': ['ProvEntity',
                       'CellTypeTaxonomy',
                       'ClusterSet',
                       'ObservationMatrix',
                       'ObservationRow'],
         'slot_uri': 'prov:wasDerivedFrom'} })
    was_generated_by: Optional[str] = Field(default=None, description="""Generation is the completion of production of a new entity by an activity. This entity did not exist before generation and becomes available for usage after this generation.""", json_schema_extra = { "linkml_meta": {'alias': 'was_generated_by',
         'domain_of': ['ProvEntity',
                       'CellTypeTaxonomy',
                       'ClusterSet',
                       'ObservationMatrix'],
         'slot_uri': 'prov:wasGeneratedBy'} })
    iri: Optional[str] = Field(default=None, description="""An IRI for an entity. This is determined by the id using expansion rules.""", json_schema_extra = { "linkml_meta": {'alias': 'iri',
         'definition_uri': 'https://w3id.org/biolink/vocab/iri',
         'domain_of': ['attribute',
                       'entity',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P854'],
         'in_subset': ['translator_minimal', 'samples'],
         'slot_uri': 'biolink:iri'} })
    category: List[Literal["https://identifiers.org/brain-bican/vocab/Cluster","bican:Cluster"]] = Field(default=["bican:Cluster"], description="""Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}.""", json_schema_extra = { "linkml_meta": {'alias': 'category',
         'definition_uri': 'https://w3id.org/biolink/vocab/category',
         'designates_type': True,
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'type',
         'is_class_field': True,
         'slot_uri': 'biolink:category'} })
    type: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'type',
         'definition_uri': 'https://w3id.org/biolink/vocab/type',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['gff3:type', 'gpi:DB_Object_Type'],
         'mappings': ['rdf:type'],
         'slot_uri': 'rdf:type'} })
    description: Optional[str] = Field(default=None, description="""a human-readable description of an entity""", json_schema_extra = { "linkml_meta": {'alias': 'description',
         'aliases': ['definition'],
         'definition_uri': 'https://w3id.org/biolink/vocab/description',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'ColorPalette'],
         'exact_mappings': ['IAO:0000115', 'skos:definitions'],
         'in_subset': ['translator_minimal'],
         'mappings': ['dct:description'],
         'narrow_mappings': ['gff3:Description'],
         'slot_uri': 'dct:description'} })
    has_attribute: Optional[List[str]] = Field(default=None, description="""connects any entity to an attribute""", json_schema_extra = { "linkml_meta": {'alias': 'has_attribute',
         'close_mappings': ['OBI:0001927'],
         'definition_uri': 'https://w3id.org/biolink/vocab/has_attribute',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['SIO:000008'],
         'in_subset': ['samples'],
         'narrow_mappings': ['OBAN:association_has_subject_property',
                             'OBAN:association_has_object_property',
                             'CPT:has_possibly_included_panel_element',
                             'DRUGBANK:category',
                             'EFO:is_executed_in',
                             'HANCESTRO:0301',
                             'LOINC:has_action_guidance',
                             'LOINC:has_adjustment',
                             'LOINC:has_aggregation_view',
                             'LOINC:has_approach_guidance',
                             'LOINC:has_divisor',
                             'LOINC:has_exam',
                             'LOINC:has_method',
                             'LOINC:has_modality_subtype',
                             'LOINC:has_object_guidance',
                             'LOINC:has_scale',
                             'LOINC:has_suffix',
                             'LOINC:has_time_aspect',
                             'LOINC:has_time_modifier',
                             'LOINC:has_timing_of',
                             'NCIT:R88',
                             'NCIT:eo_disease_has_property_or_attribute',
                             'NCIT:has_data_element',
                             'NCIT:has_pharmaceutical_administration_method',
                             'NCIT:has_pharmaceutical_basic_dose_form',
                             'NCIT:has_pharmaceutical_intended_site',
                             'NCIT:has_pharmaceutical_release_characteristics',
                             'NCIT:has_pharmaceutical_state_of_matter',
                             'NCIT:has_pharmaceutical_transformation',
                             'NCIT:is_qualified_by',
                             'NCIT:qualifier_applies_to',
                             'NCIT:role_has_domain',
                             'NCIT:role_has_range',
                             'INO:0000154',
                             'HANCESTRO:0308',
                             'OMIM:has_inheritance_type',
                             'orphanet:C016',
                             'orphanet:C017',
                             'RO:0000053',
                             'RO:0000086',
                             'RO:0000087',
                             'SNOMED:has_access',
                             'SNOMED:has_clinical_course',
                             'SNOMED:has_count_of_base_of_active_ingredient',
                             'SNOMED:has_dose_form_administration_method',
                             'SNOMED:has_dose_form_release_characteristic',
                             'SNOMED:has_dose_form_transformation',
                             'SNOMED:has_finding_context',
                             'SNOMED:has_finding_informer',
                             'SNOMED:has_inherent_attribute',
                             'SNOMED:has_intent',
                             'SNOMED:has_interpretation',
                             'SNOMED:has_laterality',
                             'SNOMED:has_measurement_method',
                             'SNOMED:has_method',
                             'SNOMED:has_priority',
                             'SNOMED:has_procedure_context',
                             'SNOMED:has_process_duration',
                             'SNOMED:has_property',
                             'SNOMED:has_revision_status',
                             'SNOMED:has_scale_type',
                             'SNOMED:has_severity',
                             'SNOMED:has_specimen',
                             'SNOMED:has_state_of_matter',
                             'SNOMED:has_subject_relationship_context',
                             'SNOMED:has_surgical_approach',
                             'SNOMED:has_technique',
                             'SNOMED:has_temporal_context',
                             'SNOMED:has_time_aspect',
                             'SNOMED:has_units',
                             'UMLS:has_structural_class',
                             'UMLS:has_supported_concept_property',
                             'UMLS:has_supported_concept_relationship',
                             'UMLS:may_be_qualified_by'],
         'slot_uri': 'biolink:has_attribute'} })
    deprecated: Optional[bool] = Field(default=None, description="""A boolean flag indicating that an entity is no longer considered current or valid.""", json_schema_extra = { "linkml_meta": {'alias': 'deprecated',
         'definition_uri': 'https://w3id.org/biolink/vocab/deprecated',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['oboInOwl:ObsoleteClass'],
         'slot_uri': 'biolink:deprecated'} })
    provided_by: Optional[List[str]] = Field(default=None, description="""The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.""", json_schema_extra = { "linkml_meta": {'alias': 'provided_by',
         'definition_uri': 'https://w3id.org/biolink/vocab/provided_by',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:provided_by'} })
    full_name: Optional[str] = Field(default=None, description="""a long-form human readable name for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'full_name',
         'definition_uri': 'https://w3id.org/biolink/vocab/full_name',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:full_name'} })
    synonym: Optional[List[str]] = Field(default=None, description="""Alternate human-readable names for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'synonym',
         'aliases': ['alias'],
         'definition_uri': 'https://w3id.org/biolink/vocab/synonym',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'narrow_mappings': ['skos:altLabel',
                             'gff3:Alias',
                             'AGRKB:synonyms',
                             'gpi:DB_Object_Synonyms',
                             'HANCESTRO:0330',
                             'IAO:0000136',
                             'RXNORM:has_tradename'],
         'slot_uri': 'biolink:synonym'} })


class ObservationMatrixCreationProcess(ProvActivity, Procedure):
    """
    The process of aggregating data to create an observation matrix (potentially virtual) for the purpose of dissemination or performing an analysis (such as clustering).
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'from_schema': 'https://w3id.org/brain-bican/bke-taxonomy',
         'mixins': ['ProvActivity']})

    used: Optional[str] = Field(default=None, description="""Usage is the beginning of utilizing an entity by an activity. Before usage, the activity had not begun to utilize this entity and could not have been affected by the entity.""", json_schema_extra = { "linkml_meta": {'alias': 'used',
         'domain_of': ['ProvActivity',
                       'CellTypeTaxonomyCreationProcess',
                       'ClusteringProcess'],
         'slot_uri': 'prov:used'} })
    id: str = Field(default=..., description="""A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })
    iri: Optional[str] = Field(default=None, description="""An IRI for an entity. This is determined by the id using expansion rules.""", json_schema_extra = { "linkml_meta": {'alias': 'iri',
         'definition_uri': 'https://w3id.org/biolink/vocab/iri',
         'domain_of': ['attribute',
                       'entity',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P854'],
         'in_subset': ['translator_minimal', 'samples'],
         'slot_uri': 'biolink:iri'} })
    category: List[Literal["https://identifiers.org/brain-bican/vocab/ObservationMatrixCreationProcess","bican:ObservationMatrixCreationProcess"]] = Field(default=["bican:ObservationMatrixCreationProcess"], description="""Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}.""", json_schema_extra = { "linkml_meta": {'alias': 'category',
         'definition_uri': 'https://w3id.org/biolink/vocab/category',
         'designates_type': True,
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'type',
         'is_class_field': True,
         'slot_uri': 'biolink:category'} })
    type: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'type',
         'definition_uri': 'https://w3id.org/biolink/vocab/type',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['gff3:type', 'gpi:DB_Object_Type'],
         'mappings': ['rdf:type'],
         'slot_uri': 'rdf:type'} })
    name: Optional[str] = Field(default=None, description="""A human-readable name for an attribute or entity.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })
    description: Optional[str] = Field(default=None, description="""a human-readable description of an entity""", json_schema_extra = { "linkml_meta": {'alias': 'description',
         'aliases': ['definition'],
         'definition_uri': 'https://w3id.org/biolink/vocab/description',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'ColorPalette'],
         'exact_mappings': ['IAO:0000115', 'skos:definitions'],
         'in_subset': ['translator_minimal'],
         'mappings': ['dct:description'],
         'narrow_mappings': ['gff3:Description'],
         'slot_uri': 'dct:description'} })
    has_attribute: Optional[List[str]] = Field(default=None, description="""connects any entity to an attribute""", json_schema_extra = { "linkml_meta": {'alias': 'has_attribute',
         'close_mappings': ['OBI:0001927'],
         'definition_uri': 'https://w3id.org/biolink/vocab/has_attribute',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['SIO:000008'],
         'in_subset': ['samples'],
         'narrow_mappings': ['OBAN:association_has_subject_property',
                             'OBAN:association_has_object_property',
                             'CPT:has_possibly_included_panel_element',
                             'DRUGBANK:category',
                             'EFO:is_executed_in',
                             'HANCESTRO:0301',
                             'LOINC:has_action_guidance',
                             'LOINC:has_adjustment',
                             'LOINC:has_aggregation_view',
                             'LOINC:has_approach_guidance',
                             'LOINC:has_divisor',
                             'LOINC:has_exam',
                             'LOINC:has_method',
                             'LOINC:has_modality_subtype',
                             'LOINC:has_object_guidance',
                             'LOINC:has_scale',
                             'LOINC:has_suffix',
                             'LOINC:has_time_aspect',
                             'LOINC:has_time_modifier',
                             'LOINC:has_timing_of',
                             'NCIT:R88',
                             'NCIT:eo_disease_has_property_or_attribute',
                             'NCIT:has_data_element',
                             'NCIT:has_pharmaceutical_administration_method',
                             'NCIT:has_pharmaceutical_basic_dose_form',
                             'NCIT:has_pharmaceutical_intended_site',
                             'NCIT:has_pharmaceutical_release_characteristics',
                             'NCIT:has_pharmaceutical_state_of_matter',
                             'NCIT:has_pharmaceutical_transformation',
                             'NCIT:is_qualified_by',
                             'NCIT:qualifier_applies_to',
                             'NCIT:role_has_domain',
                             'NCIT:role_has_range',
                             'INO:0000154',
                             'HANCESTRO:0308',
                             'OMIM:has_inheritance_type',
                             'orphanet:C016',
                             'orphanet:C017',
                             'RO:0000053',
                             'RO:0000086',
                             'RO:0000087',
                             'SNOMED:has_access',
                             'SNOMED:has_clinical_course',
                             'SNOMED:has_count_of_base_of_active_ingredient',
                             'SNOMED:has_dose_form_administration_method',
                             'SNOMED:has_dose_form_release_characteristic',
                             'SNOMED:has_dose_form_transformation',
                             'SNOMED:has_finding_context',
                             'SNOMED:has_finding_informer',
                             'SNOMED:has_inherent_attribute',
                             'SNOMED:has_intent',
                             'SNOMED:has_interpretation',
                             'SNOMED:has_laterality',
                             'SNOMED:has_measurement_method',
                             'SNOMED:has_method',
                             'SNOMED:has_priority',
                             'SNOMED:has_procedure_context',
                             'SNOMED:has_process_duration',
                             'SNOMED:has_property',
                             'SNOMED:has_revision_status',
                             'SNOMED:has_scale_type',
                             'SNOMED:has_severity',
                             'SNOMED:has_specimen',
                             'SNOMED:has_state_of_matter',
                             'SNOMED:has_subject_relationship_context',
                             'SNOMED:has_surgical_approach',
                             'SNOMED:has_technique',
                             'SNOMED:has_temporal_context',
                             'SNOMED:has_time_aspect',
                             'SNOMED:has_units',
                             'UMLS:has_structural_class',
                             'UMLS:has_supported_concept_property',
                             'UMLS:has_supported_concept_relationship',
                             'UMLS:may_be_qualified_by'],
         'slot_uri': 'biolink:has_attribute'} })
    deprecated: Optional[bool] = Field(default=None, description="""A boolean flag indicating that an entity is no longer considered current or valid.""", json_schema_extra = { "linkml_meta": {'alias': 'deprecated',
         'definition_uri': 'https://w3id.org/biolink/vocab/deprecated',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['oboInOwl:ObsoleteClass'],
         'slot_uri': 'biolink:deprecated'} })
    provided_by: Optional[List[str]] = Field(default=None, description="""The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.""", json_schema_extra = { "linkml_meta": {'alias': 'provided_by',
         'definition_uri': 'https://w3id.org/biolink/vocab/provided_by',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:provided_by'} })
    xref: Optional[List[str]] = Field(default=None, description="""A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.""", json_schema_extra = { "linkml_meta": {'alias': 'xref',
         'aliases': ['dbxref', 'Dbxref', 'DbXref', 'record_url', 'source_record_urls'],
         'definition_uri': 'https://w3id.org/biolink/vocab/xref',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'gene',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ObservationMatrix',
                       'ObservationRow',
                       'Abbreviation',
                       'MatrixFile',
                       'ColorPalette',
                       'DisplayColor'],
         'in_subset': ['translator_minimal'],
         'narrow_mappings': ['gff3:Dbxref', 'gpi:DB_Xrefs'],
         'slot_uri': 'biolink:xref'} })
    full_name: Optional[str] = Field(default=None, description="""a long-form human readable name for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'full_name',
         'definition_uri': 'https://w3id.org/biolink/vocab/full_name',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:full_name'} })
    synonym: Optional[List[str]] = Field(default=None, description="""Alternate human-readable names for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'synonym',
         'aliases': ['alias'],
         'definition_uri': 'https://w3id.org/biolink/vocab/synonym',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'narrow_mappings': ['skos:altLabel',
                             'gff3:Alias',
                             'AGRKB:synonyms',
                             'gpi:DB_Object_Synonyms',
                             'HANCESTRO:0330',
                             'IAO:0000136',
                             'RXNORM:has_tradename'],
         'slot_uri': 'biolink:synonym'} })


class ObservationMatrix(ProvEntity, NamedThing):
    """
    A matrix (potentially virtual) of observations. Each row represents a specific observation or measurements on specific sample (such as a cell) over a set of variables or features. Each column represents the set of measurements (such as gene expression) of a specific variable (such as gene) over all samples.
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'from_schema': 'https://w3id.org/brain-bican/bke-taxonomy',
         'mixins': ['ProvEntity'],
         'slot_usage': {'content_url': {'from_schema': 'bican_core',
                                        'local_names': {'allen': {'local_name_source': 'allen',
                                                                  'local_name_value': 'url'}},
                                        'name': 'content_url'},
                        'was_derived_from': {'description': 'One of many cell '
                                                            'specimens from which '
                                                            'observations in the '
                                                            'matrix was derived from.',
                                             'from_schema': 'bican_prov',
                                             'multivalued': True,
                                             'name': 'was_derived_from',
                                             'range': 'CellSpecimen'},
                        'was_generated_by': {'description': 'The aggregation process '
                                                            'from which a observation '
                                                            'matrix was generated by.',
                                             'from_schema': 'bican_prov',
                                             'name': 'was_generated_by',
                                             'range': 'ObservationMatrixCreationProcess'},
                        'xref': {'from_schema': 'bican_biolink',
                                 'local_names': {'allen': {'local_name_source': 'allen',
                                                           'local_name_value': 'unique_id'}},
                                 'name': 'xref'}}})

    was_generated_by: Optional[str] = Field(default=None, description="""The aggregation process from which a observation matrix was generated by.""", json_schema_extra = { "linkml_meta": {'alias': 'was_generated_by',
         'domain_of': ['ProvEntity',
                       'CellTypeTaxonomy',
                       'ClusterSet',
                       'ObservationMatrix'],
         'slot_uri': 'prov:wasGeneratedBy'} })
    was_derived_from: Optional[List[str]] = Field(default=None, description="""One of many cell specimens from which observations in the matrix was derived from.""", json_schema_extra = { "linkml_meta": {'alias': 'was_derived_from',
         'domain_of': ['ProvEntity',
                       'CellTypeTaxonomy',
                       'ClusterSet',
                       'ObservationMatrix',
                       'ObservationRow'],
         'slot_uri': 'prov:wasDerivedFrom'} })
    content_url: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'content_url',
         'domain_of': ['GenomeAnnotation', 'ObservationMatrix', 'MatrixFile'],
         'local_names': {'allen': {'local_name_source': 'allen',
                                   'local_name_value': 'url'}},
         'slot_uri': 'schema:url'} })
    xref: Optional[List[str]] = Field(default=None, description="""A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.""", json_schema_extra = { "linkml_meta": {'alias': 'xref',
         'aliases': ['dbxref', 'Dbxref', 'DbXref', 'record_url', 'source_record_urls'],
         'definition_uri': 'https://w3id.org/biolink/vocab/xref',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'gene',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ObservationMatrix',
                       'ObservationRow',
                       'Abbreviation',
                       'MatrixFile',
                       'ColorPalette',
                       'DisplayColor'],
         'in_subset': ['translator_minimal'],
         'local_names': {'allen': {'local_name_source': 'allen',
                                   'local_name_value': 'unique_id'}},
         'narrow_mappings': ['gff3:Dbxref', 'gpi:DB_Xrefs'],
         'slot_uri': 'biolink:xref'} })
    represented_by: Optional[List[str]] = Field(default=None, description="""One of potentially matrix files which together represents the entire observation matrix.""", json_schema_extra = { "linkml_meta": {'alias': 'represented_by', 'domain_of': ['ObservationMatrix']} })
    has_variable: Optional[List[str]] = Field(default=None, description="""One of set of genes which together forms the variable set of an observation matrix.""", json_schema_extra = { "linkml_meta": {'alias': 'has_variable', 'domain_of': ['ObservationMatrix']} })
    id: str = Field(default=..., description="""A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })
    iri: Optional[str] = Field(default=None, description="""An IRI for an entity. This is determined by the id using expansion rules.""", json_schema_extra = { "linkml_meta": {'alias': 'iri',
         'definition_uri': 'https://w3id.org/biolink/vocab/iri',
         'domain_of': ['attribute',
                       'entity',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P854'],
         'in_subset': ['translator_minimal', 'samples'],
         'slot_uri': 'biolink:iri'} })
    category: List[Literal["https://identifiers.org/brain-bican/vocab/ObservationMatrix","bican:ObservationMatrix"]] = Field(default=["bican:ObservationMatrix"], description="""Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}.""", json_schema_extra = { "linkml_meta": {'alias': 'category',
         'definition_uri': 'https://w3id.org/biolink/vocab/category',
         'designates_type': True,
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'type',
         'is_class_field': True,
         'slot_uri': 'biolink:category'} })
    type: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'type',
         'definition_uri': 'https://w3id.org/biolink/vocab/type',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['gff3:type', 'gpi:DB_Object_Type'],
         'mappings': ['rdf:type'],
         'slot_uri': 'rdf:type'} })
    name: Optional[str] = Field(default=None, description="""A human-readable name for an attribute or entity.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })
    description: Optional[str] = Field(default=None, description="""a human-readable description of an entity""", json_schema_extra = { "linkml_meta": {'alias': 'description',
         'aliases': ['definition'],
         'definition_uri': 'https://w3id.org/biolink/vocab/description',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'ColorPalette'],
         'exact_mappings': ['IAO:0000115', 'skos:definitions'],
         'in_subset': ['translator_minimal'],
         'mappings': ['dct:description'],
         'narrow_mappings': ['gff3:Description'],
         'slot_uri': 'dct:description'} })
    has_attribute: Optional[List[str]] = Field(default=None, description="""connects any entity to an attribute""", json_schema_extra = { "linkml_meta": {'alias': 'has_attribute',
         'close_mappings': ['OBI:0001927'],
         'definition_uri': 'https://w3id.org/biolink/vocab/has_attribute',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['SIO:000008'],
         'in_subset': ['samples'],
         'narrow_mappings': ['OBAN:association_has_subject_property',
                             'OBAN:association_has_object_property',
                             'CPT:has_possibly_included_panel_element',
                             'DRUGBANK:category',
                             'EFO:is_executed_in',
                             'HANCESTRO:0301',
                             'LOINC:has_action_guidance',
                             'LOINC:has_adjustment',
                             'LOINC:has_aggregation_view',
                             'LOINC:has_approach_guidance',
                             'LOINC:has_divisor',
                             'LOINC:has_exam',
                             'LOINC:has_method',
                             'LOINC:has_modality_subtype',
                             'LOINC:has_object_guidance',
                             'LOINC:has_scale',
                             'LOINC:has_suffix',
                             'LOINC:has_time_aspect',
                             'LOINC:has_time_modifier',
                             'LOINC:has_timing_of',
                             'NCIT:R88',
                             'NCIT:eo_disease_has_property_or_attribute',
                             'NCIT:has_data_element',
                             'NCIT:has_pharmaceutical_administration_method',
                             'NCIT:has_pharmaceutical_basic_dose_form',
                             'NCIT:has_pharmaceutical_intended_site',
                             'NCIT:has_pharmaceutical_release_characteristics',
                             'NCIT:has_pharmaceutical_state_of_matter',
                             'NCIT:has_pharmaceutical_transformation',
                             'NCIT:is_qualified_by',
                             'NCIT:qualifier_applies_to',
                             'NCIT:role_has_domain',
                             'NCIT:role_has_range',
                             'INO:0000154',
                             'HANCESTRO:0308',
                             'OMIM:has_inheritance_type',
                             'orphanet:C016',
                             'orphanet:C017',
                             'RO:0000053',
                             'RO:0000086',
                             'RO:0000087',
                             'SNOMED:has_access',
                             'SNOMED:has_clinical_course',
                             'SNOMED:has_count_of_base_of_active_ingredient',
                             'SNOMED:has_dose_form_administration_method',
                             'SNOMED:has_dose_form_release_characteristic',
                             'SNOMED:has_dose_form_transformation',
                             'SNOMED:has_finding_context',
                             'SNOMED:has_finding_informer',
                             'SNOMED:has_inherent_attribute',
                             'SNOMED:has_intent',
                             'SNOMED:has_interpretation',
                             'SNOMED:has_laterality',
                             'SNOMED:has_measurement_method',
                             'SNOMED:has_method',
                             'SNOMED:has_priority',
                             'SNOMED:has_procedure_context',
                             'SNOMED:has_process_duration',
                             'SNOMED:has_property',
                             'SNOMED:has_revision_status',
                             'SNOMED:has_scale_type',
                             'SNOMED:has_severity',
                             'SNOMED:has_specimen',
                             'SNOMED:has_state_of_matter',
                             'SNOMED:has_subject_relationship_context',
                             'SNOMED:has_surgical_approach',
                             'SNOMED:has_technique',
                             'SNOMED:has_temporal_context',
                             'SNOMED:has_time_aspect',
                             'SNOMED:has_units',
                             'UMLS:has_structural_class',
                             'UMLS:has_supported_concept_property',
                             'UMLS:has_supported_concept_relationship',
                             'UMLS:may_be_qualified_by'],
         'slot_uri': 'biolink:has_attribute'} })
    deprecated: Optional[bool] = Field(default=None, description="""A boolean flag indicating that an entity is no longer considered current or valid.""", json_schema_extra = { "linkml_meta": {'alias': 'deprecated',
         'definition_uri': 'https://w3id.org/biolink/vocab/deprecated',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['oboInOwl:ObsoleteClass'],
         'slot_uri': 'biolink:deprecated'} })
    provided_by: Optional[List[str]] = Field(default=None, description="""The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.""", json_schema_extra = { "linkml_meta": {'alias': 'provided_by',
         'definition_uri': 'https://w3id.org/biolink/vocab/provided_by',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:provided_by'} })
    full_name: Optional[str] = Field(default=None, description="""a long-form human readable name for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'full_name',
         'definition_uri': 'https://w3id.org/biolink/vocab/full_name',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:full_name'} })
    synonym: Optional[List[str]] = Field(default=None, description="""Alternate human-readable names for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'synonym',
         'aliases': ['alias'],
         'definition_uri': 'https://w3id.org/biolink/vocab/synonym',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'narrow_mappings': ['skos:altLabel',
                             'gff3:Alias',
                             'AGRKB:synonyms',
                             'gpi:DB_Object_Synonyms',
                             'HANCESTRO:0330',
                             'IAO:0000136',
                             'RXNORM:has_tradename'],
         'slot_uri': 'biolink:synonym'} })


class ObservationRow(ProvEntity, NamedThing):
    """
    One specific row of the observation matrix representing a set of measurements preformed on a sample over a set of variables or features.
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'from_schema': 'https://w3id.org/brain-bican/bke-taxonomy',
         'mixins': ['ProvEntity'],
         'slot_usage': {'was_derived_from': {'description': 'The cell specimen from '
                                                            'which the observation was '
                                                            'derived from.',
                                             'from_schema': 'bican_prov',
                                             'name': 'was_derived_from',
                                             'range': 'CellSpecimen'},
                        'xref': {'from_schema': 'bican_biolink',
                                 'local_names': {'allen': {'local_name_source': 'allen',
                                                           'local_name_value': 'unique_id'}},
                                 'name': 'xref'}}})

    was_derived_from: Optional[str] = Field(default=None, description="""The cell specimen from which the observation was derived from.""", json_schema_extra = { "linkml_meta": {'alias': 'was_derived_from',
         'domain_of': ['ProvEntity',
                       'CellTypeTaxonomy',
                       'ClusterSet',
                       'ObservationMatrix',
                       'ObservationRow'],
         'slot_uri': 'prov:wasDerivedFrom'} })
    xref: Optional[List[str]] = Field(default=None, description="""A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.""", json_schema_extra = { "linkml_meta": {'alias': 'xref',
         'aliases': ['dbxref', 'Dbxref', 'DbXref', 'record_url', 'source_record_urls'],
         'definition_uri': 'https://w3id.org/biolink/vocab/xref',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'gene',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ObservationMatrix',
                       'ObservationRow',
                       'Abbreviation',
                       'MatrixFile',
                       'ColorPalette',
                       'DisplayColor'],
         'in_subset': ['translator_minimal'],
         'local_names': {'allen': {'local_name_source': 'allen',
                                   'local_name_value': 'unique_id'}},
         'narrow_mappings': ['gff3:Dbxref', 'gpi:DB_Xrefs'],
         'slot_uri': 'biolink:xref'} })
    part_of_matrix: Optional[str] = Field(default=None, description="""The observation matrix for which is observation row is part of.""", json_schema_extra = { "linkml_meta": {'alias': 'part_of_matrix', 'domain_of': ['ObservationRow']} })
    represented_in: Optional[str] = Field(default=None, description="""The specific file where this observation row is represented.""", json_schema_extra = { "linkml_meta": {'alias': 'represented_in', 'domain_of': ['ObservationRow']} })
    label: Optional[str] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'label', 'domain_of': ['ObservationRow']} })
    was_generated_by: Optional[str] = Field(default=None, description="""Generation is the completion of production of a new entity by an activity. This entity did not exist before generation and becomes available for usage after this generation.""", json_schema_extra = { "linkml_meta": {'alias': 'was_generated_by',
         'domain_of': ['ProvEntity',
                       'CellTypeTaxonomy',
                       'ClusterSet',
                       'ObservationMatrix'],
         'slot_uri': 'prov:wasGeneratedBy'} })
    id: str = Field(default=..., description="""A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })
    iri: Optional[str] = Field(default=None, description="""An IRI for an entity. This is determined by the id using expansion rules.""", json_schema_extra = { "linkml_meta": {'alias': 'iri',
         'definition_uri': 'https://w3id.org/biolink/vocab/iri',
         'domain_of': ['attribute',
                       'entity',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P854'],
         'in_subset': ['translator_minimal', 'samples'],
         'slot_uri': 'biolink:iri'} })
    category: List[Literal["https://identifiers.org/brain-bican/vocab/ObservationRow","bican:ObservationRow"]] = Field(default=["bican:ObservationRow"], description="""Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}.""", json_schema_extra = { "linkml_meta": {'alias': 'category',
         'definition_uri': 'https://w3id.org/biolink/vocab/category',
         'designates_type': True,
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'type',
         'is_class_field': True,
         'slot_uri': 'biolink:category'} })
    type: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'type',
         'definition_uri': 'https://w3id.org/biolink/vocab/type',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['gff3:type', 'gpi:DB_Object_Type'],
         'mappings': ['rdf:type'],
         'slot_uri': 'rdf:type'} })
    name: Optional[str] = Field(default=None, description="""A human-readable name for an attribute or entity.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })
    description: Optional[str] = Field(default=None, description="""a human-readable description of an entity""", json_schema_extra = { "linkml_meta": {'alias': 'description',
         'aliases': ['definition'],
         'definition_uri': 'https://w3id.org/biolink/vocab/description',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'ColorPalette'],
         'exact_mappings': ['IAO:0000115', 'skos:definitions'],
         'in_subset': ['translator_minimal'],
         'mappings': ['dct:description'],
         'narrow_mappings': ['gff3:Description'],
         'slot_uri': 'dct:description'} })
    has_attribute: Optional[List[str]] = Field(default=None, description="""connects any entity to an attribute""", json_schema_extra = { "linkml_meta": {'alias': 'has_attribute',
         'close_mappings': ['OBI:0001927'],
         'definition_uri': 'https://w3id.org/biolink/vocab/has_attribute',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['SIO:000008'],
         'in_subset': ['samples'],
         'narrow_mappings': ['OBAN:association_has_subject_property',
                             'OBAN:association_has_object_property',
                             'CPT:has_possibly_included_panel_element',
                             'DRUGBANK:category',
                             'EFO:is_executed_in',
                             'HANCESTRO:0301',
                             'LOINC:has_action_guidance',
                             'LOINC:has_adjustment',
                             'LOINC:has_aggregation_view',
                             'LOINC:has_approach_guidance',
                             'LOINC:has_divisor',
                             'LOINC:has_exam',
                             'LOINC:has_method',
                             'LOINC:has_modality_subtype',
                             'LOINC:has_object_guidance',
                             'LOINC:has_scale',
                             'LOINC:has_suffix',
                             'LOINC:has_time_aspect',
                             'LOINC:has_time_modifier',
                             'LOINC:has_timing_of',
                             'NCIT:R88',
                             'NCIT:eo_disease_has_property_or_attribute',
                             'NCIT:has_data_element',
                             'NCIT:has_pharmaceutical_administration_method',
                             'NCIT:has_pharmaceutical_basic_dose_form',
                             'NCIT:has_pharmaceutical_intended_site',
                             'NCIT:has_pharmaceutical_release_characteristics',
                             'NCIT:has_pharmaceutical_state_of_matter',
                             'NCIT:has_pharmaceutical_transformation',
                             'NCIT:is_qualified_by',
                             'NCIT:qualifier_applies_to',
                             'NCIT:role_has_domain',
                             'NCIT:role_has_range',
                             'INO:0000154',
                             'HANCESTRO:0308',
                             'OMIM:has_inheritance_type',
                             'orphanet:C016',
                             'orphanet:C017',
                             'RO:0000053',
                             'RO:0000086',
                             'RO:0000087',
                             'SNOMED:has_access',
                             'SNOMED:has_clinical_course',
                             'SNOMED:has_count_of_base_of_active_ingredient',
                             'SNOMED:has_dose_form_administration_method',
                             'SNOMED:has_dose_form_release_characteristic',
                             'SNOMED:has_dose_form_transformation',
                             'SNOMED:has_finding_context',
                             'SNOMED:has_finding_informer',
                             'SNOMED:has_inherent_attribute',
                             'SNOMED:has_intent',
                             'SNOMED:has_interpretation',
                             'SNOMED:has_laterality',
                             'SNOMED:has_measurement_method',
                             'SNOMED:has_method',
                             'SNOMED:has_priority',
                             'SNOMED:has_procedure_context',
                             'SNOMED:has_process_duration',
                             'SNOMED:has_property',
                             'SNOMED:has_revision_status',
                             'SNOMED:has_scale_type',
                             'SNOMED:has_severity',
                             'SNOMED:has_specimen',
                             'SNOMED:has_state_of_matter',
                             'SNOMED:has_subject_relationship_context',
                             'SNOMED:has_surgical_approach',
                             'SNOMED:has_technique',
                             'SNOMED:has_temporal_context',
                             'SNOMED:has_time_aspect',
                             'SNOMED:has_units',
                             'UMLS:has_structural_class',
                             'UMLS:has_supported_concept_property',
                             'UMLS:has_supported_concept_relationship',
                             'UMLS:may_be_qualified_by'],
         'slot_uri': 'biolink:has_attribute'} })
    deprecated: Optional[bool] = Field(default=None, description="""A boolean flag indicating that an entity is no longer considered current or valid.""", json_schema_extra = { "linkml_meta": {'alias': 'deprecated',
         'definition_uri': 'https://w3id.org/biolink/vocab/deprecated',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['oboInOwl:ObsoleteClass'],
         'slot_uri': 'biolink:deprecated'} })
    provided_by: Optional[List[str]] = Field(default=None, description="""The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.""", json_schema_extra = { "linkml_meta": {'alias': 'provided_by',
         'definition_uri': 'https://w3id.org/biolink/vocab/provided_by',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:provided_by'} })
    full_name: Optional[str] = Field(default=None, description="""a long-form human readable name for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'full_name',
         'definition_uri': 'https://w3id.org/biolink/vocab/full_name',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:full_name'} })
    synonym: Optional[List[str]] = Field(default=None, description="""Alternate human-readable names for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'synonym',
         'aliases': ['alias'],
         'definition_uri': 'https://w3id.org/biolink/vocab/synonym',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'narrow_mappings': ['skos:altLabel',
                             'gff3:Alias',
                             'AGRKB:synonyms',
                             'gpi:DB_Object_Synonyms',
                             'HANCESTRO:0330',
                             'IAO:0000136',
                             'RXNORM:has_tradename'],
         'slot_uri': 'biolink:synonym'} })


class CellSpecimen(ProvEntity, NamedThing):
    """
    ( defined as in BERS)
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'from_schema': 'https://w3id.org/brain-bican/bke-taxonomy',
         'mixins': ['ProvEntity']})

    was_derived_from: Optional[str] = Field(default=None, description="""A derivation is a transformation of an entity into another, an update of an entity resulting in a new one, or the construction of a new entity based on a pre-existing entity.""", json_schema_extra = { "linkml_meta": {'alias': 'was_derived_from',
         'domain_of': ['ProvEntity',
                       'CellTypeTaxonomy',
                       'ClusterSet',
                       'ObservationMatrix',
                       'ObservationRow'],
         'slot_uri': 'prov:wasDerivedFrom'} })
    was_generated_by: Optional[str] = Field(default=None, description="""Generation is the completion of production of a new entity by an activity. This entity did not exist before generation and becomes available for usage after this generation.""", json_schema_extra = { "linkml_meta": {'alias': 'was_generated_by',
         'domain_of': ['ProvEntity',
                       'CellTypeTaxonomy',
                       'ClusterSet',
                       'ObservationMatrix'],
         'slot_uri': 'prov:wasGeneratedBy'} })
    id: str = Field(default=..., description="""A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })
    iri: Optional[str] = Field(default=None, description="""An IRI for an entity. This is determined by the id using expansion rules.""", json_schema_extra = { "linkml_meta": {'alias': 'iri',
         'definition_uri': 'https://w3id.org/biolink/vocab/iri',
         'domain_of': ['attribute',
                       'entity',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P854'],
         'in_subset': ['translator_minimal', 'samples'],
         'slot_uri': 'biolink:iri'} })
    category: List[Literal["https://identifiers.org/brain-bican/vocab/CellSpecimen","bican:CellSpecimen"]] = Field(default=["bican:CellSpecimen"], description="""Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}.""", json_schema_extra = { "linkml_meta": {'alias': 'category',
         'definition_uri': 'https://w3id.org/biolink/vocab/category',
         'designates_type': True,
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'type',
         'is_class_field': True,
         'slot_uri': 'biolink:category'} })
    type: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'type',
         'definition_uri': 'https://w3id.org/biolink/vocab/type',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['gff3:type', 'gpi:DB_Object_Type'],
         'mappings': ['rdf:type'],
         'slot_uri': 'rdf:type'} })
    name: Optional[str] = Field(default=None, description="""A human-readable name for an attribute or entity.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })
    description: Optional[str] = Field(default=None, description="""a human-readable description of an entity""", json_schema_extra = { "linkml_meta": {'alias': 'description',
         'aliases': ['definition'],
         'definition_uri': 'https://w3id.org/biolink/vocab/description',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'ColorPalette'],
         'exact_mappings': ['IAO:0000115', 'skos:definitions'],
         'in_subset': ['translator_minimal'],
         'mappings': ['dct:description'],
         'narrow_mappings': ['gff3:Description'],
         'slot_uri': 'dct:description'} })
    has_attribute: Optional[List[str]] = Field(default=None, description="""connects any entity to an attribute""", json_schema_extra = { "linkml_meta": {'alias': 'has_attribute',
         'close_mappings': ['OBI:0001927'],
         'definition_uri': 'https://w3id.org/biolink/vocab/has_attribute',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['SIO:000008'],
         'in_subset': ['samples'],
         'narrow_mappings': ['OBAN:association_has_subject_property',
                             'OBAN:association_has_object_property',
                             'CPT:has_possibly_included_panel_element',
                             'DRUGBANK:category',
                             'EFO:is_executed_in',
                             'HANCESTRO:0301',
                             'LOINC:has_action_guidance',
                             'LOINC:has_adjustment',
                             'LOINC:has_aggregation_view',
                             'LOINC:has_approach_guidance',
                             'LOINC:has_divisor',
                             'LOINC:has_exam',
                             'LOINC:has_method',
                             'LOINC:has_modality_subtype',
                             'LOINC:has_object_guidance',
                             'LOINC:has_scale',
                             'LOINC:has_suffix',
                             'LOINC:has_time_aspect',
                             'LOINC:has_time_modifier',
                             'LOINC:has_timing_of',
                             'NCIT:R88',
                             'NCIT:eo_disease_has_property_or_attribute',
                             'NCIT:has_data_element',
                             'NCIT:has_pharmaceutical_administration_method',
                             'NCIT:has_pharmaceutical_basic_dose_form',
                             'NCIT:has_pharmaceutical_intended_site',
                             'NCIT:has_pharmaceutical_release_characteristics',
                             'NCIT:has_pharmaceutical_state_of_matter',
                             'NCIT:has_pharmaceutical_transformation',
                             'NCIT:is_qualified_by',
                             'NCIT:qualifier_applies_to',
                             'NCIT:role_has_domain',
                             'NCIT:role_has_range',
                             'INO:0000154',
                             'HANCESTRO:0308',
                             'OMIM:has_inheritance_type',
                             'orphanet:C016',
                             'orphanet:C017',
                             'RO:0000053',
                             'RO:0000086',
                             'RO:0000087',
                             'SNOMED:has_access',
                             'SNOMED:has_clinical_course',
                             'SNOMED:has_count_of_base_of_active_ingredient',
                             'SNOMED:has_dose_form_administration_method',
                             'SNOMED:has_dose_form_release_characteristic',
                             'SNOMED:has_dose_form_transformation',
                             'SNOMED:has_finding_context',
                             'SNOMED:has_finding_informer',
                             'SNOMED:has_inherent_attribute',
                             'SNOMED:has_intent',
                             'SNOMED:has_interpretation',
                             'SNOMED:has_laterality',
                             'SNOMED:has_measurement_method',
                             'SNOMED:has_method',
                             'SNOMED:has_priority',
                             'SNOMED:has_procedure_context',
                             'SNOMED:has_process_duration',
                             'SNOMED:has_property',
                             'SNOMED:has_revision_status',
                             'SNOMED:has_scale_type',
                             'SNOMED:has_severity',
                             'SNOMED:has_specimen',
                             'SNOMED:has_state_of_matter',
                             'SNOMED:has_subject_relationship_context',
                             'SNOMED:has_surgical_approach',
                             'SNOMED:has_technique',
                             'SNOMED:has_temporal_context',
                             'SNOMED:has_time_aspect',
                             'SNOMED:has_units',
                             'UMLS:has_structural_class',
                             'UMLS:has_supported_concept_property',
                             'UMLS:has_supported_concept_relationship',
                             'UMLS:may_be_qualified_by'],
         'slot_uri': 'biolink:has_attribute'} })
    deprecated: Optional[bool] = Field(default=None, description="""A boolean flag indicating that an entity is no longer considered current or valid.""", json_schema_extra = { "linkml_meta": {'alias': 'deprecated',
         'definition_uri': 'https://w3id.org/biolink/vocab/deprecated',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['oboInOwl:ObsoleteClass'],
         'slot_uri': 'biolink:deprecated'} })
    provided_by: Optional[List[str]] = Field(default=None, description="""The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.""", json_schema_extra = { "linkml_meta": {'alias': 'provided_by',
         'definition_uri': 'https://w3id.org/biolink/vocab/provided_by',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:provided_by'} })
    xref: Optional[List[str]] = Field(default=None, description="""A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.""", json_schema_extra = { "linkml_meta": {'alias': 'xref',
         'aliases': ['dbxref', 'Dbxref', 'DbXref', 'record_url', 'source_record_urls'],
         'definition_uri': 'https://w3id.org/biolink/vocab/xref',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'gene',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ObservationMatrix',
                       'ObservationRow',
                       'Abbreviation',
                       'MatrixFile',
                       'ColorPalette',
                       'DisplayColor'],
         'in_subset': ['translator_minimal'],
         'narrow_mappings': ['gff3:Dbxref', 'gpi:DB_Xrefs'],
         'slot_uri': 'biolink:xref'} })
    full_name: Optional[str] = Field(default=None, description="""a long-form human readable name for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'full_name',
         'definition_uri': 'https://w3id.org/biolink/vocab/full_name',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:full_name'} })
    synonym: Optional[List[str]] = Field(default=None, description="""Alternate human-readable names for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'synonym',
         'aliases': ['alias'],
         'definition_uri': 'https://w3id.org/biolink/vocab/synonym',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'narrow_mappings': ['skos:altLabel',
                             'gff3:Alias',
                             'AGRKB:synonyms',
                             'gpi:DB_Object_Synonyms',
                             'HANCESTRO:0330',
                             'IAO:0000136',
                             'RXNORM:has_tradename'],
         'slot_uri': 'biolink:synonym'} })


class Abbreviation(ProvEntity, NamedThing):
    """
    Maps an abbreviation string to its decoded meaning. Optionally the abbreviation can be link to one or more entities it denotes.
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'from_schema': 'https://w3id.org/brain-bican/bke-taxonomy',
         'mixins': ['ProvEntity'],
         'slot_usage': {'id': {'description': '( database GUID)',
                               'from_schema': 'bican_biolink',
                               'name': 'id',
                               'range': 'string'},
                        'xref': {'from_schema': 'bican_biolink',
                                 'local_names': {'allen': {'local_name_source': 'allen',
                                                           'local_name_value': 'unique_id'}},
                                 'name': 'xref'}}})

    id: str = Field(default=..., description="""( database GUID)""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })
    xref: Optional[List[str]] = Field(default=None, description="""A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.""", json_schema_extra = { "linkml_meta": {'alias': 'xref',
         'aliases': ['dbxref', 'Dbxref', 'DbXref', 'record_url', 'source_record_urls'],
         'definition_uri': 'https://w3id.org/biolink/vocab/xref',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'gene',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ObservationMatrix',
                       'ObservationRow',
                       'Abbreviation',
                       'MatrixFile',
                       'ColorPalette',
                       'DisplayColor'],
         'in_subset': ['translator_minimal'],
         'local_names': {'allen': {'local_name_source': 'allen',
                                   'local_name_value': 'unique_id'}},
         'narrow_mappings': ['gff3:Dbxref', 'gpi:DB_Xrefs'],
         'slot_uri': 'biolink:xref'} })
    denotes_gene_annotation: Optional[List[str]] = Field(default=None, description="""One of potentially many gene annotation terms to which the abbreviation denotes.""", json_schema_extra = { "linkml_meta": {'alias': 'denotes_gene_annotation',
         'domain_of': ['Abbreviation'],
         'local_names': {'allen': {'local_name_source': 'allen',
                                   'local_name_value': 'denotes'}}} })
    denotes_parcellation_term: Optional[List[str]] = Field(default=None, description="""One of potentially many parcellation terms (anatomical structures) which the abbreviation denotes.""", json_schema_extra = { "linkml_meta": {'alias': 'denotes_parcellation_term',
         'domain_of': ['Abbreviation'],
         'local_names': {'allen': {'local_name_source': 'allen',
                                   'local_name_value': 'denotes'}}} })
    denotes_cell_type: Optional[List[str]] = Field(default=None, description="""One of potentially many cell type terms  which the abbreviation denotes.""", json_schema_extra = { "linkml_meta": {'alias': 'denotes_cell_type',
         'domain_of': ['Abbreviation'],
         'local_names': {'allen': {'local_name_source': 'allen',
                                   'local_name_value': 'denotes'}}} })
    term: Optional[str] = Field(default=None, description="""An abbreviation term.""", json_schema_extra = { "linkml_meta": {'alias': 'term', 'domain_of': ['Abbreviation'], 'examples': [{'value': 'IT'}]} })
    meaning: Optional[str] = Field(default=None, description="""The meaning of an abbreviation term.""", json_schema_extra = { "linkml_meta": {'alias': 'meaning',
         'domain_of': ['Abbreviation'],
         'examples': [{'value': 'intratelencephalic-projecting glutamatergic cortical '
                                'neuron'}]} })
    entity_type: Optional[AbbreviationEntityType] = Field(default=None, description="""The entity type which the abbreviation term denotes.""", json_schema_extra = { "linkml_meta": {'alias': 'entity_type',
         'domain_of': ['Abbreviation'],
         'examples': [{'value': 'cell type'}]} })
    was_derived_from: Optional[str] = Field(default=None, description="""A derivation is a transformation of an entity into another, an update of an entity resulting in a new one, or the construction of a new entity based on a pre-existing entity.""", json_schema_extra = { "linkml_meta": {'alias': 'was_derived_from',
         'domain_of': ['ProvEntity',
                       'CellTypeTaxonomy',
                       'ClusterSet',
                       'ObservationMatrix',
                       'ObservationRow'],
         'slot_uri': 'prov:wasDerivedFrom'} })
    was_generated_by: Optional[str] = Field(default=None, description="""Generation is the completion of production of a new entity by an activity. This entity did not exist before generation and becomes available for usage after this generation.""", json_schema_extra = { "linkml_meta": {'alias': 'was_generated_by',
         'domain_of': ['ProvEntity',
                       'CellTypeTaxonomy',
                       'ClusterSet',
                       'ObservationMatrix'],
         'slot_uri': 'prov:wasGeneratedBy'} })
    iri: Optional[str] = Field(default=None, description="""An IRI for an entity. This is determined by the id using expansion rules.""", json_schema_extra = { "linkml_meta": {'alias': 'iri',
         'definition_uri': 'https://w3id.org/biolink/vocab/iri',
         'domain_of': ['attribute',
                       'entity',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P854'],
         'in_subset': ['translator_minimal', 'samples'],
         'slot_uri': 'biolink:iri'} })
    category: List[Literal["https://identifiers.org/brain-bican/vocab/Abbreviation","bican:Abbreviation"]] = Field(default=["bican:Abbreviation"], description="""Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}.""", json_schema_extra = { "linkml_meta": {'alias': 'category',
         'definition_uri': 'https://w3id.org/biolink/vocab/category',
         'designates_type': True,
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'type',
         'is_class_field': True,
         'slot_uri': 'biolink:category'} })
    type: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'type',
         'definition_uri': 'https://w3id.org/biolink/vocab/type',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['gff3:type', 'gpi:DB_Object_Type'],
         'mappings': ['rdf:type'],
         'slot_uri': 'rdf:type'} })
    name: Optional[str] = Field(default=None, description="""A human-readable name for an attribute or entity.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })
    description: Optional[str] = Field(default=None, description="""a human-readable description of an entity""", json_schema_extra = { "linkml_meta": {'alias': 'description',
         'aliases': ['definition'],
         'definition_uri': 'https://w3id.org/biolink/vocab/description',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'ColorPalette'],
         'exact_mappings': ['IAO:0000115', 'skos:definitions'],
         'in_subset': ['translator_minimal'],
         'mappings': ['dct:description'],
         'narrow_mappings': ['gff3:Description'],
         'slot_uri': 'dct:description'} })
    has_attribute: Optional[List[str]] = Field(default=None, description="""connects any entity to an attribute""", json_schema_extra = { "linkml_meta": {'alias': 'has_attribute',
         'close_mappings': ['OBI:0001927'],
         'definition_uri': 'https://w3id.org/biolink/vocab/has_attribute',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['SIO:000008'],
         'in_subset': ['samples'],
         'narrow_mappings': ['OBAN:association_has_subject_property',
                             'OBAN:association_has_object_property',
                             'CPT:has_possibly_included_panel_element',
                             'DRUGBANK:category',
                             'EFO:is_executed_in',
                             'HANCESTRO:0301',
                             'LOINC:has_action_guidance',
                             'LOINC:has_adjustment',
                             'LOINC:has_aggregation_view',
                             'LOINC:has_approach_guidance',
                             'LOINC:has_divisor',
                             'LOINC:has_exam',
                             'LOINC:has_method',
                             'LOINC:has_modality_subtype',
                             'LOINC:has_object_guidance',
                             'LOINC:has_scale',
                             'LOINC:has_suffix',
                             'LOINC:has_time_aspect',
                             'LOINC:has_time_modifier',
                             'LOINC:has_timing_of',
                             'NCIT:R88',
                             'NCIT:eo_disease_has_property_or_attribute',
                             'NCIT:has_data_element',
                             'NCIT:has_pharmaceutical_administration_method',
                             'NCIT:has_pharmaceutical_basic_dose_form',
                             'NCIT:has_pharmaceutical_intended_site',
                             'NCIT:has_pharmaceutical_release_characteristics',
                             'NCIT:has_pharmaceutical_state_of_matter',
                             'NCIT:has_pharmaceutical_transformation',
                             'NCIT:is_qualified_by',
                             'NCIT:qualifier_applies_to',
                             'NCIT:role_has_domain',
                             'NCIT:role_has_range',
                             'INO:0000154',
                             'HANCESTRO:0308',
                             'OMIM:has_inheritance_type',
                             'orphanet:C016',
                             'orphanet:C017',
                             'RO:0000053',
                             'RO:0000086',
                             'RO:0000087',
                             'SNOMED:has_access',
                             'SNOMED:has_clinical_course',
                             'SNOMED:has_count_of_base_of_active_ingredient',
                             'SNOMED:has_dose_form_administration_method',
                             'SNOMED:has_dose_form_release_characteristic',
                             'SNOMED:has_dose_form_transformation',
                             'SNOMED:has_finding_context',
                             'SNOMED:has_finding_informer',
                             'SNOMED:has_inherent_attribute',
                             'SNOMED:has_intent',
                             'SNOMED:has_interpretation',
                             'SNOMED:has_laterality',
                             'SNOMED:has_measurement_method',
                             'SNOMED:has_method',
                             'SNOMED:has_priority',
                             'SNOMED:has_procedure_context',
                             'SNOMED:has_process_duration',
                             'SNOMED:has_property',
                             'SNOMED:has_revision_status',
                             'SNOMED:has_scale_type',
                             'SNOMED:has_severity',
                             'SNOMED:has_specimen',
                             'SNOMED:has_state_of_matter',
                             'SNOMED:has_subject_relationship_context',
                             'SNOMED:has_surgical_approach',
                             'SNOMED:has_technique',
                             'SNOMED:has_temporal_context',
                             'SNOMED:has_time_aspect',
                             'SNOMED:has_units',
                             'UMLS:has_structural_class',
                             'UMLS:has_supported_concept_property',
                             'UMLS:has_supported_concept_relationship',
                             'UMLS:may_be_qualified_by'],
         'slot_uri': 'biolink:has_attribute'} })
    deprecated: Optional[bool] = Field(default=None, description="""A boolean flag indicating that an entity is no longer considered current or valid.""", json_schema_extra = { "linkml_meta": {'alias': 'deprecated',
         'definition_uri': 'https://w3id.org/biolink/vocab/deprecated',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['oboInOwl:ObsoleteClass'],
         'slot_uri': 'biolink:deprecated'} })
    provided_by: Optional[List[str]] = Field(default=None, description="""The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.""", json_schema_extra = { "linkml_meta": {'alias': 'provided_by',
         'definition_uri': 'https://w3id.org/biolink/vocab/provided_by',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:provided_by'} })
    full_name: Optional[str] = Field(default=None, description="""a long-form human readable name for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'full_name',
         'definition_uri': 'https://w3id.org/biolink/vocab/full_name',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:full_name'} })
    synonym: Optional[List[str]] = Field(default=None, description="""Alternate human-readable names for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'synonym',
         'aliases': ['alias'],
         'definition_uri': 'https://w3id.org/biolink/vocab/synonym',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'narrow_mappings': ['skos:altLabel',
                             'gff3:Alias',
                             'AGRKB:synonyms',
                             'gpi:DB_Object_Synonyms',
                             'HANCESTRO:0330',
                             'IAO:0000136',
                             'RXNORM:has_tradename'],
         'slot_uri': 'biolink:synonym'} })


class MatrixFile(ProvEntity, NamedThing):
    """
    A digital file containing the representation of full or partial data matrix.
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'from_schema': 'https://w3id.org/brain-bican/bke-taxonomy',
         'mixins': ['ProvEntity'],
         'slot_usage': {'content_url': {'from_schema': 'bican_core',
                                        'local_names': {'allen': {'local_name_source': 'allen',
                                                                  'local_name_value': 'url'}},
                                        'name': 'content_url'},
                        'xref': {'from_schema': 'bican_biolink',
                                 'local_names': {'allen': {'local_name_source': 'allen',
                                                           'local_name_value': 'unique_id'}},
                                 'name': 'xref'}}})

    content_url: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'content_url',
         'domain_of': ['GenomeAnnotation', 'ObservationMatrix', 'MatrixFile'],
         'local_names': {'allen': {'local_name_source': 'allen',
                                   'local_name_value': 'url'}},
         'slot_uri': 'schema:url'} })
    xref: Optional[List[str]] = Field(default=None, description="""A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.""", json_schema_extra = { "linkml_meta": {'alias': 'xref',
         'aliases': ['dbxref', 'Dbxref', 'DbXref', 'record_url', 'source_record_urls'],
         'definition_uri': 'https://w3id.org/biolink/vocab/xref',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'gene',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ObservationMatrix',
                       'ObservationRow',
                       'Abbreviation',
                       'MatrixFile',
                       'ColorPalette',
                       'DisplayColor'],
         'in_subset': ['translator_minimal'],
         'local_names': {'allen': {'local_name_source': 'allen',
                                   'local_name_value': 'unique_id'}},
         'narrow_mappings': ['gff3:Dbxref', 'gpi:DB_Xrefs'],
         'slot_uri': 'biolink:xref'} })
    was_derived_from: Optional[str] = Field(default=None, description="""A derivation is a transformation of an entity into another, an update of an entity resulting in a new one, or the construction of a new entity based on a pre-existing entity.""", json_schema_extra = { "linkml_meta": {'alias': 'was_derived_from',
         'domain_of': ['ProvEntity',
                       'CellTypeTaxonomy',
                       'ClusterSet',
                       'ObservationMatrix',
                       'ObservationRow'],
         'slot_uri': 'prov:wasDerivedFrom'} })
    was_generated_by: Optional[str] = Field(default=None, description="""Generation is the completion of production of a new entity by an activity. This entity did not exist before generation and becomes available for usage after this generation.""", json_schema_extra = { "linkml_meta": {'alias': 'was_generated_by',
         'domain_of': ['ProvEntity',
                       'CellTypeTaxonomy',
                       'ClusterSet',
                       'ObservationMatrix'],
         'slot_uri': 'prov:wasGeneratedBy'} })
    id: str = Field(default=..., description="""A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })
    iri: Optional[str] = Field(default=None, description="""An IRI for an entity. This is determined by the id using expansion rules.""", json_schema_extra = { "linkml_meta": {'alias': 'iri',
         'definition_uri': 'https://w3id.org/biolink/vocab/iri',
         'domain_of': ['attribute',
                       'entity',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P854'],
         'in_subset': ['translator_minimal', 'samples'],
         'slot_uri': 'biolink:iri'} })
    category: List[Literal["https://identifiers.org/brain-bican/vocab/MatrixFile","bican:MatrixFile"]] = Field(default=["bican:MatrixFile"], description="""Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}.""", json_schema_extra = { "linkml_meta": {'alias': 'category',
         'definition_uri': 'https://w3id.org/biolink/vocab/category',
         'designates_type': True,
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'type',
         'is_class_field': True,
         'slot_uri': 'biolink:category'} })
    type: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'type',
         'definition_uri': 'https://w3id.org/biolink/vocab/type',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['gff3:type', 'gpi:DB_Object_Type'],
         'mappings': ['rdf:type'],
         'slot_uri': 'rdf:type'} })
    name: Optional[str] = Field(default=None, description="""A human-readable name for an attribute or entity.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })
    description: Optional[str] = Field(default=None, description="""a human-readable description of an entity""", json_schema_extra = { "linkml_meta": {'alias': 'description',
         'aliases': ['definition'],
         'definition_uri': 'https://w3id.org/biolink/vocab/description',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'ColorPalette'],
         'exact_mappings': ['IAO:0000115', 'skos:definitions'],
         'in_subset': ['translator_minimal'],
         'mappings': ['dct:description'],
         'narrow_mappings': ['gff3:Description'],
         'slot_uri': 'dct:description'} })
    has_attribute: Optional[List[str]] = Field(default=None, description="""connects any entity to an attribute""", json_schema_extra = { "linkml_meta": {'alias': 'has_attribute',
         'close_mappings': ['OBI:0001927'],
         'definition_uri': 'https://w3id.org/biolink/vocab/has_attribute',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['SIO:000008'],
         'in_subset': ['samples'],
         'narrow_mappings': ['OBAN:association_has_subject_property',
                             'OBAN:association_has_object_property',
                             'CPT:has_possibly_included_panel_element',
                             'DRUGBANK:category',
                             'EFO:is_executed_in',
                             'HANCESTRO:0301',
                             'LOINC:has_action_guidance',
                             'LOINC:has_adjustment',
                             'LOINC:has_aggregation_view',
                             'LOINC:has_approach_guidance',
                             'LOINC:has_divisor',
                             'LOINC:has_exam',
                             'LOINC:has_method',
                             'LOINC:has_modality_subtype',
                             'LOINC:has_object_guidance',
                             'LOINC:has_scale',
                             'LOINC:has_suffix',
                             'LOINC:has_time_aspect',
                             'LOINC:has_time_modifier',
                             'LOINC:has_timing_of',
                             'NCIT:R88',
                             'NCIT:eo_disease_has_property_or_attribute',
                             'NCIT:has_data_element',
                             'NCIT:has_pharmaceutical_administration_method',
                             'NCIT:has_pharmaceutical_basic_dose_form',
                             'NCIT:has_pharmaceutical_intended_site',
                             'NCIT:has_pharmaceutical_release_characteristics',
                             'NCIT:has_pharmaceutical_state_of_matter',
                             'NCIT:has_pharmaceutical_transformation',
                             'NCIT:is_qualified_by',
                             'NCIT:qualifier_applies_to',
                             'NCIT:role_has_domain',
                             'NCIT:role_has_range',
                             'INO:0000154',
                             'HANCESTRO:0308',
                             'OMIM:has_inheritance_type',
                             'orphanet:C016',
                             'orphanet:C017',
                             'RO:0000053',
                             'RO:0000086',
                             'RO:0000087',
                             'SNOMED:has_access',
                             'SNOMED:has_clinical_course',
                             'SNOMED:has_count_of_base_of_active_ingredient',
                             'SNOMED:has_dose_form_administration_method',
                             'SNOMED:has_dose_form_release_characteristic',
                             'SNOMED:has_dose_form_transformation',
                             'SNOMED:has_finding_context',
                             'SNOMED:has_finding_informer',
                             'SNOMED:has_inherent_attribute',
                             'SNOMED:has_intent',
                             'SNOMED:has_interpretation',
                             'SNOMED:has_laterality',
                             'SNOMED:has_measurement_method',
                             'SNOMED:has_method',
                             'SNOMED:has_priority',
                             'SNOMED:has_procedure_context',
                             'SNOMED:has_process_duration',
                             'SNOMED:has_property',
                             'SNOMED:has_revision_status',
                             'SNOMED:has_scale_type',
                             'SNOMED:has_severity',
                             'SNOMED:has_specimen',
                             'SNOMED:has_state_of_matter',
                             'SNOMED:has_subject_relationship_context',
                             'SNOMED:has_surgical_approach',
                             'SNOMED:has_technique',
                             'SNOMED:has_temporal_context',
                             'SNOMED:has_time_aspect',
                             'SNOMED:has_units',
                             'UMLS:has_structural_class',
                             'UMLS:has_supported_concept_property',
                             'UMLS:has_supported_concept_relationship',
                             'UMLS:may_be_qualified_by'],
         'slot_uri': 'biolink:has_attribute'} })
    deprecated: Optional[bool] = Field(default=None, description="""A boolean flag indicating that an entity is no longer considered current or valid.""", json_schema_extra = { "linkml_meta": {'alias': 'deprecated',
         'definition_uri': 'https://w3id.org/biolink/vocab/deprecated',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['oboInOwl:ObsoleteClass'],
         'slot_uri': 'biolink:deprecated'} })
    provided_by: Optional[List[str]] = Field(default=None, description="""The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.""", json_schema_extra = { "linkml_meta": {'alias': 'provided_by',
         'definition_uri': 'https://w3id.org/biolink/vocab/provided_by',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:provided_by'} })
    full_name: Optional[str] = Field(default=None, description="""a long-form human readable name for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'full_name',
         'definition_uri': 'https://w3id.org/biolink/vocab/full_name',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:full_name'} })
    synonym: Optional[List[str]] = Field(default=None, description="""Alternate human-readable names for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'synonym',
         'aliases': ['alias'],
         'definition_uri': 'https://w3id.org/biolink/vocab/synonym',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'narrow_mappings': ['skos:altLabel',
                             'gff3:Alias',
                             'AGRKB:synonyms',
                             'gpi:DB_Object_Synonyms',
                             'HANCESTRO:0330',
                             'IAO:0000136',
                             'RXNORM:has_tradename'],
         'slot_uri': 'biolink:synonym'} })


class ColorPalette(ProvEntity, NamedThing):
    """
    A schematic set of display colors that can be applied to individual components of the associated entity set (for example, a taxonomy).
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'from_schema': 'https://w3id.org/brain-bican/bke-taxonomy',
         'mixins': ['ProvEntity'],
         'slot_usage': {'description': {'description': 'Description of the color '
                                                       'palette.',
                                        'from_schema': 'bican_biolink',
                                        'name': 'description',
                                        'range': 'string'},
                        'id': {'description': '( database GUID)',
                               'from_schema': 'bican_biolink',
                               'name': 'id',
                               'range': 'string'},
                        'name': {'description': 'Name of the color palette.',
                                 'from_schema': 'bican_biolink',
                                 'name': 'name',
                                 'range': 'string'},
                        'xref': {'from_schema': 'bican_biolink',
                                 'local_names': {'allen': {'local_name_source': 'allen',
                                                           'local_name_value': 'unique_id'}},
                                 'name': 'xref'}}})

    id: str = Field(default=..., description="""( database GUID)""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })
    name: Optional[str] = Field(default=None, description="""Name of the color palette.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })
    description: Optional[str] = Field(default=None, description="""Description of the color palette.""", json_schema_extra = { "linkml_meta": {'alias': 'description',
         'aliases': ['definition'],
         'definition_uri': 'https://w3id.org/biolink/vocab/description',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'ColorPalette'],
         'exact_mappings': ['IAO:0000115', 'skos:definitions'],
         'in_subset': ['translator_minimal'],
         'mappings': ['dct:description'],
         'narrow_mappings': ['gff3:Description'],
         'slot_uri': 'dct:description'} })
    xref: Optional[List[str]] = Field(default=None, description="""A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.""", json_schema_extra = { "linkml_meta": {'alias': 'xref',
         'aliases': ['dbxref', 'Dbxref', 'DbXref', 'record_url', 'source_record_urls'],
         'definition_uri': 'https://w3id.org/biolink/vocab/xref',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'gene',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ObservationMatrix',
                       'ObservationRow',
                       'Abbreviation',
                       'MatrixFile',
                       'ColorPalette',
                       'DisplayColor'],
         'in_subset': ['translator_minimal'],
         'local_names': {'allen': {'local_name_source': 'allen',
                                   'local_name_value': 'unique_id'}},
         'narrow_mappings': ['gff3:Dbxref', 'gpi:DB_Xrefs'],
         'slot_uri': 'biolink:xref'} })
    is_palette_for: Optional[str] = Field(default=None, description="""The cell types taxonomy for which the palette provides display color properties for.""", json_schema_extra = { "linkml_meta": {'alias': 'is_palette_for', 'domain_of': ['ColorPalette']} })
    was_derived_from: Optional[str] = Field(default=None, description="""A derivation is a transformation of an entity into another, an update of an entity resulting in a new one, or the construction of a new entity based on a pre-existing entity.""", json_schema_extra = { "linkml_meta": {'alias': 'was_derived_from',
         'domain_of': ['ProvEntity',
                       'CellTypeTaxonomy',
                       'ClusterSet',
                       'ObservationMatrix',
                       'ObservationRow'],
         'slot_uri': 'prov:wasDerivedFrom'} })
    was_generated_by: Optional[str] = Field(default=None, description="""Generation is the completion of production of a new entity by an activity. This entity did not exist before generation and becomes available for usage after this generation.""", json_schema_extra = { "linkml_meta": {'alias': 'was_generated_by',
         'domain_of': ['ProvEntity',
                       'CellTypeTaxonomy',
                       'ClusterSet',
                       'ObservationMatrix'],
         'slot_uri': 'prov:wasGeneratedBy'} })
    iri: Optional[str] = Field(default=None, description="""An IRI for an entity. This is determined by the id using expansion rules.""", json_schema_extra = { "linkml_meta": {'alias': 'iri',
         'definition_uri': 'https://w3id.org/biolink/vocab/iri',
         'domain_of': ['attribute',
                       'entity',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P854'],
         'in_subset': ['translator_minimal', 'samples'],
         'slot_uri': 'biolink:iri'} })
    category: List[Literal["https://identifiers.org/brain-bican/vocab/ColorPalette","bican:ColorPalette"]] = Field(default=["bican:ColorPalette"], description="""Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}.""", json_schema_extra = { "linkml_meta": {'alias': 'category',
         'definition_uri': 'https://w3id.org/biolink/vocab/category',
         'designates_type': True,
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'type',
         'is_class_field': True,
         'slot_uri': 'biolink:category'} })
    type: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'type',
         'definition_uri': 'https://w3id.org/biolink/vocab/type',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['gff3:type', 'gpi:DB_Object_Type'],
         'mappings': ['rdf:type'],
         'slot_uri': 'rdf:type'} })
    has_attribute: Optional[List[str]] = Field(default=None, description="""connects any entity to an attribute""", json_schema_extra = { "linkml_meta": {'alias': 'has_attribute',
         'close_mappings': ['OBI:0001927'],
         'definition_uri': 'https://w3id.org/biolink/vocab/has_attribute',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['SIO:000008'],
         'in_subset': ['samples'],
         'narrow_mappings': ['OBAN:association_has_subject_property',
                             'OBAN:association_has_object_property',
                             'CPT:has_possibly_included_panel_element',
                             'DRUGBANK:category',
                             'EFO:is_executed_in',
                             'HANCESTRO:0301',
                             'LOINC:has_action_guidance',
                             'LOINC:has_adjustment',
                             'LOINC:has_aggregation_view',
                             'LOINC:has_approach_guidance',
                             'LOINC:has_divisor',
                             'LOINC:has_exam',
                             'LOINC:has_method',
                             'LOINC:has_modality_subtype',
                             'LOINC:has_object_guidance',
                             'LOINC:has_scale',
                             'LOINC:has_suffix',
                             'LOINC:has_time_aspect',
                             'LOINC:has_time_modifier',
                             'LOINC:has_timing_of',
                             'NCIT:R88',
                             'NCIT:eo_disease_has_property_or_attribute',
                             'NCIT:has_data_element',
                             'NCIT:has_pharmaceutical_administration_method',
                             'NCIT:has_pharmaceutical_basic_dose_form',
                             'NCIT:has_pharmaceutical_intended_site',
                             'NCIT:has_pharmaceutical_release_characteristics',
                             'NCIT:has_pharmaceutical_state_of_matter',
                             'NCIT:has_pharmaceutical_transformation',
                             'NCIT:is_qualified_by',
                             'NCIT:qualifier_applies_to',
                             'NCIT:role_has_domain',
                             'NCIT:role_has_range',
                             'INO:0000154',
                             'HANCESTRO:0308',
                             'OMIM:has_inheritance_type',
                             'orphanet:C016',
                             'orphanet:C017',
                             'RO:0000053',
                             'RO:0000086',
                             'RO:0000087',
                             'SNOMED:has_access',
                             'SNOMED:has_clinical_course',
                             'SNOMED:has_count_of_base_of_active_ingredient',
                             'SNOMED:has_dose_form_administration_method',
                             'SNOMED:has_dose_form_release_characteristic',
                             'SNOMED:has_dose_form_transformation',
                             'SNOMED:has_finding_context',
                             'SNOMED:has_finding_informer',
                             'SNOMED:has_inherent_attribute',
                             'SNOMED:has_intent',
                             'SNOMED:has_interpretation',
                             'SNOMED:has_laterality',
                             'SNOMED:has_measurement_method',
                             'SNOMED:has_method',
                             'SNOMED:has_priority',
                             'SNOMED:has_procedure_context',
                             'SNOMED:has_process_duration',
                             'SNOMED:has_property',
                             'SNOMED:has_revision_status',
                             'SNOMED:has_scale_type',
                             'SNOMED:has_severity',
                             'SNOMED:has_specimen',
                             'SNOMED:has_state_of_matter',
                             'SNOMED:has_subject_relationship_context',
                             'SNOMED:has_surgical_approach',
                             'SNOMED:has_technique',
                             'SNOMED:has_temporal_context',
                             'SNOMED:has_time_aspect',
                             'SNOMED:has_units',
                             'UMLS:has_structural_class',
                             'UMLS:has_supported_concept_property',
                             'UMLS:has_supported_concept_relationship',
                             'UMLS:may_be_qualified_by'],
         'slot_uri': 'biolink:has_attribute'} })
    deprecated: Optional[bool] = Field(default=None, description="""A boolean flag indicating that an entity is no longer considered current or valid.""", json_schema_extra = { "linkml_meta": {'alias': 'deprecated',
         'definition_uri': 'https://w3id.org/biolink/vocab/deprecated',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['oboInOwl:ObsoleteClass'],
         'slot_uri': 'biolink:deprecated'} })
    provided_by: Optional[List[str]] = Field(default=None, description="""The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.""", json_schema_extra = { "linkml_meta": {'alias': 'provided_by',
         'definition_uri': 'https://w3id.org/biolink/vocab/provided_by',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:provided_by'} })
    full_name: Optional[str] = Field(default=None, description="""a long-form human readable name for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'full_name',
         'definition_uri': 'https://w3id.org/biolink/vocab/full_name',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:full_name'} })
    synonym: Optional[List[str]] = Field(default=None, description="""Alternate human-readable names for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'synonym',
         'aliases': ['alias'],
         'definition_uri': 'https://w3id.org/biolink/vocab/synonym',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'narrow_mappings': ['skos:altLabel',
                             'gff3:Alias',
                             'AGRKB:synonyms',
                             'gpi:DB_Object_Synonyms',
                             'HANCESTRO:0330',
                             'IAO:0000136',
                             'RXNORM:has_tradename'],
         'slot_uri': 'biolink:synonym'} })


class DisplayColor(ProvEntity, NamedThing):
    """
    One element of a color palette representing the association between a color and entity,
    """
    linkml_meta: ClassVar[LinkMLMeta] = LinkMLMeta({'from_schema': 'https://w3id.org/brain-bican/bke-taxonomy',
         'mixins': ['ProvEntity'],
         'slot_usage': {'id': {'description': '( database GUID)',
                               'from_schema': 'bican_biolink',
                               'name': 'id',
                               'range': 'string'},
                        'xref': {'from_schema': 'bican_biolink',
                                 'local_names': {'allen': {'local_name_source': 'allen',
                                                           'local_name_value': 'unique_id'}},
                                 'name': 'xref'}}})

    id: str = Field(default=..., description="""( database GUID)""", json_schema_extra = { "linkml_meta": {'alias': 'id',
         'definition_uri': 'https://w3id.org/biolink/vocab/id',
         'domain': 'entity',
         'domain_of': ['ontology class',
                       'entity',
                       'attribute',
                       'named thing',
                       'taxonomic rank',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'Abbreviation',
                       'ColorPalette',
                       'DisplayColor'],
         'exact_mappings': ['AGRKB:primaryId', 'gff3:ID', 'gpi:DB_Object_ID'],
         'in_subset': ['translator_minimal'],
         'slot_uri': 'biolink:id'} })
    xref: Optional[List[str]] = Field(default=None, description="""A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.""", json_schema_extra = { "linkml_meta": {'alias': 'xref',
         'aliases': ['dbxref', 'Dbxref', 'DbXref', 'record_url', 'source_record_urls'],
         'definition_uri': 'https://w3id.org/biolink/vocab/xref',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'gene',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ObservationMatrix',
                       'ObservationRow',
                       'Abbreviation',
                       'MatrixFile',
                       'ColorPalette',
                       'DisplayColor'],
         'in_subset': ['translator_minimal'],
         'local_names': {'allen': {'local_name_source': 'allen',
                                   'local_name_value': 'unique_id'}},
         'narrow_mappings': ['gff3:Dbxref', 'gpi:DB_Xrefs'],
         'slot_uri': 'biolink:xref'} })
    part_of_palette: Optional[str] = Field(default=None, description="""The color palette for which the display color map is part of.""", json_schema_extra = { "linkml_meta": {'alias': 'part_of_palette', 'domain_of': ['DisplayColor']} })
    is_color_for_taxon: Optional[str] = Field(default=None, description="""The associated cell type taxon for the specified display color.""", json_schema_extra = { "linkml_meta": {'alias': 'is_color_for_taxon',
         'domain_of': ['DisplayColor'],
         'local_names': {'allen': {'local_name_source': 'allen',
                                   'local_name_value': 'is_color_for'}}} })
    is_color_for_set: Optional[str] = Field(default=None, description="""The associated cell type set of the specified display color.""", json_schema_extra = { "linkml_meta": {'alias': 'is_color_for_set',
         'domain_of': ['DisplayColor'],
         'local_names': {'allen': {'local_name_source': 'allen',
                                   'local_name_value': 'is_color_for'}}} })
    color_hex_triplet: Optional[str] = Field(default=None, description="""A hex string representing the display color for an associated entity.""", json_schema_extra = { "linkml_meta": {'alias': 'color_hex_triplet',
         'domain_of': ['DisplayColor'],
         'examples': [{'value': '#450099'}]} })
    was_derived_from: Optional[str] = Field(default=None, description="""A derivation is a transformation of an entity into another, an update of an entity resulting in a new one, or the construction of a new entity based on a pre-existing entity.""", json_schema_extra = { "linkml_meta": {'alias': 'was_derived_from',
         'domain_of': ['ProvEntity',
                       'CellTypeTaxonomy',
                       'ClusterSet',
                       'ObservationMatrix',
                       'ObservationRow'],
         'slot_uri': 'prov:wasDerivedFrom'} })
    was_generated_by: Optional[str] = Field(default=None, description="""Generation is the completion of production of a new entity by an activity. This entity did not exist before generation and becomes available for usage after this generation.""", json_schema_extra = { "linkml_meta": {'alias': 'was_generated_by',
         'domain_of': ['ProvEntity',
                       'CellTypeTaxonomy',
                       'ClusterSet',
                       'ObservationMatrix'],
         'slot_uri': 'prov:wasGeneratedBy'} })
    iri: Optional[str] = Field(default=None, description="""An IRI for an entity. This is determined by the id using expansion rules.""", json_schema_extra = { "linkml_meta": {'alias': 'iri',
         'definition_uri': 'https://w3id.org/biolink/vocab/iri',
         'domain_of': ['attribute',
                       'entity',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['WIKIDATA_PROPERTY:P854'],
         'in_subset': ['translator_minimal', 'samples'],
         'slot_uri': 'biolink:iri'} })
    category: List[Literal["https://identifiers.org/brain-bican/vocab/DisplayColor","bican:DisplayColor"]] = Field(default=["bican:DisplayColor"], description="""Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}.""", json_schema_extra = { "linkml_meta": {'alias': 'category',
         'definition_uri': 'https://w3id.org/biolink/vocab/category',
         'designates_type': True,
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'type',
         'is_class_field': True,
         'slot_uri': 'biolink:category'} })
    type: Optional[List[str]] = Field(default=None, json_schema_extra = { "linkml_meta": {'alias': 'type',
         'definition_uri': 'https://w3id.org/biolink/vocab/type',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['gff3:type', 'gpi:DB_Object_Type'],
         'mappings': ['rdf:type'],
         'slot_uri': 'rdf:type'} })
    name: Optional[str] = Field(default=None, description="""A human-readable name for an attribute or entity.""", json_schema_extra = { "linkml_meta": {'alias': 'name',
         'aliases': ['label', 'display name', 'title'],
         'definition_uri': 'https://w3id.org/biolink/vocab/name',
         'domain': 'entity',
         'domain_of': ['attribute',
                       'entity',
                       'macromolecular machine mixin',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene or gene product',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'Cluster',
                       'ColorPalette'],
         'exact_mappings': ['gff3:Name', 'gpi:DB_Object_Name'],
         'in_subset': ['translator_minimal', 'samples'],
         'mappings': ['rdfs:label'],
         'narrow_mappings': ['dct:title', 'WIKIDATA_PROPERTY:P1476'],
         'slot_uri': 'rdfs:label'} })
    description: Optional[str] = Field(default=None, description="""a human-readable description of an entity""", json_schema_extra = { "linkml_meta": {'alias': 'description',
         'aliases': ['definition'],
         'definition_uri': 'https://w3id.org/biolink/vocab/description',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome',
                       'CellTypeTaxonomy',
                       'CellTypeSet',
                       'CellTypeTaxon',
                       'ClusterSet',
                       'ColorPalette'],
         'exact_mappings': ['IAO:0000115', 'skos:definitions'],
         'in_subset': ['translator_minimal'],
         'mappings': ['dct:description'],
         'narrow_mappings': ['gff3:Description'],
         'slot_uri': 'dct:description'} })
    has_attribute: Optional[List[str]] = Field(default=None, description="""connects any entity to an attribute""", json_schema_extra = { "linkml_meta": {'alias': 'has_attribute',
         'close_mappings': ['OBI:0001927'],
         'definition_uri': 'https://w3id.org/biolink/vocab/has_attribute',
         'domain': 'entity',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['SIO:000008'],
         'in_subset': ['samples'],
         'narrow_mappings': ['OBAN:association_has_subject_property',
                             'OBAN:association_has_object_property',
                             'CPT:has_possibly_included_panel_element',
                             'DRUGBANK:category',
                             'EFO:is_executed_in',
                             'HANCESTRO:0301',
                             'LOINC:has_action_guidance',
                             'LOINC:has_adjustment',
                             'LOINC:has_aggregation_view',
                             'LOINC:has_approach_guidance',
                             'LOINC:has_divisor',
                             'LOINC:has_exam',
                             'LOINC:has_method',
                             'LOINC:has_modality_subtype',
                             'LOINC:has_object_guidance',
                             'LOINC:has_scale',
                             'LOINC:has_suffix',
                             'LOINC:has_time_aspect',
                             'LOINC:has_time_modifier',
                             'LOINC:has_timing_of',
                             'NCIT:R88',
                             'NCIT:eo_disease_has_property_or_attribute',
                             'NCIT:has_data_element',
                             'NCIT:has_pharmaceutical_administration_method',
                             'NCIT:has_pharmaceutical_basic_dose_form',
                             'NCIT:has_pharmaceutical_intended_site',
                             'NCIT:has_pharmaceutical_release_characteristics',
                             'NCIT:has_pharmaceutical_state_of_matter',
                             'NCIT:has_pharmaceutical_transformation',
                             'NCIT:is_qualified_by',
                             'NCIT:qualifier_applies_to',
                             'NCIT:role_has_domain',
                             'NCIT:role_has_range',
                             'INO:0000154',
                             'HANCESTRO:0308',
                             'OMIM:has_inheritance_type',
                             'orphanet:C016',
                             'orphanet:C017',
                             'RO:0000053',
                             'RO:0000086',
                             'RO:0000087',
                             'SNOMED:has_access',
                             'SNOMED:has_clinical_course',
                             'SNOMED:has_count_of_base_of_active_ingredient',
                             'SNOMED:has_dose_form_administration_method',
                             'SNOMED:has_dose_form_release_characteristic',
                             'SNOMED:has_dose_form_transformation',
                             'SNOMED:has_finding_context',
                             'SNOMED:has_finding_informer',
                             'SNOMED:has_inherent_attribute',
                             'SNOMED:has_intent',
                             'SNOMED:has_interpretation',
                             'SNOMED:has_laterality',
                             'SNOMED:has_measurement_method',
                             'SNOMED:has_method',
                             'SNOMED:has_priority',
                             'SNOMED:has_procedure_context',
                             'SNOMED:has_process_duration',
                             'SNOMED:has_property',
                             'SNOMED:has_revision_status',
                             'SNOMED:has_scale_type',
                             'SNOMED:has_severity',
                             'SNOMED:has_specimen',
                             'SNOMED:has_state_of_matter',
                             'SNOMED:has_subject_relationship_context',
                             'SNOMED:has_surgical_approach',
                             'SNOMED:has_technique',
                             'SNOMED:has_temporal_context',
                             'SNOMED:has_time_aspect',
                             'SNOMED:has_units',
                             'UMLS:has_structural_class',
                             'UMLS:has_supported_concept_property',
                             'UMLS:has_supported_concept_relationship',
                             'UMLS:may_be_qualified_by'],
         'slot_uri': 'biolink:has_attribute'} })
    deprecated: Optional[bool] = Field(default=None, description="""A boolean flag indicating that an entity is no longer considered current or valid.""", json_schema_extra = { "linkml_meta": {'alias': 'deprecated',
         'definition_uri': 'https://w3id.org/biolink/vocab/deprecated',
         'domain_of': ['entity',
                       'attribute',
                       'named thing',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'exact_mappings': ['oboInOwl:ObsoleteClass'],
         'slot_uri': 'biolink:deprecated'} })
    provided_by: Optional[List[str]] = Field(default=None, description="""The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.""", json_schema_extra = { "linkml_meta": {'alias': 'provided_by',
         'definition_uri': 'https://w3id.org/biolink/vocab/provided_by',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:provided_by'} })
    full_name: Optional[str] = Field(default=None, description="""a long-form human readable name for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'full_name',
         'definition_uri': 'https://w3id.org/biolink/vocab/full_name',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'is_a': 'node property',
         'slot_uri': 'biolink:full_name'} })
    synonym: Optional[List[str]] = Field(default=None, description="""Alternate human-readable names for a thing""", json_schema_extra = { "linkml_meta": {'alias': 'synonym',
         'aliases': ['alias'],
         'definition_uri': 'https://w3id.org/biolink/vocab/synonym',
         'domain': 'named thing',
         'domain_of': ['named thing',
                       'attribute',
                       'organism taxon',
                       'information content entity',
                       'dataset',
                       'physical entity',
                       'activity',
                       'procedure',
                       'material sample',
                       'biological entity',
                       'gene',
                       'genome'],
         'in_subset': ['translator_minimal'],
         'is_a': 'node property',
         'narrow_mappings': ['skos:altLabel',
                             'gff3:Alias',
                             'AGRKB:synonyms',
                             'gpi:DB_Object_Synonyms',
                             'HANCESTRO:0330',
                             'IAO:0000136',
                             'RXNORM:has_tradename'],
         'slot_uri': 'biolink:synonym'} })


# Model rebuild
# see https://pydantic-docs.helpmanual.io/usage/models/#rebuilding-a-model
OntologyClass.model_rebuild()
Annotation.model_rebuild()
QuantityValue.model_rebuild()
Entity.model_rebuild()
NamedThing.model_rebuild()
Attribute.model_rebuild()
TaxonomicRank.model_rebuild()
OrganismTaxon.model_rebuild()
InformationContentEntity.model_rebuild()
Dataset.model_rebuild()
PhysicalEssenceOrOccurrent.model_rebuild()
PhysicalEssence.model_rebuild()
PhysicalEntity.model_rebuild()
Occurrent.model_rebuild()
ActivityAndBehavior.model_rebuild()
Activity.model_rebuild()
Procedure.model_rebuild()
SubjectOfInvestigation.model_rebuild()
MaterialSample.model_rebuild()
ThingWithTaxon.model_rebuild()
BiologicalEntity.model_rebuild()
GenomicEntity.model_rebuild()
ChemicalEntityOrGeneOrGeneProduct.model_rebuild()
MacromolecularMachineMixin.model_rebuild()
GeneOrGeneProduct.model_rebuild()
Gene.model_rebuild()
Genome.model_rebuild()
ProvActivity.model_rebuild()
ProvEntity.model_rebuild()
VersionedNamedThing.model_rebuild()
Checksum.model_rebuild()
GeneAnnotation.model_rebuild()
GenomeAnnotation.model_rebuild()
GenomeAssembly.model_rebuild()
AnnotationCollection.model_rebuild()
ImageDataset.model_rebuild()
AnatomicalSpace.model_rebuild()
ParcellationTerminology.model_rebuild()
ParcellationTermSet.model_rebuild()
ParcellationTerm.model_rebuild()
ParcellationColorScheme.model_rebuild()
ParcellationColorAssignment.model_rebuild()
AnatomicalAnnotationSet.model_rebuild()
ParcellationAnnotation.model_rebuild()
ParcellationAnnotationTermMap.model_rebuild()
ParcellationAtlas.model_rebuild()
CellTypeTaxonomyCreationProcess.model_rebuild()
CellTypeTaxonomy.model_rebuild()
CellTypeSet.model_rebuild()
CellTypeTaxon.model_rebuild()
ClusteringProcess.model_rebuild()
ClusterSet.model_rebuild()
Cluster.model_rebuild()
ObservationMatrixCreationProcess.model_rebuild()
ObservationMatrix.model_rebuild()
ObservationRow.model_rebuild()
CellSpecimen.model_rebuild()
Abbreviation.model_rebuild()
MatrixFile.model_rebuild()
ColorPalette.model_rebuild()
DisplayColor.model_rebuild()

