{
    "$defs": {
        "Activity": {
            "additionalProperties": false,
            "description": "An activity is something that occurs over a period of time and acts upon or with entities; it may include consuming, processing, transforming, modifying, relocating, using, or generating entities.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}. NOTE: The category slot was modified to have a curie range and a pattern for bican categories.",
                    "enum": [
                        "biolink:Activity"
                    ],
                    "items": {
                        "pattern": "^bican:[A-Z][A-Za-z]+$",
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": "boolean"
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": "string"
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": "string"
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": "string"
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": "string"
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "id"
            ],
            "title": "Activity",
            "type": "object"
        },
        "AnnotationCollection": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "annotations": {
                    "items": {
                        "$ref": "#/$defs/GeneAnnotation"
                    },
                    "type": "array"
                },
                "genome_annotations": {
                    "items": {
                        "$ref": "#/$defs/GenomeAnnotation"
                    },
                    "type": "array"
                },
                "genome_assemblies": {
                    "items": {
                        "$ref": "#/$defs/GenomeAssembly"
                    },
                    "type": "array"
                }
            },
            "title": "AnnotationCollection",
            "type": "object"
        },
        "Attribute": {
            "additionalProperties": false,
            "description": "A property or characteristic of an entity. For example, an apple may have properties such as color, shape, age, crispiness. An environmental sample may have attributes such as depth, lat, long, material.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}. NOTE: The category slot was modified to have a curie range and a pattern for bican categories.",
                    "enum": [
                        "biolink:Attribute"
                    ],
                    "items": {
                        "pattern": "^bican:[A-Z][A-Za-z]+$",
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": "boolean"
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": "string"
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": "string"
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "has_attribute_type": {
                    "description": "connects an attribute to a class that describes it",
                    "type": "string"
                },
                "has_qualitative_value": {
                    "description": "connects an attribute to a value",
                    "type": "string"
                },
                "has_quantitative_value": {
                    "description": "connects an attribute to a value",
                    "items": {
                        "$ref": "#/$defs/QuantityValue"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": "string"
                },
                "name": {
                    "description": "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term.",
                    "type": "string"
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "id",
                "has_attribute_type"
            ],
            "title": "Attribute",
            "type": "object"
        },
        "AuthorityType": {
            "description": "",
            "enum": [
                "ENSEMBL",
                "NCBI"
            ],
            "title": "AuthorityType",
            "type": "string"
        },
        "BioType": {
            "description": "",
            "enum": [
                "protein_coding",
                "noncoding"
            ],
            "title": "BioType",
            "type": "string"
        },
        "Checksum": {
            "additionalProperties": false,
            "description": "Checksum values associated with digital entities.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}. NOTE: The category slot was modified to have a curie range and a pattern for bican categories.",
                    "enum": [
                        "bican:Checksum"
                    ],
                    "items": {
                        "pattern": "^bican:[A-Z][A-Za-z]+$",
                        "type": "string"
                    },
                    "type": "array"
                },
                "checksum_algorithm": {
                    "$ref": "#/$defs/DigestType",
                    "description": "The type of cryptographic hash function used to calculate the checksum value."
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": "boolean"
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": "string"
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": "string"
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": "string"
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "value": {
                    "description": "The checksum value obtained from a specific cryotographic hash function.",
                    "type": "string"
                }
            },
            "required": [
                "id"
            ],
            "title": "Checksum",
            "type": "object"
        },
        "Dataset": {
            "additionalProperties": false,
            "description": "an item that refers to a collection of data from a data source.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}. NOTE: The category slot was modified to have a curie range and a pattern for bican categories.",
                    "enum": [
                        "biolink:Dataset"
                    ],
                    "items": {
                        "pattern": "^bican:[A-Z][A-Za-z]+$",
                        "type": "string"
                    },
                    "type": "array"
                },
                "creation_date": {
                    "description": "date on which an entity was created. This can be applied to nodes or edges",
                    "format": "date",
                    "type": "string"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": "boolean"
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": "string"
                },
                "format": {
                    "type": "string"
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": "string"
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": "string"
                },
                "license": {
                    "type": "string"
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": "string"
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "rights": {
                    "type": "string"
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "id"
            ],
            "title": "Dataset",
            "type": "object"
        },
        "DigestType": {
            "description": "",
            "enum": [
                "spdx:checksumAlgorithm_sha1",
                "spdx:checksumAlgorithm_md5",
                "spdx:checksumAlgorithm_sha256"
            ],
            "title": "DigestType",
            "type": "string"
        },
        "Gene": {
            "additionalProperties": false,
            "description": "A region (or regions) that includes all of the sequence elements necessary to encode a functional transcript. A gene locus may include regulatory regions, transcribed regions and/or other functional sequence regions.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}. NOTE: The category slot was modified to have a curie range and a pattern for bican categories.",
                    "enum": [
                        "biolink:Gene"
                    ],
                    "items": {
                        "pattern": "^bican:[A-Z][A-Za-z]+$",
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": "boolean"
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": "string"
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": "string"
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "has_biological_sequence": {
                    "description": "connects a genomic feature to its sequence",
                    "type": "string"
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": "string"
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": "string"
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "symbol": {
                    "description": "Symbol for a particular thing",
                    "type": "string"
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "id"
            ],
            "title": "Gene",
            "type": "object"
        },
        "GeneAnnotation": {
            "additionalProperties": false,
            "description": "An annotation describing the location, boundaries, and functions of  individual genes within a genome annotation.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}. NOTE: The category slot was modified to have a curie range and a pattern for bican categories.",
                    "enum": [
                        "bican:GeneAnnotation"
                    ],
                    "items": {
                        "pattern": "^bican:[A-Z][A-Za-z]+$",
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": "boolean"
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": "string"
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": "string"
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "has_biological_sequence": {
                    "description": "connects a genomic feature to its sequence",
                    "type": "string"
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": "string"
                },
                "molecular_type": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/BioType"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "type": "string"
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": "string"
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "referenced_in": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "The genome annotation that this gene annotation was referenced from.",
                    "type": "string"
                },
                "source_id": {
                    "description": "The authority specific identifier.",
                    "type": "string"
                },
                "symbol": {
                    "description": "Symbol for a particular thing",
                    "type": "string"
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "referenced_in",
                "id"
            ],
            "title": "GeneAnnotation",
            "type": "object"
        },
        "Genome": {
            "additionalProperties": false,
            "description": "A genome is the sum of genetic material within a cell or virion.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}. NOTE: The category slot was modified to have a curie range and a pattern for bican categories.",
                    "enum": [
                        "biolink:Genome"
                    ],
                    "items": {
                        "pattern": "^bican:[A-Z][A-Za-z]+$",
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": "boolean"
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": "string"
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": "string"
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "has_biological_sequence": {
                    "description": "connects a genomic feature to its sequence",
                    "type": "string"
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": "string"
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": "string"
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "id"
            ],
            "title": "Genome",
            "type": "object"
        },
        "GenomeAnnotation": {
            "additionalProperties": false,
            "description": "Location and nomenclature of genes and all of the coding regions in a genome assembly  and the classification of genes and transcripts into types.",
            "properties": {
                "authority": {
                    "$ref": "#/$defs/AuthorityType",
                    "description": "The organization responsible for publishing the data."
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}. NOTE: The category slot was modified to have a curie range and a pattern for bican categories.",
                    "enum": [
                        "bican:GenomeAnnotation"
                    ],
                    "items": {
                        "pattern": "^bican:[A-Z][A-Za-z]+$",
                        "type": "string"
                    },
                    "type": "array"
                },
                "content_url": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": "boolean"
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": "string"
                },
                "digest": {
                    "description": "Stores checksum information.",
                    "items": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": "string"
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "has_biological_sequence": {
                    "description": "connects a genomic feature to its sequence",
                    "type": "string"
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": "string"
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": "string"
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "reference_assembly": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "The reference genome assembly that this genome annotation was created from.",
                    "type": "string"
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "version": {
                    "type": "string"
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "reference_assembly",
                "id"
            ],
            "title": "GenomeAnnotation",
            "type": "object"
        },
        "GenomeAssembly": {
            "additionalProperties": false,
            "description": "Genome assembly to contain version and label information",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}. NOTE: The category slot was modified to have a curie range and a pattern for bican categories.",
                    "enum": [
                        "bican:GenomeAssembly"
                    ],
                    "items": {
                        "pattern": "^bican:[A-Z][A-Za-z]+$",
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": "boolean"
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": "string"
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": "string"
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": "string"
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": "string"
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "strain": {
                    "description": "The genetic variant or subtype of a species or organism.",
                    "type": "string"
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "version": {
                    "type": "string"
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "id"
            ],
            "title": "GenomeAssembly",
            "type": "object"
        },
        "MaterialSample": {
            "additionalProperties": false,
            "description": "A sample is a limited quantity of something (e.g. an individual or set of individuals from a population, or a portion of a substance) to be used for testing, analysis, inspection, investigation, demonstration, or trial use. [SIO]",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}. NOTE: The category slot was modified to have a curie range and a pattern for bican categories.",
                    "enum": [
                        "biolink:MaterialSample"
                    ],
                    "items": {
                        "pattern": "^bican:[A-Z][A-Za-z]+$",
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": "boolean"
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": "string"
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": "string"
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": "string"
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": "string"
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "id"
            ],
            "title": "MaterialSample",
            "type": "object"
        },
        "NamedThing": {
            "additionalProperties": false,
            "description": "a databased entity or concept/class",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}. NOTE: The category slot was modified to have a curie range and a pattern for bican categories.",
                    "enum": [
                        "biolink:NamedThing"
                    ],
                    "items": {
                        "pattern": "^bican:[A-Z][A-Za-z]+$",
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": "boolean"
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": "string"
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": "string"
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": "string"
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": "string"
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "id"
            ],
            "title": "NamedThing",
            "type": "object"
        },
        "OrganismTaxon": {
            "additionalProperties": false,
            "description": "A classification of a set of organisms. Example instances: NCBITaxon:9606 (Homo sapiens), NCBITaxon:2 (Bacteria). Can also be used to represent strains or subspecies.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}. NOTE: The category slot was modified to have a curie range and a pattern for bican categories.",
                    "enum": [
                        "biolink:OrganismTaxon"
                    ],
                    "items": {
                        "pattern": "^bican:[A-Z][A-Za-z]+$",
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": "boolean"
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": "string"
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": "string"
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "has_taxonomic_rank": {
                    "type": "string"
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": "string"
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": "string"
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "id"
            ],
            "title": "OrganismTaxon",
            "type": "object"
        },
        "PhysicalEntity": {
            "additionalProperties": false,
            "description": "An entity that has material reality (a.k.a. physical essence).",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}. NOTE: The category slot was modified to have a curie range and a pattern for bican categories.",
                    "enum": [
                        "biolink:PhysicalEntity"
                    ],
                    "items": {
                        "pattern": "^bican:[A-Z][A-Za-z]+$",
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": "boolean"
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": "string"
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": "string"
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": "string"
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": "string"
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "id"
            ],
            "title": "PhysicalEntity",
            "type": "object"
        },
        "Procedure": {
            "additionalProperties": false,
            "description": "A series of actions conducted in a certain order or manner",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}. NOTE: The category slot was modified to have a curie range and a pattern for bican categories.",
                    "enum": [
                        "biolink:Procedure"
                    ],
                    "items": {
                        "pattern": "^bican:[A-Z][A-Za-z]+$",
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": "boolean"
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": "string"
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": "string"
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": "string"
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": "string"
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "id"
            ],
            "title": "Procedure",
            "type": "object"
        },
        "QuantityValue": {
            "additionalProperties": false,
            "description": "A value of an attribute that is quantitative and measurable, expressed as a combination of a unit and a numeric value",
            "properties": {
                "has_numeric_value": {
                    "description": "connects a quantity value to a number",
                    "type": "number"
                },
                "has_unit": {
                    "description": "connects a quantity value to a unit",
                    "type": "string"
                }
            },
            "title": "QuantityValue",
            "type": "object"
        },
        "TaxonomicRank": {
            "additionalProperties": false,
            "description": "A descriptor for the rank within a taxonomic classification. Example instance: TAXRANK:0000017 (kingdom)",
            "properties": {
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                }
            },
            "required": [
                "id"
            ],
            "title": "TaxonomicRank",
            "type": "object"
        }
    },
    "$id": "https://identifiers.org/brain-bican/genome-annotation-schema",
    "$schema": "https://json-schema.org/draft/2019-09/schema",
    "additionalProperties": true,
    "description": "",
    "metamodel_version": "1.7.0",
    "properties": {
        "annotations": {
            "items": {
                "$ref": "#/$defs/GeneAnnotation"
            },
            "type": "array"
        },
        "genome_annotations": {
            "items": {
                "$ref": "#/$defs/GenomeAnnotation"
            },
            "type": "array"
        },
        "genome_assemblies": {
            "items": {
                "$ref": "#/$defs/GenomeAssembly"
            },
            "type": "array"
        }
    },
    "title": "genome-annotation-schema",
    "type": "object",
    "version": null
}
