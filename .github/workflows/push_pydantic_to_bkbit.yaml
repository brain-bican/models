name: push pydantic models to brain-bican/bkbit

on:
  workflow_dispatch:
    inputs:
      model:
        description: 'model name'
        required: true
        type: string


jobs:
  changed_files:
    runs-on: ubuntu-latest  
    name: Test changed-files
    steps:
      - uses: actions/checkout@v4
      - name: Set up Git and cloning repository
        env:
          TARGET_REPO: brain-bican/bkbit
          PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          git config --global user.name "puja-trivedi"
          git config --global user.email "xspuja@gmail.com"
          git clone https://x-access-token:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/$TARGET_REPO.git

      - name: Check if the model exists
        run: |
          if [ ! -f models_py-autogen/${{ inputs.model }}.py ]; then
            echo "Incorrect model name"
            exit 1
          fi
      - name: Compare pydantic files
        id: compare
        run: |
          if [ ! -f models_py-autogen/${{ inputs.model }}.py ]; then
            echo "This is new model for bkbit"
            echo "changed=new" >> "$GITHUB_OUTPUT"
          elif diff models_py-autogen/${{ inputs.model }}.py bkbit/models/${{ inputs.model }}.py > /dev/null; then
            echo "No changes in the pydantic model"
            echo "changed=false" >> "$GITHUB_OUTPUT"
          else
            echo "Changes found in the pydantic model"
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Copy the pydantic model to bkbit and commit the changes
        if: ${{ steps.compare.outputs.changed  == 'true' || steps.compare.outputs.changed == 'new' }}
        run: |
          echo "Copying the pydantic model ${{ inputs.model }} to bkbit"
          cp models_py-autogen/${{ inputs.model }}.py bkbit/bkbit/models/

          # Generate a unique branch name
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          BRANCH_NAME="update_${{ inputs.model }}_${TIMESTAMP}"
          echo "Generated branch name: $BRANCH_NAME"
          # Set branch name as output
          echo "branch_name=${BRANCH_NAME}" >> $GITHUB_ENV

          cd bkbit
          git checkout -b $BRANCH_NAME
          git branch
          git add bkbit/models/*
          if [ ${{ steps.compare.outputs.changed }} == 'new' ]; then
            git commit -m "The model ${{ inputs.model }}.py has been added to the brain-bican/models repo. The model in pydantic format is being automatically pushed from brain-bican/models to brain-bican/bkbit."
          else
            git commit -m "The model ${{ inputs.model }}.py has been modified in the brain-bican/models repo. New version of the model in pydantic format is being automatically pushed from brain-bican/models to brain-bican/bkbit."
          fi
          cd ..

      - name: Push changes to bkbit
        if: ${{ steps.compare.outputs.changed  == 'true' || steps.compare.outputs.changed == 'new' }}
        env:
          TARGET_REPO: brain-bican/bkbit
          PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          cd bkbit
          git push origin ${{ env.branch_name }}

      - name: Create pull request to bkbit
        if: ${{ steps.compare.outputs.changed  == 'true' || steps.compare.outputs.changed == 'new' }}
        env:
          TARGET_REPO: brain-bican/bkbit
          PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          curl -X POST -H "Authorization: token ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
          -d "{\"title\":\"Automated PR from brain-bican/models: adding new version of pydantic model\", \"body\":\"This PR include changes to the models:${{ inputs.model }}\", \"head\":\"${{ env.branch_name }}\", \"base\":\"main\"}" \
          https://api.github.com/repos/$TARGET_REPO/pulls
