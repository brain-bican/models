name: push pydantic models to bkbit

on:
  push:
    branches:
      - main
      - push_to_bkbit_workflow_20241202
    
jobs:
  # ------------------------------------------------------------------------------------------------------------------------------------------------
  # Event `pull_request`: Compare the last commit of the main branch or last remote commit of the PR branch -> to the current commit of a PR branch.
  # ------------------------------------------------------------------------------------------------------------------------------------------------
  
  changed_files:
    runs-on: ubuntu-latest  # windows-latest || macos-latest
    name: Test changed-files
    steps:
      - uses: actions/checkout@v4

      - name: Set up Git and cloning repository
        env:
          TARGET_REPO: repronim/reproschema-py
          PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          git config --global user.name "puja-trivedi"
          git config --global user.email "xspuja@gmail.com"
          git clone https://x-access-token:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/$TARGET_REPO.git
      
      - name: Get changed files in the models_py-autogen folder
        id: changed-files-specific
        uses: tj-actions/changed-files@v45
        with:
          files: models_py-autogen/**

      - name: Run step if any file(s) in the models_py-autogen folder change
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files-specific.outputs.all_changed_files }}
        run: |
          echo "One or more files in the models_py-autogen folder has changed."
          echo "List all the files that have changed: $ALL_CHANGED_FILES"
          echo "$ALL_CHANGED_FILES" | tr ',' '\n' | while read -r FILE; do
            FILENAME=$(basename "$FILE")
            echo "Processing file: $FILENAME"
            cp $FILE bkbit/bkbit/models/$FILENAME
          done
          cd bkbit
          git checkout -b "new_version_model"
          git add bkbit/models/*
          git commit -m "Updated model is being copied and pushed from repronim/reproschema-py repository."
          cd ..
    
      - name: Push changes to the new branch
        env:
          TARGET_REPO: brain-bican/bkbit
          PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          cd bkbit
          git push origin new_version_model

      - name: Create a pull request
        env:
          TARGET_REPO: brain-bican/bkbit
          PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          curl -X POST -H "Authorization: token ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
          -d '{"title":"Automated PR: Add new versions of the model(s)", "head":"new_version_model", "base":"main"}' \
          https://api.github.com/repos/$TARGET_REPO/pulls


        # # Extract filename without path
        #   filename=$(basename $file)
        #   branch_name="update_${filename%.*}_model"

        #   # Copy the file to the target repository
        #   cp $file bkbit/bkbit/models/$filename
          
        #   # Navigate to the target repository and create a branch
        #   cd bkbit
        #   git checkout -b $branch_name

        #   # Stage changes and commit
        #   git add bkbit/models/$filename
        #   git commit -m "Updated $filename model is being copied and pushed from brain-bican/models repository."
          
        #   # Push changes to the new branch
        #   git push origin $branch_name
          
        #   # Create a pull request
        #   curl -X POST -H "Authorization: token $PERSONAL_ACCESS_TOKEN" \
        #     -d "{\"title\":\"Automated PR: Update $filename model.\", \"head\":\"$branch_name\", \"base\":\"main\"}" \
        #     https://api.github.com/repos/$TARGET_REPO/pulls
          
        #   # Navigate back to the root directory
        #   cd ..
        # done